{"_lclose": "Win32-based applications should use the CloseHandle function.", "_lcreat": "Creates or opens the specified file.", "_llseek": "Repositions the file pointer for the specified file.", "_lopen": "The _lopen function opens an existing file and sets the file pointer to the beginning of the file.", "_lread": "The _lread function reads data from the specified file.", "_lwrite": "Writes data to the specified file.", "AccessCheckAndAuditAlarmA": "Determines whether a security descriptor grants a specified set of access rights to the client being impersonated by the calling thread.", "AccessCheckByTypeAndAuditAlarmA": "Determines whether a security descriptor grants a specified set of access rights to the client being impersonated by the calling thread.", "AccessCheckByTypeResultListAndAuditAlarmA": "Determines whether a security descriptor grants a specified set of access rights to the client being impersonated by the calling thread.", "AccessCheckByTypeResultListAndAuditAlarmByHandleA": "Determines whether a security descriptor grants a specified set of access rights to the client that the calling thread is impersonating.", "ActivateActCtx": "The ActivateActCtx function activates the specified activation context.", "AddAtomA": "Adds a character string to the local atom table and returns a unique value identifying the string.", "AddAtomW": "Adds a character string to the local atom table and returns a unique value identifying the string.", "AddConditionalAce": "Adds a conditional access control entry.", "AddIntegrityLabelToBoundaryDescriptor": "Adds a new required security identifier to the specified boundary descriptor.", "AddRefActCtx": "The AddRefActCtx function increments the reference count of the specified activation context.", "AddSecureMemoryCacheCallback": "Registers a callback function to be called when a secured memory range is freed or its protections are changed.", "ApplicationRecoveryFinished": "Indicates that the calling application has completed its data recovery.", "ApplicationRecoveryInProgress": "Indicates that the calling application is continuing to recover data.", "BackupEventLogA": "Saves the specified event log to a backup file.", "BackupEventLogW": "Saves the specified event log to a backup file.", "BackupRead": "Back up a file or directory, including the security information.", "BackupSeek": "Seeks forward in a data stream initially accessed by using the BackupRead or BackupWrite function.", "BackupWrite": "Restore a file or directory that was backed up using BackupRead.", "BeginUpdateResourceA": "Retrieves a handle that can be used by the UpdateResource function to add, delete, or replace resources in a binary module.", "BeginUpdateResourceW": "Retrieves a handle that can be used by the UpdateResource function to add, delete, or replace resources in a binary module.", "BindIoCompletionCallback": "Associates the I/O completion port owned by the thread pool with the specified file handle.", "BuildCommDCBA": "Fills a specified DCB structure with values specified in a device-control string.", "BuildCommDCBAndTimeoutsA": "Translates a device-definition string into appropriate device-control block codes and places them into a device control block.", "BuildCommDCBAndTimeoutsW": "Translates a device-definition string into appropriate device-control block codes and places them into a device control block.", "BuildCommDCBW": "Fills a specified DCB structure with values specified in a device-control string.", "CallNamedPipeA": "Connects to a message-type pipe, writes to and reads from the pipe, and then closes the pipe.", "CheckNameLegalDOS8Dot3A": "Determines whether the specified name can be used to create a file on a FAT file system.", "CheckNameLegalDOS8Dot3W": "Determines whether the specified name can be used to create a file on a FAT file system.", "ClearCommBreak": "Restores character transmission for a specified communications device and places the transmission line in a nonbreak state.", "ClearCommError": "Retrieves information about a communications error and reports the current status of a communications device.", "ClearEventLogA": "Clears the specified event log, and optionally saves the current copy of the log to a backup file.", "ClearEventLogW": "Clears the specified event log, and optionally saves the current copy of the log to a backup file.", "CloseEncryptedFileRaw": "Closes an encrypted file after a backup or restore operation, and frees associated system resources.", "CloseEventLog": "Closes the specified event log.", "CommConfigDialogA": "Displays a driver-supplied configuration dialog box.", "CommConfigDialogW": "Displays a driver-supplied configuration dialog box.", "ConvertFiberToThread": "Converts the current fiber into a thread.", "ConvertThreadToFiber": "Converts the current thread into a fiber.", "ConvertThreadToFiberEx": "Converts the current thread into a fiber.", "CopyContext": "Copies a source context structure onto an initialized destination context structure.", "CopyFile": "Copies an existing file to a new file.", "CopyFile2": "Copies an existing file to a new file, notifying the application of its progress through a callback function.", "CopyFileA": "Copies an existing file to a new file.", "CopyFileExA": "Copies an existing file to a new file, notifying the application of its progress through a callback function.", "CopyFileExW": "Copies an existing file to a new file, notifying the application of its progress through a callback function.", "CopyFileTransactedA": "Copies an existing file to a new file as a transacted operation, notifying the application of its progress through a callback function.", "CopyFileTransactedW": "Copies an existing file to a new file as a transacted operation, notifying the application of its progress through a callback function.", "CopyFileW": "Copies an existing file to a new file.", "CreateActCtxA": "The CreateActCtx function creates an activation context.", "CreateActCtxW": "The CreateActCtx function creates an activation context.", "CreateBoundaryDescriptorA": "Creates a boundary descriptor.", "CreateDirectory": "Creates a new directory.", "CreateDirectoryExA": "Creates a new directory with the attributes of a specified template directory.", "CreateDirectoryExW": "Creates a new directory with the attributes of a specified template directory.", "CreateDirectoryTransactedA": "Creates a new directory as a transacted operation, with the attributes of a specified template directory.", "CreateDirectoryTransactedW": "Creates a new directory as a transacted operation, with the attributes of a specified template directory.", "CreateFiber": "Allocates a fiber object, assigns it a stack, and sets up execution to begin at the specified start address, typically the fiber function.", "CreateFiberEx": "Allocates a fiber object, assigns it a stack, and sets up execution to begin at the specified start address, typically the fiber function.", "CreateFileMappingA": "Creates or opens a named or unnamed file mapping object for a specified file.", "CreateFileMappingNumaA": "Creates or opens a named or unnamed file mapping object for a specified file and specifies the NUMA node for the physical memory.", "CreateFileTransactedA": "Creates or opens a file, file stream, or directory as a transacted operation.", "CreateFileTransactedW": "Creates or opens a file, file stream, or directory as a transacted operation.", "CreateHardLinkA": "Establishes a hard link between an existing file and a new file.", "CreateHardLinkTransactedA": "Establishes a hard link between an existing file and a new file as a transacted operation.", "CreateHardLinkTransactedW": "Establishes a hard link between an existing file and a new file as a transacted operation.", "CreateHardLinkW": "Establishes a hard link between an existing file and a new file.", "CreateJobObjectA": "Creates or opens a job object.", "CreateMailslotA": "Creates a mailslot with the specified name and returns a handle that a mailslot server can use to perform operations on the mailslot.", "CreateMailslotW": "Creates a mailslot with the specified name and returns a handle that a mailslot server can use to perform operations on the mailslot.", "CreateNamedPipeA": "Creates an instance of a named pipe and returns a handle for subsequent pipe operations.", "CreatePrivateNamespaceA": "Creates a private namespace.", "CreateProcessWithLogonW": "Creates a new process and its primary thread.", "CreateProcessWithTokenW": "Creates a new process and its primary thread.", "CreateSemaphoreA": "Creates or opens a named or unnamed semaphore object.", "CreateSemaphoreExA": "Creates or opens a named or unnamed semaphore object and returns a handle to the object.", "CreateSymbolicLinkA": "Creates a symbolic link.", "CreateSymbolicLinkTransactedA": "Creates a symbolic link as a transacted operation.", "CreateSymbolicLinkTransactedW": "Creates a symbolic link as a transacted operation.", "CreateSymbolicLinkW": "Creates a symbolic link.", "CreateTapePartition": "Reformats a tape.", "CreateUmsCompletionList": "Creates a user-mode scheduling completion list.", "CreateUmsThreadContext": "Creates a user-mode scheduling thread context to represent a UMS worker thread.", "DeactivateActCtx": "The DeactivateActCtx function deactivates the activation context corresponding to the specified cookie.", "DebugBreakProcess": "Causes a breakpoint exception to occur in the specified process.", "DebugSetProcessKillOnExit": "Sets the action to be performed when the calling thread exits.", "DecryptFileA": "Decrypts an encrypted file or directory.", "DecryptFileW": "Decrypts an encrypted file or directory.", "DefineDosDeviceA": "Defines, redefines, or deletes MS-DOS device names.", "DeleteAtom": "Decrements the reference count of a local string atom.", "DeleteFiber": "Deletes an existing fiber.", "DeleteFile": "Deletes an existing file.", "DeleteFileTransactedA": "Deletes an existing file as a transacted operation.", "DeleteFileTransactedW": "Deletes an existing file as a transacted operation.", "DeleteUmsCompletionList": "Deletes the specified user-mode scheduling completion list.", "DeleteUmsThreadContext": "Deletes the specified user-mode scheduling thread context.", "DeleteVolumeMountPointA": "Deletes a drive letter or mounted folder.", "DequeueUmsCompletionListItems": "Retrieves user-mode scheduling worker threads from the specified UMS completion list.", "DeregisterEventSource": "Closes the specified event log.", "DestroyThreadpoolEnvironment": "Deletes the specified callback environment.", "DisableThreadProfiling": "Disables thread profiling.", "DnsHostnameToComputerNameA": "Converts a DNS-style host name to a NetBIOS-style computer name.", "DnsHostnameToComputerNameW": "Converts a DNS-style host name to a NetBIOS-style computer name.", "DosDateTimeToFileTime": "Converts MS-DOS date and time values to a file time.", "EnableProcessOptionalXStateFeatures": "", "EnableThreadProfiling": "Enables thread profiling on the specified thread.", "EncryptFileA": "Encrypts a file or directory.", "EncryptFileW": "Encrypts a file or directory.", "EndUpdateResourceA": "Commits or discards changes made prior to a call to UpdateResource.", "EndUpdateResourceW": "Commits or discards changes made prior to a call to UpdateResource.", "EnterUmsSchedulingMode": "Converts the calling thread into a user-mode scheduling scheduler thread.", "EnumResourceLanguagesA": "Enumerates language-specific resources, of the specified type and name, associated with a binary module.", "EnumResourceLanguagesW": "Enumerates language-specific resources, of the specified type and name, associated with a binary module.", "EnumResourceTypesA": "Enumerates resource types within a binary module.", "EnumResourceTypesW": "Enumerates resource types within a binary module.", "EraseTape": "Erases all or part of a tape.", "EscapeCommFunction": "Directs the specified communications device to perform an extended function.", "ExecuteUmsThread": "Runs the specified UMS worker thread.", "FatalExit": "Transfers execution control to the debugger.", "FileEncryptionStatusA": "Retrieves the encryption status of the specified file.", "FileEncryptionStatusW": "Retrieves the encryption status of the specified file.", "FileTimeToDosDateTime": "Converts a file time to MS-DOS date and time values.", "FindActCtxSectionGuid": "The FindActCtxSectionGuid function retrieves information on a specific GUID in the current activation context and returns a ACTCTX_SECTION_KEYED_DATA structure.", "FindActCtxSectionStringA": "The FindActCtxSectionString function retrieves information on a specific string in the current activation context and returns a ACTCTX_SECTION_KEYED_DATA structure.", "FindActCtxSectionStringW": "The FindActCtxSectionString function retrieves information on a specific string in the current activation context and returns a ACTCTX_SECTION_KEYED_DATA structure.", "FindAtomA": "Searches the local atom table for the specified character string and retrieves the atom associated with that string.", "FindAtomW": "Searches the local atom table for the specified character string and retrieves the atom associated with that string.", "FindFirstFileNameTransactedW": "Creates an enumeration of all the hard links to the specified file as a transacted operation.", "FindFirstFileTransactedA": "Searches a directory for a file or subdirectory with a name that matches a specific name as a transacted operation.", "FindFirstFileTransactedW": "Searches a directory for a file or subdirectory with a name that matches a specific name as a transacted operation.", "FindFirstStreamTransactedW": "Enumerates the first stream in the specified file or directory as a transacted operation.", "FindFirstVolumeA": "Retrieves the name of a volume on a computer.", "FindFirstVolumeMountPointA": "Retrieves the name of a mounted folder on the specified volume.", "FindFirstVolumeMountPointW": "Retrieves the name of a mounted folder on the specified volume.", "FindNextVolumeA": "Continues a volume search started by a call to the FindFirstVolume function.", "FindNextVolumeMountPointA": "Continues a mounted folder search started by a call to the FindFirstVolumeMountPoint function.", "FindNextVolumeMountPointW": "Continues a mounted folder search started by a call to the FindFirstVolumeMountPoint function.", "FindResourceA": "Determines the location of a resource with the specified type and name in the specified module.", "FindResourceExA": "Determines the location of the resource with the specified type, name, and language in the specified module.", "FindVolumeMountPointClose": "Closes the specified mounted folder search handle.", "FormatMessage": "Formats a message string.", "FormatMessageA": "Formats a message string.", "FormatMessageW": "Formats a message string.", "GetActiveProcessorCount": "Returns the number of active processors in a processor group or in the system.", "GetActiveProcessorGroupCount": "Returns the number of active processor groups in the system.", "GetApplicationRecoveryCallback": "Retrieves a pointer to the callback routine registered for the specified process.", "GetApplicationRestartSettings": "Retrieves the restart information registered for the specified process.", "GetAtomNameA": "Retrieves a copy of the character string associated with the specified local atom.", "GetAtomNameW": "Retrieves a copy of the character string associated with the specified local atom.", "GetBinaryTypeA": "Determines whether a file is an executable file, and if so, which subsystem runs the executable file.", "GetBinaryTypeW": "Determines whether a file is an executable file, and if so, which subsystem runs the executable file.", "GetCommConfig": "Retrieves the current configuration of a communications device.", "GetCommMask": "Retrieves the value of the event mask for a specified communications device.", "GetCommModemStatus": "Retrieves the modem control-register values.", "GetCommPorts": "Gets an array that contains the well-formed COM ports.", "GetCommProperties": "Retrieves information about the communications properties for a specified communications device.", "GetCommState": "Retrieves the current control settings for a specified communications device.", "GetCommTimeouts": "Retrieves the time-out parameters for all read and write operations on a specified communications device.", "GetCompressedFileSizeTransactedA": "Retrieves the actual number of bytes of disk storage used to store a specified file as a transacted operation.", "GetCompressedFileSizeTransactedW": "Retrieves the actual number of bytes of disk storage used to store a specified file as a transacted operation.", "GetComputerNameA": "Retrieves the NetBIOS name of the local computer.", "GetComputerNameW": "Retrieves the NetBIOS name of the local computer.", "GetCurrentActCtx": "The GetCurrentActCtx function returns the handle to the active activation context of the calling thread.", "GetCurrentDirectory": "Retrieves the current directory for the current process.", "GetCurrentHwProfileA": "Retrieves information about the current hardware profile for the local computer.", "GetCurrentHwProfileW": "Retrieves information about the current hardware profile for the local computer.", "GetCurrentUmsThread": "Returns the user-mode scheduling thread context of the calling UMS thread.", "GetDefaultCommConfigA": "Retrieves the default configuration for the specified communications device.", "GetDefaultCommConfigW": "Retrieves the default configuration for the specified communications device.", "GetDevicePowerState": "Retrieves the current power state of the specified device.", "GetDllDirectoryA": "Retrieves the application-specific portion of the search path used to locate DLLs for the application.", "GetDllDirectoryW": "Retrieves the application-specific portion of the search path used to locate DLLs for the application.", "GetEnabledXStateFeatures": "Gets a mask of enabled XState features on x86 or x64 processors.", "GetEnvironmentVariable": "Retrieves the contents of the specified variable from the environment block of the calling process.", "GetEventLogInformation": "Retrieves information about the specified event log.", "GetFileAttributesTransactedA": "Retrieves file system attributes for a specified file or directory as a transacted operation.", "GetFileAttributesTransactedW": "Retrieves file system attributes for a specified file or directory as a transacted operation.", "GetFileBandwidthReservation": "Retrieves the bandwidth reservation properties of the volume on which the specified file resides.", "GetFileInformationByHandleEx": "Retrieves file information for the specified file.", "GetFileSecurityA": "Obtains specified information about the security of a file or directory.", "GetFirmwareEnvironmentVariableA": "Retrieves the value of the specified firmware environment variable.", "GetFirmwareEnvironmentVariableExA": "Retrieves the value of the specified firmware environment variable and its attributes.", "GetFirmwareEnvironmentVariableExW": "Retrieves the value of the specified firmware environment variable and its attributes.", "GetFirmwareEnvironmentVariableW": "Retrieves the value of the specified firmware environment variable.", "GetFirmwareType": "Retrieves the firmware type of the local computer.", "GetFullPathNameTransactedA": "Retrieves the full path and file name of the specified file as a transacted operation.", "GetFullPathNameTransactedW": "Retrieves the full path and file name of the specified file as a transacted operation.", "GetLogicalDriveStringsA": "Fills a buffer with strings that specify valid drives in the system.", "GetLongPathNameTransactedA": "Converts the specified path to its long form as a transacted operation.", "GetLongPathNameTransactedW": "Converts the specified path to its long form as a transacted operation.", "GetMailslotInfo": "Retrieves information about the specified mailslot.", "GetMaximumProcessorCount": "Returns the maximum number of logical processors that a processor group or the system can have.", "GetMaximumProcessorGroupCount": "Returns the maximum number of processor groups that the system can have.", "GetNamedPipeClientComputerNameA": "Retrieves the client computer name for the specified named pipe.", "GetNamedPipeClientProcessId": "Retrieves the client process identifier for the specified named pipe.", "GetNamedPipeClientSessionId": "Retrieves the client session identifier for the specified named pipe.", "GetNamedPipeHandleStateA": "Retrieves information about a specified named pipe.", "GetNamedPipeServerProcessId": "Retrieves the server process identifier for the specified named pipe.", "GetNamedPipeServerSessionId": "Retrieves the server session identifier for the specified named pipe.", "GetNextUmsListItem": "Returns the next user-mode scheduling thread context in a list of thread contexts.", "GetNumaAvailableMemoryNode": "Retrieves the amount of memory available in the specified node.", "GetNumaAvailableMemoryNodeEx": "Retrieves the amount of memory that is available in a node specified as a USHORT value.", "GetNumaNodeNumberFromHandle": "Retrieves the NUMA node associated with the file or I/O device represented by the specified file handle.", "GetNumaNodeProcessorMask": "Retrieves the processor mask for the specified node.", "GetNumaProcessorNode": "Retrieves the node number for the specified processor.", "GetNumaProcessorNodeEx": "Retrieves the node number as a USHORT value for the specified logical processor.", "GetNumaProximityNode": "Retrieves the NUMA node number that corresponds to the specified proximity domain identifier.", "GetNumberOfEventLogRecords": "Retrieves the number of records in the specified event log.", "GetOldestEventLogRecord": "Retrieves the absolute record number of the oldest record in the specified event log.", "GetPrivateProfileInt": "Retrieves an integer associated with a key in the specified section of an initialization file.", "GetPrivateProfileIntA": "Retrieves an integer associated with a key in the specified section of an initialization file.", "GetPrivateProfileIntW": "Retrieves an integer associated with a key in the specified section of an initialization file.", "GetPrivateProfileSection": "Retrieves all the keys and values for the specified section of an initialization file.", "GetPrivateProfileSectionA": "Retrieves all the keys and values for the specified section of an initialization file.", "GetPrivateProfileSectionNames": "Retrieves the names of all sections in an initialization file.", "GetPrivateProfileSectionNamesA": "Retrieves the names of all sections in an initialization file.", "GetPrivateProfileSectionNamesW": "Retrieves the names of all sections in an initialization file.", "GetPrivateProfileSectionW": "Retrieves all the keys and values for the specified section of an initialization file.", "GetPrivateProfileString": "Retrieves a string from the specified section in an initialization file.", "GetPrivateProfileStringA": "Retrieves a string from the specified section in an initialization file.", "GetPrivateProfileStringW": "Retrieves a string from the specified section in an initialization file.", "GetPrivateProfileStruct": "Retrieves the data associated with a key in the specified section of an initialization file.", "GetPrivateProfileStructA": "Retrieves the data associated with a key in the specified section of an initialization file.", "GetPrivateProfileStructW": "Retrieves the data associated with a key in the specified section of an initialization file.", "GetProcessAffinityMask": "Retrieves the process affinity mask for the specified process and the system affinity mask for the system.", "GetProcessDEPPolicy": "Gets the data execution prevention and DEP-ATL thunk emulation settings for the specified 32-bit process.", "GetProcessIoCounters": "Retrieves accounting information for all I/O operations performed by the specified process.", "GetProfileIntA": "Retrieves an integer from a key in the specified section of the Win .ini file.", "GetProfileIntW": "Retrieves an integer from a key in the specified section of the Win .ini file.", "GetProfileSectionA": "Retrieves all the keys and values for the specified section of the Win .ini file.", "GetProfileSectionW": "Retrieves all the keys and values for the specified section of the Win .ini file.", "GetProfileStringA": "Retrieves the string associated with a key in the specified section of the Win .ini file.", "GetProfileStringW": "Retrieves the string associated with a key in the specified section of the Win .ini file.", "GetShortPathNameA": "Retrieves the short path form of the specified path.", "GetSystemDEPPolicy": "Gets the data execution prevention policy setting for the system.", "GetSystemPowerStatus": "Retrieves the power status of the system.", "GetSystemRegistryQuota": "Retrieves the current size of the registry and the maximum size that the registry is allowed to attain on the system.", "GetTapeParameters": "Retrieves information that describes the tape or the tape drive.", "GetTapePosition": "Retrieves the current address of the tape, in logical or absolute blocks.", "GetTapeStatus": "Determines whether the tape device is ready to process tape commands.", "GetTempFileName": "Creates a name for a temporary file.", "GetThreadEnabledXStateFeatures": "", "GetThreadSelectorEntry": "Retrieves a descriptor table entry for the specified selector and thread.", "GetUmsCompletionListEvent": "Retrieves a handle to the event associated with the specified user-mode scheduling completion list.", "GetUmsSystemThreadInformation": "Queries whether the specified thread is a UMS scheduler thread, a UMS worker thread, or a non-UMS thread.", "GetUserNameA": "Retrieves the name of the user associated with the current thread.", "GetUserNameW": "Retrieves the name of the user associated with the current thread.", "GetVolumeNameForVolumeMountPointA": "Retrieves a volume GUID path for the volume that is associated with the specified volume mount point.", "GetVolumePathNameA": "Retrieves the volume mount point where the specified path is mounted.", "GetVolumePathNamesForVolumeNameA": "Retrieves a list of drive letters and mounted folder paths for the specified volume.", "GetXStateFeaturesMask": "Returns the mask of XState features set within a CONTEXT structure.", "GlobalAddAtomA": "Adds a character string to the global atom table and returns a unique value identifying the string.", "GlobalAddAtomExA": "Adds a character string to the global atom table and returns a unique value identifying the string.", "GlobalAddAtomExW": "Adds a character string to the global atom table and returns a unique value identifying the string.", "GlobalAddAtomW": "Adds a character string to the global atom table and returns a unique value identifying the string.", "GlobalAlloc": "Allocates the specified number of bytes from the heap.", "GlobalDeleteAtom": "Decrements the reference count of a global string atom.", "GlobalDiscard": "Discards the specified global memory block.", "GlobalFindAtomA": "Searches the global atom table for the specified character string and retrieves the global atom associated with that string.", "GlobalFindAtomW": "Searches the global atom table for the specified character string and retrieves the global atom associated with that string.", "GlobalFlags": "Retrieves information about the specified global memory object.", "GlobalFree": "Frees the specified global memory object and invalidates its handle.", "GlobalGetAtomNameA": "Retrieves a copy of the character string associated with the specified global atom.", "GlobalGetAtomNameW": "Retrieves a copy of the character string associated with the specified global atom.", "GlobalHandle": "Retrieves the handle associated with the specified pointer to a global memory block.", "GlobalLock": "Locks a global memory object and returns a pointer to the first byte of the object's memory block.", "GlobalMemoryStatus": "Retrieves information about the system's current usage of both physical and virtual memory.", "GlobalReAlloc": "Changes the size or attributes of a specified global memory object.", "GlobalSize": "Retrieves the current size of the specified global memory object, in bytes.", "GlobalUnlock": "Decrements the lock count associated with a memory object that was allocated with GMEM_MOVEABLE.", "HasOverlappedIoCompleted": "Provides a high performance test operation that can be used to poll for the completion of an outstanding I/O operation.", "InitAtomTable": "Initializes the local atom table and sets the number of hash buckets to the specified size.", "InitializeContext": "Initializes a CONTEXT structure inside a buffer with the necessary size and alignment.", "InitializeContext2": "Initializes a CONTEXT structure inside a buffer with the necessary size and alignment, with the option to specify an XSTATE compaction mask.", "InitializeThreadpoolEnvironment": "Initializes a callback environment.", "InterlockedExchangeSubtract": "Performs an atomic subtraction of two values.", "IsBadCodePtr": "Determines whether the calling process has read access to the memory at the specified address.", "IsBadReadPtr": "Verifies that the calling process has read access to the specified range of memory.", "IsBadStringPtrA": "Verifies that the calling process has read access to the specified range of memory.", "IsBadStringPtrW": "Verifies that the calling process has read access to the specified range of memory.", "IsBadWritePtr": "Verifies that the calling process has write access to the specified range of memory.", "IsNativeVhdBoot": "Indicates if the OS was booted from a VHD container.", "IsSystemResumeAutomatic": "Determines the current state of the computer.", "IsTextUnicode": "Determines if a buffer is likely to contain a form of Unicode text.", "LoadModule": "Loads and executes an application or creates a new instance of an existing application.", "LoadPackagedLibrary": "Loads the specified packaged module and its dependencies into the address space of the calling process.", "LocalAlloc": "Allocates the specified number of bytes from the heap.", "LocalFlags": "Retrieves information about the specified local memory object.", "LocalFree": "Frees the specified local memory object and invalidates its handle.", "LocalHandle": "Retrieves the handle associated with the specified pointer to a local memory object.", "LocalLock": "Locks a local memory object and returns a pointer to the first byte of the object's memory block.", "LocalReAlloc": "Changes the size or the attributes of a specified local memory object.", "LocalSize": "Retrieves the current size of the specified local memory object, in bytes.", "LocalUnlock": "Decrements the lock count associated with a memory object that was allocated with LMEM_MOVEABLE.", "LocateXStateFeature": "Retrieves a pointer to the processor state for an XState feature within a CONTEXT structure.", "LogonUserA": "The Win32 LogonUser function attempts to log a user on to the local computer.", "LogonUserExA": "The LogonUserEx function attempts to log a user on to the local computer.", "LogonUserExW": "The LogonUserEx function attempts to log a user on to the local computer.", "LogonUserW": "The Win32 LogonUser function attempts to log a user on to the local computer.", "LookupAccountNameA": "Accepts the name of a system and an account as input.", "LookupAccountNameW": "Accepts the name of a system and an account as input.", "LookupAccountSidA": "Accepts a security identifier as input.", "LookupAccountSidLocalA": "Retrieves the name of the account for the specified SID on the local machine.", "LookupAccountSidLocalW": "Retrieves the name of the account for the specified SID on the local machine.", "LookupAccountSidW": "Accepts a security identifier as input.", "LookupPrivilegeDisplayNameA": "Retrieves the display name that represents a specified privilege.", "LookupPrivilegeDisplayNameW": "Retrieves the display name that represents a specified privilege.", "LookupPrivilegeNameA": "Retrieves the name that corresponds to the privilege represented on a specific system by a specified locally unique identifier.", "LookupPrivilegeNameW": "Retrieves the name that corresponds to the privilege represented on a specific system by a specified locally unique identifier.", "LookupPrivilegeValueA": "Retrieves the locally unique identifier used on a specified system to locally represent the specified privilege name.", "LookupPrivilegeValueW": "Retrieves the locally unique identifier used on a specified system to locally represent the specified privilege name.", "lstrcatA": "Appends one string to another.", "lstrcatW": "Appends one string to another.", "lstrcmpA": "Compares two character strings.", "lstrcmpiA": "Compares two character strings.", "lstrcmpiW": "Compares two character strings.", "lstrcmpW": "Compares two character strings.", "lstrcpyA": "Copies a string to a buffer.", "lstrcpynA": "Copies a specified number of characters from a source string into a buffer.", "lstrcpynW": "Copies a specified number of characters from a source string into a buffer.", "lstrcpyW": "Copies a string to a buffer.", "lstrlenA": "Determines the length of the specified string.", "lstrlenW": "Determines the length of the specified string.", "MAKEINTATOM": "Converts the specified atom into a string, so it can be passed to functions which accept either atoms or strings.", "MapUserPhysicalPagesScatter": "Maps previously allocated physical memory pages at a specified address in an Address Windowing Extensions region.", "MapViewOfFileExNuma": "Maps a view of a file mapping into the address space of a calling process and specifies the NUMA node for the physical memory.", "MoveFile": "Moves an existing file or a directory, including its children.", "MoveFileA": "Moves an existing file or a directory, including its children.", "MoveFileExA": "Moves an existing file or directory, including its children, with various move options.", "MoveFileExW": "Moves an existing file or directory, including its children, with various move options.", "MoveFileTransactedA": "Moves an existing file or a directory, including its children, as a transacted operation.", "MoveFileTransactedW": "Moves an existing file or a directory, including its children, as a transacted operation.", "MoveFileW": "Moves an existing file or a directory, including its children.", "MoveFileWithProgressA": "Moves a file or directory, including its children.", "MoveFileWithProgressW": "Moves a file or directory, including its children.", "MulDiv": "Multiplies two 32-bit values and then divides the 64-bit result by a third 32-bit value.", "NotifyChangeEventLog": "Enables an application to receive notification when an event is written to the specified event log.", "ObjectCloseAuditAlarmA": "Generates an audit message in the security event log when a handle to a private object is deleted.", "ObjectDeleteAuditAlarmA": "Generates audit messages when an object is deleted.", "ObjectOpenAuditAlarmA": "Generates audit messages when a client application attempts to gain access to an object or to create a new one.", "ObjectPrivilegeAuditAlarmA": "Generates an audit message in the security event log.", "OpenBackupEventLogA": "Opens a handle to a backup event log created by the BackupEventLog function.", "OpenBackupEventLogW": "Opens a handle to a backup event log created by the BackupEventLog function.", "OpenCommPort": "Attempts to open a communication device.", "OpenEncryptedFileRawA": "Opens an encrypted file in order to backup the file.", "OpenEncryptedFileRawW": "Opens an encrypted file in order to backup the file.", "OpenEventLogA": "Opens a handle to the specified event log.", "OpenEventLogW": "Opens a handle to the specified event log.", "OpenFile": "Creates, opens, reopens, or deletes a file.", "OpenFileById": "Opens the file that matches the specified identifier.", "OpenFileMappingA": "Opens a named file mapping object.", "OpenJobObjectA": "Opens an existing job object.", "OpenPrivateNamespaceA": "Opens a private namespace.", "OperationEnd": "Notifies the system that the application is about to end an operation.", "OperationStart": "Notifies the system that the application is about to start an operation.", "PowerClearRequest": "Decrements the count of power requests of the specified type for a power request object.", "PowerCreateRequest": "Creates a new power request object.", "PowerSetRequest": "Increments the count of power requests of the specified type for a power request object.", "PrepareTape": "Prepares the tape to be accessed or removed.", "PrivilegedServiceAuditAlarmA": "Generates an audit message in the security event log.", "PulseEvent": "Sets the specified event object to the signaled state and then resets it to the nonsignaled state after releasing the appropriate number of waiting threads.", "PurgeComm": "Discards all characters from the output or input buffer of a specified communications resource.", "QueryActCtxSettingsW": "The QueryActCtxSettingsW function specifies the activation context, and the namespace and name of the attribute that is to be queried.", "QueryActCtxW": "The QueryActCtxW function queries the activation context.", "QueryDosDeviceA": "Retrieves information about MS-DOS device names.", "QueryFullProcessImageNameA": "Retrieves the full name of the executable image for the specified process.", "QueryFullProcessImageNameW": "Retrieves the full name of the executable image for the specified process.", "QueryThreadProfiling": "Determines whether thread profiling is enabled for the specified thread.", "QueryUmsThreadInformation": "Retrieves information about the specified user-mode scheduling worker thread.", "ReadDirectoryChangesExW": "Retrieves information that describes the changes within the specified directory, which can include extended information if that information type is specified.", "ReadDirectoryChangesW": "Retrieves information that describes the changes within the specified directory.", "ReadEncryptedFileRaw": "Backs up encrypted files.", "ReadEventLogA": "Reads the specified number of entries from the specified event log.", "ReadEventLogW": "Reads the specified number of entries from the specified event log.", "ReadThreadProfilingData": "Reads the specified profiling data associated with the thread.", "RegisterApplicationRecoveryCallback": "Registers the active instance of an application for recovery.", "RegisterApplicationRestart": "Registers the active instance of an application for restart.", "RegisterEventSourceA": "Retrieves a registered handle to the specified event log.", "RegisterEventSourceW": "Retrieves a registered handle to the specified event log.", "RegisterWaitForSingleObject": "Directs a wait thread in the thread pool to wait on the object.", "ReleaseActCtx": "The ReleaseActCtx function decrements the reference count of the specified activation context.", "RemoveDirectoryTransactedA": "Deletes an existing empty directory as a transacted operation.", "RemoveDirectoryTransactedW": "Deletes an existing empty directory as a transacted operation.", "RemoveSecureMemoryCacheCallback": "Unregisters a callback function that was previously registered with the AddSecureMemoryCacheCallback function.", "ReOpenFile": "Reopens the specified file system object with different access rights, sharing mode, and flags.", "ReplaceFileA": "Replaces one file with another file, with the option of creating a backup copy of the original file.", "ReplaceFileW": "Replaces one file with another file, with the option of creating a backup copy of the original file.", "ReportEventA": "Writes an entry at the end of the specified event log.", "ReportEventW": "Writes an entry at the end of the specified event log.", "RequestWakeupLatency": "This function is provided only for compatibility with earlier versions of Windows.", "SetCommBreak": "Suspends character transmission for a specified communications device and places the transmission line in a break state until the ClearCommBreak function is called.", "SetCommConfig": "Sets the current configuration of a communications device.", "SetCommMask": "Specifies a set of events to be monitored for a communications device.", "SetCommState": "Configures a communications device according to the specifications in a device-control block.", "SetCommTimeouts": "Sets the time-out parameters for all read and write operations on a specified communications device.", "SetCurrentDirectory": "Changes the current directory for the current process.", "SetDefaultCommConfigA": "Sets the default configuration for a communications device.", "SetDefaultCommConfigW": "Sets the default configuration for a communications device.", "SetDllDirectoryA": "Adds a directory to the search path used to locate DLLs for the application.", "SetDllDirectoryW": "Adds a directory to the search path used to locate DLLs for the application.", "SetEnvironmentVariable": "Sets the contents of the specified environment variable for the current process.", "SetFileAttributesTransactedA": "Sets the attributes for a file or directory as a transacted operation.", "SetFileAttributesTransactedW": "Sets the attributes for a file or directory as a transacted operation.", "SetFileBandwidthReservation": "Requests that bandwidth for the specified file stream be reserved.", "SetFileCompletionNotificationModes": "Sets the notification modes for a file handle, allowing you to specify how completion notifications work for the specified file.", "SetFileSecurityA": "Sets the security of a file or directory object.", "SetFileShortNameA": "Sets the short name for the specified file.", "SetFileShortNameW": "Sets the short name for the specified file.", "SetFirmwareEnvironmentVariableA": "Sets the value of the specified firmware environment variable.", "SetFirmwareEnvironmentVariableExA": "Sets the value of the specified firmware environment variable as the attributes that indicate how this variable is stored and maintained.", "SetFirmwareEnvironmentVariableExW": "Sets the value of the specified firmware environment variable and the attributes that indicate how this variable is stored and maintained.", "SetFirmwareEnvironmentVariableW": "Sets the value of the specified firmware environment variable.", "SetHandleCount": "", "SetMailslotInfo": "Sets the time-out value used by the specified mailslot for a read operation.", "SetProcessAffinityMask": "Sets a processor affinity mask for the threads of the specified process.", "SetProcessDEPPolicy": "Changes data execution prevention and DEP-ATL thunk emulation settings for a 32-bit process.", "SetSearchPathMode": "Sets the per-process mode that the SearchPath function uses when locating files.", "SetSystemPowerState": "Suspends the system by shutting power down.", "SetTapeParameters": "Specifies the block size of a tape or configures the tape device.", "SetTapePosition": "Sets the tape position on the specified device.", "SetThreadAffinityMask": "Sets a processor affinity mask for the specified thread.", "SetThreadExecutionState": "Enables an application to inform the system that it is in use, thereby preventing the system from entering sleep or turning off the display while the application is running.", "SetThreadpoolCallbackCleanupGroup": "Associates the specified cleanup group with the specified callback environment.", "SetThreadpoolCallbackLibrary": "Ensures that the specified DLL remains loaded as long as there are outstanding callbacks.", "SetThreadpoolCallbackPersistent": "Specifies that the callback should run on a persistent thread.", "SetThreadpoolCallbackPool": "Sets the thread pool to be used when generating callbacks.", "SetThreadpoolCallbackPriority": "Specifies the priority of a callback function relative to other work items in the same thread pool.", "SetThreadpoolCallbackRunsLong": "Indicates that callbacks associated with this callback environment may not return quickly.", "SetUmsThreadInformation": "Sets application-specific context information for the specified user-mode scheduling worker thread.", "SetupComm": "Initializes the communications parameters for a specified communications device.", "SetVolumeLabelA": "Sets the label of a file system volume.", "SetVolumeLabelW": "Sets the label of a file system volume.", "SetVolumeMountPointA": "Associates a volume with a drive letter or a directory on another volume.", "SetVolumeMountPointW": "Associates a volume with a drive letter or a directory on another volume.", "SetXStateFeaturesMask": "Sets the mask of XState features set within a CONTEXT structure.", "SwitchToFiber": "Schedules a fiber.", "TransmitCommChar": "Transmits a specified character ahead of any pending data in the output buffer of the specified communications device.", "UmsThreadYield": "Yields control to the user-mode scheduling scheduler thread on which the calling UMS worker thread is running.", "UnregisterApplicationRecoveryCallback": "Removes the active instance of an application from the recovery list.", "UnregisterApplicationRestart": "Removes the active instance of an application from the restart list.", "UnregisterWait": "Cancels a registered wait operation issued by the RegisterWaitForSingleObject function.", "UpdateResourceA": "Adds, deletes, or replaces a resource in a portable executable file.", "UpdateResourceW": "Adds, deletes, or replaces a resource in a portable executable file.", "VerifyVersionInfoA": "Compares a set of operating system version requirements to the corresponding values for the currently running version of the system.", "VerifyVersionInfoW": "Compares a set of operating system version requirements to the corresponding values for the currently running version of the system.", "WaitCommEvent": "Waits for an event to occur for a specified communications device.", "WaitNamedPipeA": "Waits until either a time-out interval elapses or an instance of the specified named pipe is available for connection.", "WinExec": "Runs the specified application.", "WinMain": "The user-provided entry point for a graphical Windows-based application.", "Wow64GetThreadSelectorEntry": "Retrieves a descriptor table entry for the specified selector and WOW64 thread.", "WriteEncryptedFileRaw": "Restores encrypted files.", "WritePrivateProfileSectionA": "Replaces the keys and values for the specified section in an initialization file.", "WritePrivateProfileSectionW": "Replaces the keys and values for the specified section in an initialization file.", "WritePrivateProfileStringA": "Copies a string into the specified section of an initialization file.", "WritePrivateProfileStringW": "Copies a string into the specified section of an initialization file.", "WritePrivateProfileStructA": "Copies data into a key in the specified section of an initialization file.", "WritePrivateProfileStructW": "Copies data into a key in the specified section of an initialization file.", "WriteProfileSectionA": "Replaces the contents of the specified section in the Win .ini file with specified keys and values.", "WriteProfileSectionW": "Replaces the contents of the specified section in the Win .ini file with specified keys and values.", "WriteProfileStringA": "Copies a string into the specified section of the Win .ini file.", "WriteProfileStringW": "Copies a string into the specified section of the Win .ini file.", "WriteTapemark": "Writes a specified number of filemarks, setmarks, short filemarks, or long filemarks to a tape device.", "WTSGetActiveConsoleSessionId": "Retrieves the session identifier of the console session.", "ZombifyActCtx": "The ZombifyActCtx function deactivates the specified activation context, but does not deallocate it."}