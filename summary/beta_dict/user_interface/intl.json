{"Add": "Treats the provided word as though it were part of the original dictionary.", "add_SpellCheckerChanged": "Adds an event handler for the SpellCheckerChanged event.", "AutoCorrect": "Causes occurrences of one word to be replaced by another.", "Check": "Checks the spelling of the supplied text and returns a collection of spelling errors.", "Close": "Terminates the IFELanguage object.", "CompareString": "Caution Using CompareString incorrectly can compromise the security of your application.", "CompareStringA": "Caution Using CompareString incorrectly can compromise the security of your application.", "CompareStringEx": "Caution Using CompareStringEx incorrectly can compromise the security of your application.", "CompareStringOrdinal": "Compares two Unicode strings to test binary equivalence.", "CompareStringW": "Caution Using CompareString incorrectly can compromise the security of your application.", "ComprehensiveCheck": "Checks the spelling of the supplied text in a more thorough manner than ISpellChecker::Check, and returns a collection of spelling errors.", "ConvertDefaultLocale": "Converts a default locale value to an actual locale identifier.", "Create": "Creates a new dictionary file.", "CreateIFECommonInstance": "Returns a pointer to an IFECommon interface.", "CreateIFEDictionaryInstance": "Returns a pointer to an IFEDictionary interface.", "CreateIFELanguageInstance": "Returns a pointer to an IFELanguage interface.", "CreateSpellChecker": "Creates a spell checker that supports the specified language.", "CreateSpellCheckProvider": "Creates a spell checker that supports the specified language.", "CreateUI": "Called from IImePad to get the applet's window handle, style, and size.", "DeleteDictionary": "Deletes a dictionary from the IME's plug-in dictionary list.", "DisplayProperty": "This method is obsolete starting with Windows\u00c2\u00a08, and is no longer supported.", "EnumCalendarInfoA": "Note To receive a calendar identifier in addition to calendar information, the application should use the EnumCalendarInfoEx function.", "EnumCalendarInfoExA": "Note Any application that runs only on Windows Vista and later should use EnumCalendarInfoExEx in preference to this function.", "EnumCalendarInfoExEx": "Note This function can enumerate data that changes between releases, for example, due to a custom locale.", "EnumCalendarInfoExW": "Note Any application that runs only on Windows Vista and later should use EnumCalendarInfoExEx in preference to this function.", "EnumCalendarInfoW": "Note To receive a calendar identifier in addition to calendar information, the application should use the EnumCalendarInfoEx function.", "EnumDateFormatsA": "Enumerates the long date, short date, or year/month formats that are available for a specified locale.", "EnumDateFormatsExA": "Enumerates the long date, short date, or year / month formats that are available for a specified locale.", "EnumDateFormatsExEx": "Note This function can enumerate data that changes between releases, for example, due to a custom locale.", "EnumDateFormatsExW": "Enumerates the long date, short date, or year / month formats that are available for a specified locale.", "EnumDateFormatsW": "Enumerates the long date, short date, or year/month formats that are available for a specified locale.", "EnumLanguageGroupLocalesA": "Enumerates the locales in a specified language group.", "EnumLanguageGroupLocalesW": "Enumerates the locales in a specified language group.", "EnumSystemCodePagesA": "Enumerates the code pages that are either installed on or supported by an operating system.", "EnumSystemCodePagesW": "Enumerates the code pages that are either installed on or supported by an operating system.", "EnumSystemGeoID": "Enumerates the geographical location identifiers that are available on the operating system.", "EnumSystemGeoNames": "Enumerates the two-letter International Organization for Standardization codes for geographical locations that are available on the operating system.", "EnumSystemLanguageGroupsA": "Enumerates the language groups that are either installed on or supported by an operating system.", "EnumSystemLanguageGroupsW": "Enumerates the language groups that are either installed on or supported by an operating system.", "EnumSystemLocalesA": "Note For interoperability reasons, the application should prefer the EnumSystemLocalesEx function to EnumSystemLocales because Microsoft is migrating toward the use of locale names instead of locale identifiers for new locales.", "EnumSystemLocalesEx": "Note The application should call this function in preference to EnumSystemLocales if designed to run only on Windows Vista and later.", "EnumSystemLocalesW": "Note For interoperability reasons, the application should prefer the EnumSystemLocalesEx function to EnumSystemLocales because Microsoft is migrating toward the use of locale names instead of locale identifiers for new locales.", "EnumTimeFormatsA": "Note For interoperability reasons, the application should prefer the EnumTimeFormatsEx function to EnumTimeFormats because Microsoft is migrating toward the use of locale names instead of locale identifiers for new locales.", "EnumTimeFormatsEx": "Note This function can enumerate data that changes between releases, for example, due to a custom locale.", "EnumTimeFormatsW": "Note For interoperability reasons, the application should prefer the EnumTimeFormatsEx function to EnumTimeFormats because Microsoft is migrating toward the use of locale names instead of locale identifiers for new locales.", "EnumUILanguagesA": "Enumerates the user interface languages that are available on the operating system and calls the callback function with every language in the list.", "EnumUILanguagesW": "Enumerates the user interface languages that are available on the operating system and calls the callback function with every language in the list.", "ExistWord": "Determines if the specified word exists in IFEDictionary.", "FILEMUIINFO_GET_CULTURE": "Gets the locale name associated with the language name offset information in the dwLanguageNameOffset member of a FILEMUIINFO structure.", "FILEMUIINFO_GET_MAIN_TYPEID": "Gets the main module types array element associated with the type identifier size and offset in a FILEMUIINFO structure.", "FILEMUIINFO_GET_MAIN_TYPEIDS": "Gets the main module types array associated with the type identifier offset information in the dwTypeIDMainOffset member of a FILEMUIINFO structure.", "FILEMUIINFO_GET_MAIN_TYPENAMES": "Gets the main module names multistring array associated with the type name offset information in the dwTypeNameMainOffset member of a FILEMUIINFO structure.", "FILEMUIINFO_GET_MUI_TYPEID": "Gets the MUI module types array element associated with the type identifier size and offset information in a FILEMUIINFO structure.", "FILEMUIINFO_GET_MUI_TYPEIDS": "Gets the MUI module types array associated with the type identifier offset information in the dwTypeIDMUIOffset member of a FILEMUIINFO structure.", "FILEMUIINFO_GET_MUI_TYPENAMES": "Gets the MUI module names multistring array associated with the type name offset information in the dwTypeNameMUIOffset member of a FILEMUIINFO structure.", "FindNLSString": "Note For interoperability reasons, the application should prefer the FindNLSStringEx function because Microsoft is migrating toward the use of locale names instead of locale identifiers for new locales.", "FindNLSStringEx": "Caution Because strings with very different binary representations can compare as identical, this function can raise certain security concerns.", "FindStringOrdinal": "Locates a Unicode string in another Unicode string for a non-linguistic comparison.", "FoldStringA": "Maps one Unicode string to another, performing the specified transformation.", "FoldStringW": "Maps one Unicode string to another, performing the specified transformation.", "FreeMUILibrary": "Releases the handle to a resource module loaded by LoadMUILibrary.", "GEO_ENUMNAMEPROC": "An application-defined callback function that processes enumerated geographical location information provided by the EnumSystemGeoNames function.", "get_CorrectiveAction": "Indicates which corrective action should be taken for the spelling error.", "get_Description": "Get the description of the spell checker option.", "get_Heading": "Gets the heading for the spell checker option.", "get_Id": "Gets the identifier for this spell checker.", "get_Labels": "Gets the label enumerator for the spell checker option.", "get_LanguageTag": "Gets the BCP47 language tag this instance of the spell checker supports.", "get_Length": "Gets the length of the erroneous text.", "get_LocalizedName": "Gets text, suitable to display to the user, that describes this spell checker.", "get_OptionIds": "Gets all of the declared option identifiers.", "get_Replacement": "Gets the text to use as replacement text when the corrective action is replace.", "get_StartIndex": "Gets the position in the checked text where the error begins.", "get_SupportedLanguages": "Gets the set of languages/dialects supported by any of the registered spell checkers.", "GetACP": "Caution The ANSI API functions, for example, the ANSI version of TextOut, implicitly use GetACP to translate text to or from Unicode.", "GetAppletIIDList": "Called from the IImePad interface to enumerate the IImePadApplet interfaces that are implemented.", "GetCalendarInfoA": "Retrieves information about a calendar for a locale specified by identifier.", "GetCalendarInfoEx": "Note This function can retrieve data that changes between releases, for example, due to a custom locale.", "GetCalendarInfoW": "Retrieves information about a calendar for a locale specified by identifier.", "GetConversion": "Converts the input string to converted strings.", "GetConversionModeCaps": "Gets the conversion mode capability of the IFELanguage object.", "GetCPInfo": "Retrieves information about any valid installed or available code page.", "GetCPInfoExA": "Retrieves information about any valid installed or available code page.", "GetCPInfoExW": "Retrieves information about any valid installed or available code page.", "GetCurrencyFormatA": "Formats a number string as a currency string for a locale specified by identifier.", "GetCurrencyFormatEx": "Note This function can format data that changes between releases, for example, due to a custom locale.", "GetCurrencyFormatW": "Formats a number string as a currency string for a locale specified by identifier.", "GetDateFormatA": "Formats a date as a date string for a locale specified by the locale identifier.", "GetDateFormatEx": "Formats a date as a date string for a locale specified by name.", "GetDateFormatW": "Formats a date as a date string for a locale specified by the locale identifier.", "GetDictionariesInUse": "Obtains the list of Dictionary IDs of the IME plug-in dictionaries which are in use by IME, with their creation dates and encryption flags.", "GetDurationFormat": "Formats a duration of time as a time string for a locale specified by identifier.", "GetDurationFormatEx": "Formats a duration of time as a time string for a locale specified by name.", "GetFileMUIInfo": "Retrieves resource-related information about a file.", "GetFileMUIPath": "Retrieves the path to all language - specific resource files associated with the supplied LN file.", "GetGeoInfoA": "Retrieves information about a specified geographical location.", "GetGeoInfoEx": "Retrieves information about a geographic location that you specify by using a two-letter International Organization for Standardization code.", "GetGeoInfoW": "Retrieves information about a specified geographical location.", "GetHeader": "Gets a dictionary header from a dictionary file without opening the dictionary.", "GetJMorphResult": "Gets morphological analysis results.", "GetLocaleInfoA": "Retrieves information about a locale specified by identifier.", "GetLocaleInfoEx": "Note This function can retrieve data that changes between releases, for example, due to a custom locale.", "GetLocaleInfoW": "Retrieves information about a locale specified by identifier.", "GetNLSVersion": "Note For interoperability reasons, the application should prefer the GetNLSVersionEx function to GetNLSVersion because Microsoft is migrating toward the use of locale names instead of locale identifiers for new locales.", "GetNLSVersionEx": "Note The application should call this function in preference to GetNLSVersion if designed to run only on Windows Vista and later.", "GetNumberFormatA": "Formats a number string as a number string customized for a locale specified by identifier.", "GetNumberFormatEx": "Note This function can format data that changes between releases, for example, due to a custom locale.", "GetNumberFormatW": "Formats a number string as a number string customized for a locale specified by identifier.", "GetOEMCP": "Returns the current original equipment manufacturer code page identifier for the operating system.", "GetOptionDescription": "Retrieves the information of a specific option.", "GetOptionValue": "Retrieves the value associated with the given option.", "GetPosTable": "Obtains the public POS table.", "GetProcessPreferredUILanguages": "Retrieves the process preferred UI languages.", "GetStringScripts": "Provides a list of scripts used in the specified Unicode string.", "GetStringTypeA": "Deprecated.", "GetStringTypeExW": "Retrieves character type information for the characters in the specified source string.", "GetStringTypeW": "Retrieves character type information for the characters in the specified Unicode source string.", "GetSystemDefaultLangID": "Returns the language identifier for the system locale.", "GetSystemDefaultLCID": "Returns the locale identifier for the system locale.", "GetSystemDefaultLocaleName": "Note It is recommended that applications call GetUserDefaultLocaleName in preference over this function.", "GetSystemDefaultUILanguage": "Retrieves the language identifier for the system default UI language of the operating system, also known as the \" install language \" on Windows Vista and later.", "GetSystemPreferredUILanguages": "Retrieves the system preferred UI languages.", "GetTextCharset": "Retrieves a character set identifier for the font that is currently selected into a specified device context.", "GetTextCharsetInfo": "Retrieves information about the character set of the font that is currently selected into a specified device context.", "GetThreadLocale": "Returns the locale identifier of the current locale for the calling thread.", "GetThreadPreferredUILanguages": "Retrieves the thread preferred UI languages for the current thread.", "GetThreadUILanguage": "Returns the language identifier of the first user interface language for the current thread.", "GetTimeFormatA": "Formats time as a time string for a locale specified by identifier.", "GetTimeFormatEx": "Formats time as a time string for a locale specified by name.", "GetTimeFormatW": "Formats time as a time string for a locale specified by identifier.", "GetUILanguageFallbackList": "Gets a fallback list of UI languages represented as language names.", "GetUILanguageInfo": "Retrieves a variety of information about an installed UI language", "GetUserDefaultGeoName": "Retrieves the two-letter International Organization for Standardization code for the default geographical location of the user.", "GetUserDefaultLangID": "Returns the language identifier of the Region Format setting for the current user.", "GetUserDefaultLCID": "Caution If the user default locale is a custom locale, an application can not accurately tag data with the value or exchange it.", "GetUserDefaultLocaleName": "Note The application should call this function in preference to GetUserDefaultLCID if designed to run only on Windows Vista and later.", "GetUserDefaultUILanguage": "Returns the language identifier for the user UI language for the current user.", "GetUserGeoID": "Retrieves information about the geographical location of the user.", "GetUserPreferredUILanguages": "Retrieves information about the user preferred UI languages.", "GetWords": "Gets word entries from a dictionary.", "IdnToAscii": "Converts an internationalized domain name representation of the ASCII string that represents the name in the Punycode transfer encoding syntax.", "IdnToNameprepUnicode": "Converts an internationalized domain name or another internationalized label to the NamePrep form specified by Network Working Group RFC 3491, but does not perform the additional conversion to Punycode.", "IdnToUnicode": "Converts the Punycode form of an internationalized domain name or another internationalized label to the normal Unicode UTF-16 encoding syntax.", "Ignore": "Ignores the provided word for the rest of this session.", "IMCENUMPROC": "An application-defined callback function that processes input contexts provided by the ImmEnumInputContext function.", "ImmAssociateContext": "By default, the operating system associates the default input context with each window as it is created.", "ImmAssociateContextEx": "Changes the association between the input method context and the specified window or its children.", "ImmConfigureIMEA": "Displays the configuration dialog box for the IME of the specified input locale identifier.", "ImmConfigureIMEW": "Displays the configuration dialog box for the IME of the specified input locale identifier.", "ImmCreateContext": "Creates a new input context, allocating memory for the context and initializing it.", "ImmDestroyContext": "Releases the input context and frees associated memory.", "ImmDisableIME": "Disables the IME for a thread or for all threads in a process.", "ImmDisableLegacyIME": "Indicates that this thread is a Windows Store app UI thread.", "ImmDisableTextFrameService": "ImmDisableTextFrameService is no longer available for use as of Windows\u00c2\u00a0Vista.", "ImmEnumInputContext": "Retrieves the input context for the specified thread.", "ImmEnumRegisterWordA": "Enumerates the register strings having the specified reading string, style, and register string.", "ImmEnumRegisterWordW": "Enumerates the register strings having the specified reading string, style, and register string.", "ImmEscapeA": "Accesses capabilities of particular IMEs that are not available through other IME API functions.", "ImmEscapeW": "Accesses capabilities of particular IMEs that are not available through other IME API functions.", "ImmGetCandidateListA": "Retrieves a candidate list.", "ImmGetCandidateListCountA": "Retrieves the size of the candidate lists.", "ImmGetCandidateListCountW": "Retrieves the size of the candidate lists.", "ImmGetCandidateListW": "Retrieves a candidate list.", "ImmGetCandidateWindow": "Retrieves information about the candidates window.", "ImmGetCompositionFontA": "Retrieves information about the logical font currently used to display characters in the composition window.", "ImmGetCompositionFontW": "Retrieves information about the logical font currently used to display characters in the composition window.", "ImmGetCompositionStringA": "Retrieves information about the composition string.", "ImmGetCompositionStringW": "Retrieves information about the composition string.", "ImmGetCompositionWindow": "Retrieves information about the composition window.", "ImmGetContext": "Returns the input context associated with the specified window.", "ImmGetConversionListA": "Retrieves the conversion result list of characters or words without generating any IME-related messages.", "ImmGetConversionListW": "Retrieves the conversion result list of characters or words without generating any IME-related messages.", "ImmGetConversionStatus": "Retrieves the current conversion status.", "ImmGetDefaultIMEWnd": "Retrieves the default window handle to the IME class.", "ImmGetDescriptionA": "Copies the description of the IME to the specified buffer.", "ImmGetDescriptionW": "Copies the description of the IME to the specified buffer.", "ImmGetGuideLineA": "Applications use the information for user notifications.", "ImmGetGuideLineW": "Applications use the information for user notifications.", "ImmGetIMEFileNameA": "Retrieves the file name of the IME associated with the specified input locale.", "ImmGetIMEFileNameW": "Retrieves the file name of the IME associated with the specified input locale.", "ImmGetImeMenuItemsA": "Retrieves the menu items that are registered in the IME menu of a specified input context.", "ImmGetImeMenuItemsW": "Retrieves the menu items that are registered in the IME menu of a specified input context.", "ImmGetOpenStatus": "Determines whether the IME is open or closed.", "ImmGetProperty": "Retrieves the property and capabilities of the IME associated with the specified input locale.", "ImmGetRegisterWordStyleA": "Retrieves a list of the styles supported by the IME associated with the specified input locale.", "ImmGetRegisterWordStyleW": "Retrieves a list of the styles supported by the IME associated with the specified input locale.", "ImmGetStatusWindowPos": "Retrieves the position of the status window.", "ImmGetVirtualKey": "Retrieves the original virtual key value associated with a key input message that the IME has already processed.", "ImmInstallIMEA": "Installs an IME.", "ImmInstallIMEW": "Installs an IME.", "ImmIsIME": "Determines if the specified input locale has an IME.", "ImmIsUIMessageA": "Checks for messages intended for the IME window and sends those messages to the window.", "ImmIsUIMessageW": "Checks for messages intended for the IME window and sends those messages to the window.", "ImmNotifyIME": "Notifies the IME about changes to the status of the input context.", "ImmRegisterWordA": "Registers a string with the dictionary of the IME associated with the specified input locale.", "ImmRegisterWordW": "Registers a string with the dictionary of the IME associated with the specified input locale.", "ImmReleaseContext": "Releases the input context and unlocks the memory associated in the input context.", "ImmRequestMessageA": "Generates a WM_IME_REQUEST message.", "ImmRequestMessageW": "Generates a WM_IME_REQUEST message.", "ImmSetCandidateWindow": "Sets information about the candidates window.", "ImmSetCompositionFontA": "Sets the logical font to use to display characters in the composition window.", "ImmSetCompositionFontW": "Sets the logical font to use to display characters in the composition window.", "ImmSetCompositionStringA": "Sets the characters, attributes, and clauses of the composition and reading strings.", "ImmSetCompositionStringW": "Sets the characters, attributes, and clauses of the composition and reading strings.", "ImmSetCompositionWindow": "Sets the position of the composition window.", "ImmSetConversionStatus": "Sets the current conversion status.", "ImmSetOpenStatus": "Opens or closes the IME.", "ImmSetStatusWindowPos": "Sets the position of the status window.", "ImmSimulateHotKey": "Simulates the specified IME hot key, causing the same response as if the user presses the hot key in the specified window.", "ImmUnregisterWordA": "Removes a register string from the dictionary of the IME associated with the specified input locale.", "ImmUnregisterWordW": "Removes a register string from the dictionary of the IME associated with the specified input locale.", "Initialize": "Called from IImePad interface to initialize IImePadApplet.", "InitializeWordlist": "Initialize the specified word list to contain only the specified words.", "Invoke": "Receives the SpellCheckerChanged event.", "InvokeDictToolDialog": "Invokes the Microsoft IME's Dictionary Tool from the app.", "InvokeWordRegDialog": "Invokes the Microsoft IME Word Register Dialog Window from the app.", "IS_HIGH_SURROGATE": "Determines if a character is a UTF-16 high surrogate code point, ranging from 0xd800 to 0xdbff, inclusive.", "IS_LOW_SURROGATE": "Determines if a character is a UTF-16 low surrogate code point, ranging from 0xdc00 to 0xdfff, inclusive.", "IS_SURROGATE_PAIR": "Determines if the specified code units form a UTF-16 surrogate pair.", "IsDBCSLeadByte": "Determines if a specified character is a lead byte for the system default Windows ANSI code page for the code page.", "IsDBCSLeadByteEx": "A lead byte is the first byte of a two - byte character in a double - byte character set for the code page.", "IsDefaultIME": "Determines if the IME specified by the class ID is the default IME on a local computer.", "IsNLSDefinedString": "Determines if each character in a string has a defined result for a specified NLS capability.", "IsNormalizedString": "Verifies that a string is normalized according to Unicode 4.0 TR#15.", "IsSupported": "Determines if the specified language is supported by a registered spell checker.", "IsTextUnicode": "Determines if a buffer is likely to contain a form of Unicode text.", "IsValidCodePage": "Determines if a specified code page is valid.", "IsValidLanguageGroup": "Determines if a language group is installed or supported on the operating system.", "IsValidLocale": "Determines if the specified locale is installed or supported on the operating system.", "IsValidLocaleName": "Note An application running only on Windows Vista and later should call this function in preference to IsValidLocale to determine the validity of a supplemental locale.", "IsValidNLSVersion": "Determines if the NLS version is valid for a given NLS function.", "LANGGROUPLOCALE_ENUMPROCA": "An application-defined callback function that processes enumerated language group locale information provided by the EnumLanguageGroupLocales function.", "LANGGROUPLOCALE_ENUMPROCW": "An application-defined callback function that processes enumerated language group locale information provided by the EnumLanguageGroupLocales function.", "LANGIDFROMLCID": "Retrieves a language identifier from a locale identifier.", "LCIDToLocaleName": "Converts a locale identifier to a locale name.", "LCMapStringA": "For a locale specified by identifier, maps one input character string to another using a specified transformation, or generates a sort key for the input string.", "LCMapStringEx": "For a locale specified by name, maps an input character string to another using a specified transformation, or generates a sort key for the input string.", "LCMapStringW": "For a locale specified by identifier, maps one input character string to another using a specified transformation, or generates a sort key for the input string.", "LoadMUILibraryA": "Returns a handle to the language-specific resources associated with a particular language-neutral file.", "LoadMUILibraryW": "Returns a handle to the language-specific resources associated with a particular language-neutral file.", "LoadStringByReference": "LoadStringByReference may be altered or unavailable.", "LOCALE_ENUMPROCEX": "An application-defined callback function that processes enumerated locale information provided by the EnumSystemLocalesEx function.", "LocaleNameToLCID": "Converts a locale name to a locale identifier.", "MAKELANGID": "Creates a language identifier from a primary language identifier and a sublanguage identifier.", "MAKELCID": "Creates a locale identifier from a language identifier and a sort order identifier.", "MAKESORTLCID": "Constructs a locale identifier from a language identifier, a sort order identifier, and the sort version.", "MappingDoAction": "For example, a phone dialer service first must recognize phone numbers and then can perform the \" action \" of dialing a number.", "MappingFreePropertyBag": "Frees memory and resources allocated during an ELS text recognition operation.", "MappingFreeServices": "Frees memory and resources allocated for the application to interact with one or more ELS services.", "MappingGetServices": "Retrieves a list of available ELS platform-supported services, along with associated information, according to application-specified criteria.", "MappingRecognizeText": "For example, the Microsoft Language Detection service will attempt to recognize the language in which the input text is written.", "MultiByteToWideChar": "Maps a character string to a UTF-16 string.", "Next": "Gets the next spelling error.", "NextWords": "Gets the next word entry from a dictionary.", "NlsDllCodePageTranslation": "Used to get code page information or do conversion, depending on flag settings.", "NormalizeString": "Normalizes characters of a text string according to Unicode 4.0 TR#15.", "Notify": "Called from IImePad to pass information with a notify code.", "NotifyUILanguageChange": "NotifyUILanguageChange may be altered or unavailable.", "Open": "Initializes the IFELanguage object.", "PFN_MAPPINGCALLBACKPROC": "An application-defined callback function that asynchronously processes data produced by the MappingRecognizeText function.", "PRIMARYLANGID": "Extracts a primary language identifier from a language identifier.", "RegisterUserDictionary": "Registers a file to be used as a user dictionary for the current user, until unregistered.", "RegisterWord": "Registers a new word or deletes an existing word in the IFEDictionary.", "REGISTERWORDENUMPROCA": "An application-defined callback function used with the ImmEnumRegisterWord function.", "REGISTERWORDENUMPROCW": "An application-defined callback function used with the ImmEnumRegisterWord function.", "Remove": "Removes a word that was previously added by ISpellChecker.", "remove_SpellCheckerChanged": "Removes an event handler that has been added for the SpellCheckerChanged event.", "Request": "Called by an IImePadApplet to insert text into an app.", "ResolveLocaleName": "Finds a possible locale name match for the supplied name.", "ScriptApplyDigitSubstitution": "Applies the specified digit substitution settings to the specified script control and script state structures.", "ScriptApplyLogicalWidth": "Takes an array of advance widths for a run and generates an array of adjusted advance glyph widths.", "ScriptBreak": "Retrieves information for determining line breaks.", "ScriptCacheGetHeight": "Retrieves the height of the currently cached font.", "ScriptCPtoX": "Generates the x offset from the left end or leading edge of a run to either the leading or trailing edge of a logical character cluster.", "ScriptFreeCache": "Frees a script cache.", "ScriptGetCMap": "Retrieves the glyph indexes of the Unicode characters in a string according to either the TrueType cmap table or the standard cmap table implemented for old-style fonts.", "ScriptGetFontAlternateGlyphs": "Retrieves a list of alternate glyphs for a specified character that can be accessed through a specified OpenType feature.", "ScriptGetFontFeatureTags": "The typographic feature tags comprising the list are retrieved from the font in the supplied device context or cache.", "ScriptGetFontLanguageTags": "Retrieves a list of language tags that are available for the specified item and are supported by a specified script tag for OpenType processing.", "ScriptGetFontProperties": "Retrieves information from the font cache on the special glyphs used by a font.", "ScriptGetFontScriptTags": "Scripts comprising the list are retrieved from the font located in the supplied device context or from the script shaping engine that processes the font of the current run.", "ScriptGetGlyphABCWidth": "Retrieves the ABC width of a given glyph.", "ScriptGetLogicalWidths": "Converts the glyph advance widths for a specific font into logical widths.", "ScriptGetProperties": "Retrieves information about the current scripts.", "ScriptIsComplex": "Determines whether a Unicode string requires complex script processing.", "ScriptItemize": "Breaks a Unicode string into individually shapeable items.", "ScriptItemizeOpenType": "Breaks a Unicode string into individually shapeable items and provides an array of feature tags for each shapeable item for OpenType processing.", "ScriptJustify": "Creates an advance widths table to allow text justification when passed to the ScriptTextOut function.", "ScriptLayout": "Converts an array of run embedding levels to a map of visual-to-logical position and/or logical-to-visual position.", "ScriptPlace": "Generates glyph advance width and two-dimensional offset information from the output of ScriptShape.", "ScriptPlaceOpenType": "Generates glyphs and visual attributes for a Unicode run with OpenType information from the output of ScriptShapeOpenType.", "ScriptPositionSingleGlyph": "Positions a single glyph with a single adjustment using a specified feature provided in the font for OpenType processing.", "ScriptRecordDigitSubstitution": "Reads the National Language Support native digit and digit substitution settings and records them in a SCRIPT_DIGITSUBSTITUTE structure.", "ScriptShape": "Generates glyphs and visual attributes for a Unicode run.", "ScriptShapeOpenType": "Generates glyphs and visual attributes for a Unicode run with OpenType information.", "ScriptString_pcOutChars": "Returns a pointer to the length of a string after clipping.", "ScriptString_pLogAttr": "Returns a pointer to a logical attributes buffer for an analyzed string.", "ScriptString_pSize": "Returns a pointer to a SIZE structure for an analyzed string.", "ScriptStringAnalyse": "Analyzes a plain text string.", "ScriptStringCPtoX": "Retrieves the x coordinate for the leading or trailing edge of a character position.", "ScriptStringFree": "Frees a SCRIPT_STRING_ANALYSIS structure.", "ScriptStringGetLogicalWidths": "Converts visual widths into logical widths.", "ScriptStringGetOrder": "Creates an array that maps an original character position to a glyph position.", "ScriptStringOut": "Displays a string generated by a prior call to ScriptStringAnalyse and optionally adds highlighting.", "ScriptStringValidate": "Checks a SCRIPT_STRING_ANALYSIS structure for invalid sequences.", "ScriptStringXtoCP": "Converts an x coordinate to a character position.", "ScriptSubstituteSingleGlyph": "Enables substitution of a single glyph with one alternate form of the same glyph for OpenType processing.", "ScriptTextOut": "Displays text for the specified script shape and place information.", "ScriptXtoCP": "Generates the leading or trailing edge of a logical character cluster from the x offset of a run.", "SetCalendarInfoA": "Sets an item of locale information for a calendar.", "SetCalendarInfoW": "Sets an item of locale information for a calendar.", "SetDefaultIME": "Allows the Microsoft IME to become the default IME in the keyboard layout.", "SetHeader": "Sets a dictionary header in a dictionary file.", "SetLocaleInfoA": "Sets an item of information in the user override portion of the current locale.", "SetLocaleInfoW": "Sets an item of information in the user override portion of the current locale.", "SetOptionValue": "Sets the value associated with the given option.", "SetProcessPreferredUILanguages": "Sets the process preferred UI languages for the application process.", "SetThreadLocale": "Sets the current locale of the calling thread.", "SetThreadPreferredUILanguages": "Sets the thread preferred UI languages for the current thread.", "SetThreadUILanguage": "Sets the user interface language for the current thread.", "SetUserGeoID": "Sets the geographical location identifier for the user.", "SetUserGeoName": "Sets the geographic location for the current user to the specified two-letter International Organization for Standardization code.", "SORTIDFROMLCID": "Retrieves a sort order identifier from a locale identifier.", "SORTVERSIONFROMLCID": "Retrieves the sort version from a locale identifier.", "SUBLANGID": "Extracts a sublanguage identifier from a language identifier.", "Suggest": "Retrieves spelling suggestions for the supplied text.", "Terminate": "Called from IImePad to terminate IImePadApplet when the IMEPad instance exits.", "TEXT": "Identifies a string as Unicode when UNICODE is defined by a preprocessor directive during compilation.", "TranslateCharsetInfo": "Translates character set information and sets all members of a destination structure to appropriate values.", "UILANGUAGE_ENUMPROCA": "An application-defined callback function that processes enumerated user interface language information provided by the EnumUILanguages function.", "UILANGUAGE_ENUMPROCW": "An application-defined callback function that processes enumerated user interface language information provided by the EnumUILanguages function.", "UnregisterUserDictionary": "Unregisters a previously registered user dictionary.", "VerifyScripts": "Compares two enumerated lists of scripts.", "WideCharToMultiByte": "Maps a UTF-16 string to a new character string."}