{"_NewEnum": "Retrieves an IEnumVARIANT enumerator interface for this collection of stories.", "ActivateAs": "If objects can not be reloaded, they are deleted.", "Add": "Adds a string to the end of the collection.", "AddMasked": "Adds an image or images to an image list, generating a mask from the specified bitmap.", "AddSubrange": "Adds a subrange to this range.", "AddTab": "Adds a tab at the displacement tbPos, with type tbAlign, and leader style, tbLeader.", "Animate_Close": "You can use this macro or send the ACM_OPEN message explicitly, passing in NULL parameters.", "Animate_Create": "Creates an animation control.", "Animate_IsPlaying": "You can use this macro or send an ACM_ISPLAYING message.", "Animate_Open": "Opens an AVI clip and displays its first frame in an animation control.", "Animate_OpenEx": "You can use this macro or send the ACM_OPEN message explicitly.", "Animate_Play": "Plays an AVI clip in an animation control.", "Animate_Seek": "Directs an animation control to display a particular frame of an AVI clip.", "Animate_Stop": "Stops playing an AVI clip in an animation control.", "Append": "Appends a string to the string at the specified index in the collection.", "Apply": "Applies the formatting attributes of this text row object to the specified rows in the associated ITextRange2.", "AttachMsgFilter": "Attaches a new message filter to the edit instance.", "AutoCorrectProc": "The AutoCorrectProc function is an application-defined callback function that is used with the EM_SETAUTOCORRECTPROC message.", "BeginBufferedAnimation": "Begins a buffered animation operation.", "BeginBufferedPaint": "Begins a buffered paint operation.", "BeginDrag": "Begins dragging an image.", "BeginEditCollection": "Turns on edit collection.", "BeginPanningFeedback": "Notifies the system to send feedback about a target window affected by panning gestures.", "BufferedPaintClear": "Clears a specified rectangle in the buffer to ARGB = {0,0,0,0}.", "BufferedPaintInit": "Initialize buffered painting for the current thread.", "BufferedPaintRenderAnimation": "Paints the next frame of a buffered paint animation.", "BufferedPaintSetAlpha": "Sets the alpha to a specified value in a given rectangle.", "BufferedPaintStopAllAnimations": "Stops all buffered animations for the given window.", "BufferedPaintUnInit": "Closes down buffered painting for the current thread.", "BuildUpMath": "Converts the linear-format math in a range to a built-up form, or modifies the current built-up form.", "Button_Enable": "Enables or disables a button.", "Button_GetCheck": "Gets the check state of a radio button or check box.", "Button_GetIdealSize": "Gets the size of the button that best fits the text and image, if an image list is present.", "Button_GetImageList": "Gets the BUTTON_IMAGELIST structure that describes the image list that is set for a button control.", "Button_GetNote": "Gets the text of the note associated with a command link button.", "Button_GetNoteLength": "Gets the length of the note text that may be displayed in the description for a command link.", "Button_GetSplitInfo": "Gets information for a specified split button control.", "Button_GetState": "Retrieves the state of a button or check box.", "Button_GetText": "Gets the text of a button.", "Button_GetTextLength": "Gets the number of characters in the text of a button.", "Button_GetTextMargin": "Gets the margins used to draw text in a button control.", "Button_SetCheck": "Sets the check state of a radio button or check box.", "Button_SetDropDownState": "Sets the drop down state for a specified button with style of BS_SPLITBUTTON.", "Button_SetElevationRequiredState": "Sets the elevation required state for a specified button or command link to display an elevated icon.", "Button_SetImageList": "Assigns an image list to a button control.", "Button_SetNote": "Sets the text of the note associated with a specified command link button.", "Button_SetSplitInfo": "Sets information for a specified split button control.", "Button_SetState": "Sets the highlight state of a button.", "Button_SetStyle": "Sets the style of a button.", "Button_SetText": "Sets the text of a button.", "Button_SetTextMargin": "Sets the margins for drawing text in a button control.", "CanChange": "Determines whether changes can be made to this row.", "CanEdit": "Determines whether the specified range can be edited.", "CanPaste": "Determines if a data object can be pasted, using a specified format, into the current range.", "Cat2": "Concatenates two strings.", "CatTop2": "Inserts text between the top two strings in a collection.", "ChangeCase": "Changes the case of letters in this range according to the Type parameter.", "CheckDlgButton": "Changes the check state of a button control.", "CheckRadioButton": "Adds a check mark to all other radio buttons in the group.", "CheckTextLimit": "Checks whether the number of characters to be added would exceed the maximum text limit.", "ClearAllTabs": "Clears all tabs, reverting to equally spaced tabs with the default tab spacing.", "Clone": "Clones an existing image list.", "CloseThemeData": "Closes the theme data handle.", "Collapse": "Collapses the specified text range into a degenerate point at either the beginning or end of the range.", "ComboBox_AddItemData": "Adds item data to the list in a combo box at the specified location.", "ComboBox_AddString": "Adds a string to a list in a combo box.", "ComboBox_DeleteString": "Deletes the item at the specified location in a list in a combo box.", "ComboBox_Dir": "Adds names to the list displayed by a combo box.", "ComboBox_Enable": "Enables or disables a combo box control.", "ComboBox_FindItemData": "Finds the first item in a combo box list that has the specified item data.", "ComboBox_FindString": "Finds the first string in a combo box list that begins with the specified string.", "ComboBox_FindStringExact": "Finds the first string in a combo box list that exactly matches the specified string, except that the search is not case sensitive.", "ComboBox_GetCount": "Gets the number of items in the list box of a combo box.", "ComboBox_GetCueBannerText": "Use this macro or send the CB_GETCUEBANNER message explicitly.", "ComboBox_GetCurSel": "Gets the index of the currently selected item in a combo box.", "ComboBox_GetDroppedControlRect": "Retrieves the screen coordinates of a combo box in its dropped - down state.", "ComboBox_GetDroppedState": "Ascertains whether the drop list in a combo box control is visible.", "ComboBox_GetExtendedUI": "Ascertains whether a combo box is using the default user interface or the extended UI.", "ComboBox_GetItemData": "Gets the application - defined value associated with the specified list item in a combo box.", "ComboBox_GetItemHeight": "Retrieves the height of list items in a combo box.", "ComboBox_GetLBText": "Gets a string from a list in a combo box.", "ComboBox_GetLBTextLen": "Gets the length of a string in the list in a combo box.", "ComboBox_GetMinVisible": "Gets the minimum number of visible items in the drop-down list of a combo box.", "ComboBox_GetText": "Retrieves the text from a combo box control.", "ComboBox_GetTextLength": "Gets the number of characters in the text of a combo box.", "ComboBox_InsertItemData": "Inserts item data in a list in a combo box at the specified location.", "ComboBox_InsertString": "Adds a string to a list in a combo box at the specified location.", "ComboBox_LimitText": "You can use this macro or send the CB_LIMITTEXT message explicitly.", "ComboBox_ResetContent": "Removes all items from the list box and edit control of a combo box.", "ComboBox_SelectItemData": "If a matching item is found, the item is selected.", "ComboBox_SelectString": "If a matching item is found, the item is selected.", "ComboBox_SetCueBannerText": "Sets the cue banner text that is displayed for the edit control of a combo box.", "ComboBox_SetCurSel": "Sets the currently selected item in a combo box.", "ComboBox_SetExtendedUI": "You can use this macro or send the CB_SETEXTENDEDUI message explicitly.", "ComboBox_SetItemData": "Sets the application - defined value associated with the specified list item in a combo box.", "ComboBox_SetItemHeight": "Sets the height of list items or the selection field in a combo box.", "ComboBox_SetMinVisible": "Sets the minimum number of visible items in the drop-down list of a combo box.", "ComboBox_SetText": "Sets the text of a combo box.", "ComboBox_ShowDropdown": "Shows or hides the list in a combo box.", "ContextSensitiveHelp": "Indicates if the application should transition into or out of context - sensitive help mode.", "ConvertObject": "Converts an object to a new type.", "Copy": "Copies the text to a data object.", "CreateMappedBitmap": "Creates a bitmap for use in a toolbar.", "CreatePropertySheetPageA": "Creates a new page for a property sheet.", "CreatePropertySheetPageW": "Creates a new page for a property sheet.", "CreateProvider": "Obtains a Microsoft UI Automation provider object for the parent of a windowless rich edit control.", "CreateStatusWindowA": "Creates a status window, which is typically used to display the status of an application.", "CreateStatusWindowW": "Creates a status window, which is typically used to display the status of an application.", "CreateSyntheticPointerDevice": "Configures the pointer injection device for the calling application, and initializes the maximum number of simultaneous pointers that the app can inject.", "CreateTextServices": "The text services object supports a variety of interfaces, including ITextServices and the Text Object Model.", "CreateToolbarEx": "Creates a toolbar window and adds the specified buttons to the toolbar.", "CreateUpDownControl": "It is a 16 bit function and can not handle 32 bit values for range and position.", "Cut": "Cuts the plain or rich text to a data object or to the Clipboard, depending on the pVar parameter.", "DateTime_CloseMonthCal": "Closes the date and time picker control.", "DateTime_GetDateTimePickerInfo": "Gets information for a specified date and time picker control.", "DateTime_GetIdealSize": "Gets the size needed to display the control without clipping.", "DateTime_GetMonthCal": "You can use this macro or send the DTM_GETMONTHCAL message explicitly.", "DateTime_GetMonthCalColor": "You can use this macro or send the DTM_GETMCCOLOR message explicitly.", "DateTime_GetMonthCalFont": "Gets the font that the date and time picker control 's child month calendar control is currently using.", "DateTime_GetMonthCalStyle": "Gets the style of a specified date and time picker control.", "DateTime_GetRange": "Gets the current minimum and maximum allowable system times for a date and time picker control.", "DateTime_GetSystemtime": "Gets the currently selected time from a date and time picker control and places it in a specified SYSTEMTIME structure.", "DateTime_SetFormat": "You can use this macro or send the DTM_SETFORMAT message explicitly.", "DateTime_SetMonthCalColor": "You can use this macro or send the DTM_SETMCCOLOR message explicitly.", "DateTime_SetMonthCalFont": "Sets the font to be used by the date and time picker control 's child month calendar control.", "DateTime_SetMonthCalStyle": "Sets the style for a specified date and time picker control.", "DateTime_SetRange": "Sets the minimum and maximum allowable system times for a date and time picker control.", "DateTime_SetSystemtime": "Sets a date and time picker control to a given date and time.", "Delete": "Mimics the DELETE and BACKSPACE keys, with and without the CTRL key depressed.", "DeleteObject": "The object is not necessarily being released when this member is called.", "DeleteRange": "Deletes the contents of a given range.", "DeleteSubrange": "Deletes a subrange from a range.", "DeleteTab": "Deletes a tab at a specified displacement.", "DestroyPropertySheetPage": "An application must call this function for pages that have not been passed to the PropertySheet function.", "DestroySyntheticPointerDevice": "Destroys the specified pointer injection device.", "DiscardImages": "Discards images from list, as specified.", "DlgDirListA": "You can filter the list of names by specifying a set of file attributes.", "DlgDirListComboBoxA": "You can filter the list of names by specifying a set of file attributes.", "DlgDirListComboBoxW": "You can filter the list of names by specifying a set of file attributes.", "DlgDirListW": "You can filter the list of names by specifying a set of file attributes.", "DlgDirSelectComboBoxExA": "The selection is interpreted as a drive letter, a file, or a directory name.", "DlgDirSelectComboBoxExW": "The selection is interpreted as a drive letter, a file, or a directory name.", "DlgDirSelectExA": "Retrieves the current selection from a single - selection list box.", "DlgDirSelectExW": "Retrieves the current selection from a single - selection list box.", "DPA_AppendPtr": "Inserts a new item at the end of a dynamic pointer array.", "DPA_Clone": "Duplicates a dynamic pointer array.", "DPA_Create": "Creates a dynamic pointer array.", "DPA_CreateEx": "Creates a dynamic pointer array using a given specified size and heap location.", "DPA_DeleteAllPtrs": "Removes all items from a dynamic pointer array and shrinks the DPA accordingly.", "DPA_DeletePtr": "Removes an item from a dynamic pointer array.", "DPA_Destroy": "Frees a Dynamic Pointer Array.", "DPA_DestroyCallback": "Calls pfnCB on each element of the dynamic pointer array, then frees the DPA.", "DPA_EnumCallback": "Iterates through the Dynamic Pointer Array and calls pfnCB on each item.", "DPA_FastDeleteLastPtr": "Deletes the last pointer from a dynamic pointer array.", "DPA_FastGetPtr": "Gets the value of the specified pointer in the dynamic pointer array.", "DPA_GetPtr": "Gets an item from a dynamic pointer array.", "DPA_GetPtrCount": "Gets the number of pointers in a dynamic pointer array.", "DPA_GetPtrIndex": "Gets the index of a matching item found in a dynamic pointer array.", "DPA_GetPtrPtr": "Gets the pointer to the internal pointer array of a dynamic pointer array.", "DPA_GetSize": "Gets the size of a dynamic pointer array.", "DPA_Grow": "Changes the number of pointers in a dynamic pointer array.", "DPA_InsertPtr": "If necessary, the DPA expands to accommodate the new item.", "DPA_LoadStream": "Loads the dynamic pointer array from a stream by calling the specified callback function to read each element.", "DPA_Merge": "Combines the contents of two dynamic pointer arrays.", "DPA_SaveStream": "Saves the dynamic pointer array to a stream by writing out a header, and then calling the specified callback function to write each element.", "DPA_Search": "Finds an item in a dynamic pointer array.", "DPA_SetPtr": "Assigns a value to an item in a dynamic pointer array.", "DPA_SetPtrCount": "Sets the number of pointers in a dynamic pointer array.", "DPA_Sort": "Sorts the items in a Dynamic Pointer Array.", "DPA_SortedInsertPtr": "Inserts a new item before or after a specified existing item.", "DragEnter": "Locks updates to the specified window during a drag operation and displays the drag image at the specified position within the window.", "DragLeave": "Unlocks the specified window and hides the drag image, which enables the window to update.", "DragMove": "Moves the image that is being dragged during a drag - and - drop operation.", "DragShowNolock": "Shows or hides the image being dragged.", "Draw": "Draws an image list item in the specified device context.", "DrawInsert": "Draws the insert icon in the parent window of the specified drag list box.", "DrawShadowText": "Draws text that has a shadow.", "DrawStatusTextA": "The DrawStatusText function draws the specified text in the style of a status window with borders.", "DrawStatusTextW": "The DrawStatusText function draws the specified text in the style of a status window with borders.", "DrawThemeBackground": "Draws the border and fill defined by the visual style for the specified control part.", "DrawThemeBackgroundEx": "Draws the background image defined by the visual style for the specified control part.", "DrawThemeEdge": "Draws one or more edges defined by the visual style of a rectangle.", "DrawThemeIcon": "Draws an image from an image list with the icon effect defined by the visual style.", "DrawThemeParentBackground": "Draws the part of a parent control that is covered by a partially-transparent or alpha-blended child control.", "DrawThemeParentBackgroundEx": "Sends a WM_ERASEBKGND message followed by a WM_PRINTCLIENT.", "DrawThemeText": "Draws text using the color and font defined by the visual style.", "DrawThemeTextEx": "Extends DrawThemeText by allowing additional text format options.", "DSA_AppendItem": "Appends a new item to the end of a dynamic structure array.", "DSA_Clone": "Duplicates a dynamic structure array.", "DSA_Create": "Creates a dynamic structure array.", "DSA_DeleteAllItems": "Deletes all items from a dynamic structure array.", "DSA_DeleteItem": "Deletes an item from a dynamic structure array.", "DSA_Destroy": "Frees a dynamic structure array.", "DSA_DestroyCallback": "Upon reaching the end of the array, the DSA is freed.", "DSA_EnumCallback": "Iterates through the dynamic structure array and calls pfnCB on each item.", "DSA_GetItem": "Gets an element from a dynamic structure array.", "DSA_GetItemCount": "Gets the number of items in a dynamic structure array.", "DSA_GetItemPtr": "Gets a pointer to an element from a dynamic structure array.", "DSA_GetSize": "Gets the size of the dynamic structure array.", "DSA_InsertItem": "If necessary, the DSA expands to accommodate the new item.", "DSA_SetItem": "Sets the contents of an element in a dynamic structure array.", "DSA_Sort": "Sorts the items in a dynamic structure array.", "Edit_CanUndo": "Determines whether there are any actions in the undo queue of an edit or rich edit control.", "Edit_EmptyUndoBuffer": "Resets the undo flag of an edit or rich edit control.", "Edit_Enable": "Enables or disables an edit control.", "Edit_EnableSearchWeb": "Enables or disables the \" Search with Bing\u00e2\u0080 \u00a6 \" context menu item in edit controls.", "Edit_FmtLines": "Sets a flag that determines whether text retrieved from a multiline edit control includes soft line-break characters.", "Edit_GetCaretIndex": "Gets the character index of the caret location for a given edit control.", "Edit_GetCueBannerText": "Gets the text that is displayed as a textual cue, or tip, in an edit control.", "Edit_GetEndOfLine": "Gets the end of line character used for the content of the edit control.", "Edit_GetExtendedStyle": "Gets the extended styles that are currently in use for a given edit control.", "Edit_GetFileLine": "Gets the text of the specified file.", "Edit_GetFileLineCount": "Gets the number of file.", "Edit_GetFileLineFromChar": "Gets the index of the file.", "Edit_GetFileLineIndex": "Gets the index of the file line of text based on the specified visible line.", "Edit_GetFileLineLength": "Gets the length of the file.", "Edit_GetFirstVisibleLine": "Gets the index of the uppermost visible line in a multiline edit or rich edit control.", "Edit_GetHandle": "Gets a handle to the memory currently allocated for the text of a multiline edit control.", "Edit_GetHilite": "This macro is not implemented.", "Edit_GetLine": "Retrieves a line of text from an edit or rich edit control.", "Edit_GetLineCount": "Gets the number of lines in the text of an edit control.", "Edit_GetModify": "Gets the state of an edit or rich edit control 's modification flag.", "Edit_GetPasswordChar": "Gets the password character for an edit or rich edit control.", "Edit_GetRect": "Gets the formatting rectangle of an edit control.", "Edit_GetSel": "Gets the starting and ending character positions of the current selection in an edit or rich edit control.", "Edit_GetText": "Gets the text of an edit control.", "Edit_GetTextLength": "Gets the number of characters in the text of an edit control.", "Edit_GetWordBreakProc": "Retrieves the address of an edit or rich edit control 's Wordwrap function.", "Edit_GetZoom": "Gets the current zoom ratio of an edit control.", "Edit_HideBalloonTip": "Hides any balloon tip associated with an edit control.", "Edit_LimitText": "Limits the length of text that can be entered into an edit control.", "Edit_LineFromChar": "Gets the index of the line that contains the specified character index in a multiline edit or rich edit control.", "Edit_LineIndex": "Gets the character index of the first character of a specified line in a multiline edit or rich edit control.", "Edit_LineLength": "Retrieves the length, in characters, of a line in an edit or rich edit control.", "Edit_NoSetFocus": "Prevents a single - line edit control from receiving keyboard focus.", "Edit_ReplaceSel": "Replaces the selected text in an edit control or a rich edit control with the specified text.", "Edit_Scroll": "Scrolls the text vertically in a multiline edit or rich edit control.", "Edit_ScrollCaret": "Scrolls the caret into view in an edit or rich edit control.", "Edit_SearchWeb": "Invokes the \" Search with Bing\u00e2\u0080 \u00a6 \" context menu item in edit controls.", "Edit_SetCaretIndex": "Sets the character index at which to locate the caret.", "Edit_SetCueBannerText": "Sets the text that is displayed as the textual cue, or tip, for an edit control.", "Edit_SetCueBannerTextFocused": "Sets the text that is displayed as the textual cue, or tip, for an edit control.", "Edit_SetEndOfLine": "Sets the end of line character used for the content of the edit control.", "Edit_SetExtendedStyle": "Sets extended styles for edit controls using the style mask.", "Edit_SetHandle": "Sets the handle of the memory that will be used by a multiline edit control.", "Edit_SetHilite": "This macro is not implemented.", "Edit_SetModify": "Sets or clears the modification flag for an edit control.", "Edit_SetPasswordChar": "Sets or removes the password character for an edit or rich edit control.", "Edit_SetReadOnly": "Sets or removes the read - only style of an edit or rich edit control.", "Edit_SetRect": "Sets the formatting rectangle of an edit control.", "Edit_SetRectNoPaint": "This macro is equivalent to Edit_SetRect, except that it does not redraw the edit control window.", "Edit_SetSel": "Selects a range of characters in an edit or rich edit control.", "Edit_SetTabStops": "When text is copied to the control, any tab character in the text causes space to be generated up to the next tab stop.", "Edit_SetText": "Sets the text of an edit control.", "Edit_SetWordBreakProc": "Replaces an edit control 's default Wordwrap function with an application - defined Wordwrap function.", "Edit_SetZoom": "Sets the current zoom ratio of an edit control.", "Edit_ShowBalloonTip": "Displays a balloon tip associated with an edit control.", "Edit_TakeFocus": "Forces a single - line edit control to receive keyboard focus.", "Edit_Undo": "Undoes the last operation in the undo queue of an edit or rich edit control.", "EDITSTREAMCALLBACK": "The EditStreamCallback function is an application defined callback function used with the EM_STREAMIN and EM_STREAMOUT messages.", "EDITWORDBREAKPROCA": "An application-defined callback function used with the EM_SETWORDBREAKPROC message.", "EDITWORDBREAKPROCEX": "The EditWordBreakProcEx function is an application defined callback function used with the EM_SETWORDBREAKPROCEX message.", "EDITWORDBREAKPROCW": "An application-defined callback function used with the EM_SETWORDBREAKPROC message.", "EnableScrollBar": "The EnableScrollBar function enables or disables one or both scroll bar arrows.", "EnableThemeDialogTexture": "Enables or disables the visual style of the background of a dialog window.", "EnableTheming": "Windows\u00c2 \u00a0 8 and later:_This function does nothing.", "EncodeFunction": "Encodes an object, given a set of argument strings.", "EndBufferedAnimation": "Renders the first frame of a buffered animation operation and starts the animation timer.", "EndBufferedPaint": "Completes a buffered paint operation and frees the associated buffered paint handle.", "EndDrag": "Ends a drag operation.", "EndEditCollection": "Turns off edit collection.", "EndKey": "Mimics the functionality of the End key.", "EndOf": "Moves this range's ends to the end of the last overlapping Unit in the range.", "EndPanningFeedback": "Terminates any existing animation that was in process or set up by BeginPanningFeedback and UpdatePanningFeedback.", "EvaluateProximityToPolygon": "Returns the score of a polygon as the probable touch target and an adjusted touch point within the polygon.", "EvaluateProximityToRect": "Returns the score of a rectangle as the probable touch target, compared to all other rectangles that intersect the touch contact area, and an adjusted touch point within the rectangle.", "Expand": "Expands this range so that any partial units it contains are completely contained.", "Find": "Searches for math inline functions in text as specified by a source range.", "FindText": "Searches up to Count characters for the text given by bstr.", "FindTextEnd": "Searches up to Count characters for the string, bstr, starting from the range's End cp.", "FindTextStart": "Searches up to Count characters for the string, bstr, starting at the range's Start cp.", "FIRST_IPADDRESS": "Extracts the field 0 value from a packed IP address retrieved with the IPM_GETADDRESS message.", "FlatSB_EnableScrollBar": "If flat scroll bars are not initialized for the window, this function calls the standard EnableScrollBar function.", "FlatSB_GetScrollInfo": "Gets the information for a flat scroll bar.", "FlatSB_GetScrollPos": "If flat scroll bars are not initialized for the window, this function calls the standard GetScrollPos function.", "FlatSB_GetScrollProp": "Gets the properties for a flat scroll bar.", "FlatSB_GetScrollPropPtr": "Gets the properties for a flat scroll bar.", "FlatSB_GetScrollRange": "Gets the scroll range for a flat scroll bar.", "FlatSB_SetScrollInfo": "Sets the information for a flat scroll bar.", "FlatSB_SetScrollPos": "If flat scroll bars are not initialized for the window, this function calls the standard SetScrollPos function.", "FlatSB_SetScrollProp": "Sets the properties for a flat scroll bar.", "FlatSB_SetScrollRange": "Sets the scroll range of a flat scroll bar.", "FlatSB_ShowScrollBar": "Shows or hides a flat scroll bar.", "ForceImagePresent": "Forces an image present, as specified.", "FORWARD_WM_NOTIFY": "Sends or posts the WM_NOTIFY message.", "FOURTH_IPADDRESS": "Extracts the field 3 value from a packed IP address retrieved with the IPM_GETADDRESS message.", "Freeze": "Increments the freeze count.", "GetActive": "Sets the active state of a story.", "GetActiveStory": "Gets the active story; that is, the story that receives keyboard and mouse input.", "GetAlignment": "Gets the horizontal alignment of a row.", "GetAllCaps": "Gets whether the characters are all uppercase.", "GetAnimation": "Gets the animation type.", "GetAutoLigatures": "Gets whether support for automatic ligatures is active.", "GetAutospaceAlpha": "Gets the East Asian \"autospace alphabetics\" state.", "GetAutospaceNumeric": "Gets the East Asian \"autospace numeric\" state.", "GetAutospaceParens": "Gets the East Asian \"autospace parentheses\" state.", "GetBackColor": "Gets the text background color.", "GetBkColor": "Gets the current background color for an image list.", "GetBold": "Gets whether the characters are bold.", "GetBorders": "Gets the borders collection.", "GetBoundaryRectangle": "Retrieves the bounding rectangle of a windowless rich edit control.", "GetBufferedPaintBits": "Retrieves a pointer to the buffer bitmap if the buffer is a device-independent bitmap.", "GetBufferedPaintDC": "Gets the paint device context.", "GetBufferedPaintTargetDC": "Retrieves the target device context.", "GetBufferedPaintTargetRect": "Retrieves the target rectangle specified by BeginBufferedPaint.", "GetCallback": "Gets an image list callback object.", "GetCallManager": "Gets the call manager.", "GetCaretType": "Gets the caret type.", "GetCch": "Gets the count of characters for a selected string index.", "GetCellAlignment": "Gets the vertical alignment of the active cell.", "GetCellBorderColors": "Gets the border colors of the active cell.", "GetCellBorderWidths": "Gets the border widths of the active cell.", "GetCellColorBack": "Gets the background color of the active cell.", "GetCellColorFore": "Gets the foreground color of the active cell.", "GetCellCount": "Gets the count of cells in this row.", "GetCellCountCache": "Gets the count of cells cached for this row.", "GetCellIndex": "Gets the index of the active cell to get or set parameters for.", "GetCellMargin": "Gets the cell margin of this row.", "GetCellMergeFlags": "Gets the merge flags of the active cell.", "GetCells": "Gets a cells object with the parameters of cells in the currently selected table row or column.", "GetCellShading": "Gets the shading of the active cell.", "GetCellVerticalText": "Gets the vertical-text setting of the active cell.", "GetCellWidth": "Gets the width of the active cell.", "GetChar": "Gets the character at the start position of the range.", "GetChar2": "Gets the character at the specified offset from the end of this range.", "GetCharRep": "Gets the character repertoire.", "GetCIMSSM": "Retrieves the source of the input message.", "GetClientRect": "Retrieves the client rectangle of the rich edit control.", "GetClientSite": "A client site may be used with exactly one object.", "GetClipboardData": "Allows the client to supply its own clipboard object.", "GetColumn": "Gets the column properties for the currently selected column.", "GetComboBoxInfo": "Retrieves information about the specified combo box.", "GetCompressionMode": "Gets the East Asian compression mode.", "GetContextMenu": "Queries the application for a context menu to use on a right-click event.", "GetCookie": "Gets the client cookie.", "GetCount": "Gets the number of strings in a string collection.", "GetCurrentInputMessageSource": "Retrieves the source of the input message.", "GetCurrentThemeName": "Retrieves the name of the current visual style, and optionally retrieves the color scheme name and size name.", "GetDefaultTabStop": "Gets the default tab width.", "GetDisplay": "Gets a new display for a story.", "GetDisplays": "Gets the displays collection for this Text Object Model engine instance.", "GetDocumentFont": "Gets an object that provides the default character format information for this instance of the Text Object Model engine.", "GetDocumentPara": "Gets an object that provides the default paragraph format information for this instance of the Text Object Model engine.", "GetDoubleStrike": "Gets whether characters are displayed with double horizontal lines through the center.", "GetDragDropEffect": "Allows the client to specify the effects of a drop operation.", "GetDragImage": "Gets the temporary image list that is used for the drag image.", "GetDropCap": "Gets the drop-cap parameters of the paragraph that contains this range.", "GetDuplicate": "Gets a duplicate of this range object.", "GetDuplicate2": "Gets a duplicate of a range object.", "GetEastAsianFlags": "Gets the East Asian flags.", "GetEffectColor": "Retrieves the color used for special text attributes.", "GetEffectiveClientRect": "Calculates the dimensions of a rectangle in the client area that contains all the specified controls.", "GetEffects": "Gets the paragraph format effects.", "GetEffects2": "Gets the additional character format effects.", "GetEmbeddedObject": "The range must either be an insertion point or it must select only the embedded object.", "GetEmboss": "Gets whether characters are embossed.", "GetEnd": "Gets the end character position of the range.", "GetEngrave": "Gets whether characters are displayed as imprinted characters.", "GetFirstLineIndent": "The left indent is the indent for all lines of the paragraph except the first line.", "GetFlags": "Gets the text selection flags.", "GetFont": "Gets an ITextFont object with the character attributes of the specified range.", "GetFont2": "Gets an ITextFont2 object with the character attributes of the current range.", "GetFontAlignment": "Gets the paragraph font alignment state.", "GetForeColor": "Gets the foreground, or text, color.", "GetFormattedText": "Gets an ITextRange object with the specified range's formatted text.", "GetFormattedText2": "Gets an ITextRange2 object with the current range's formatted text.", "GetGenerator": "Gets the name of the Text Object Model engine.", "GetGravity": "Gets the gravity of this range.", "GetHangingPunctuation": "Gets whether to hang punctuation symbols on the right margin when the paragraph is justified.", "GetHeight": "Gets the height of the row.", "GetHidden": "Gets whether characters are hidden.", "GetHyphenation": "Determines whether automatic hyphenation is enabled for the range.", "GetIcon": "Creates an icon from an image and a mask in an image list.", "GetIconSize": "Gets the dimensions of images in an image list.", "GetImageCount": "Gets the number of images in an image list.", "GetImageInfo": "Gets information about an image.", "GetImageRect": "Gets an image's bounding rectangle.", "GetImmContext": "Gets the Input Method Manager host.", "GetIndent": "Gets the indent of this row.", "GetIndex": "Gets the index of a story.", "GetInlineObject": "Gets the properties of the inline object at the range active end.", "GetInPlaceContext": "Provides the application and document-level interfaces and information required to support in-place activation.", "GetItalic": "Gets whether characters are in italics.", "GetItemFlags": "Gets the flags of an image.", "GetKeepTogether": "Gets whether this row is allowed to be broken across pages.", "GetKeepWithNext": "Gets whether this row should appear on the same page as the row that follows it.", "GetKerning": "Gets the minimum font size at which kerning occurs.", "GetLanguageID": "Gets the language ID or language code identifier.", "GetLeftIndent": "The distance is relative to the left margin.", "GetLineSpacing": "Retrieves the line-spacing value for the text range.", "GetLineSpacingRule": "Retrieves the line-spacing rule for the text range.", "GetLinkCount": "Returns the number of objects in a rich edit control that are links.", "GetLinkType": "Gets the link type.", "GetListAlignment": "Retrieves the kind of alignment to use for bulleted and numbered lists.", "GetListBoxInfo": "Retrieves the number of items per column in a specified list box.", "GetListLevelIndex": "Retrieves the list level index used with paragraphs.", "GetListStart": "Retrieves the starting value or code of a list numbering sequence.", "GetListTab": "Retrieves the list tab setting, which is the distance between the first - line indent and the text on the first line.", "GetListType": "Retrieves the kind of numbering to use with paragraphs.", "GetMainStory": "Gets the main story.", "GetMathFunctionType": "Retrieves the math function type associated with the specified math function name.", "GetMathProperties": "Gets the math properties for the document.", "GetMathZone": "Gets whether a math zone is active.", "GetModWidthPairs": "Gets whether \"decrease widths on pairs\" is active.", "GetModWidthSpace": "Gets whether \"increase width of whitespace\" is active.", "GetMUILanguage": "Gets the language currently in use by the common controls for a particular process.", "GetName": "Gets the font name.", "GetNestLevel": "Gets the nest level of a table.", "GetNewStorage": "Provides storage for a new object pasted from the clipboard or read in from an Rich Text Format stream.", "GetNewStory": "Gets a new story.", "GetNoLineNumber": "Determines whether paragraph numbering is enabled.", "GetNotificationMode": "Gets the notification mode.", "GetObject": "Retrieves information, stored in a REOBJECT structure, about an object in a rich edit control.", "GetObjectCount": "Returns the number of objects currently contained in a rich edit control.", "GetOldNumbers": "Gets whether old-style numbers are active.", "GetOriginalSize": "Gets the original size of a specified image.", "GetOutline": "Gets whether characters are displayed as outlined characters.", "GetOverlapping": "Gets whether overlapping text is active.", "GetOverlayImage": "Retrieves a specified image from the list of images used as overlay masks.", "GetPageBreakBefore": "Determines whether each paragraph in the range must begin on a new page.", "GetPara": "Gets an ITextPara object with the paragraph attributes of the specified range.", "GetPara2": "Gets an ITextPara2 object with the paragraph attributes of a range.", "GetPoint": "Retrieves screen coordinates for the start or end character position in the text range, along with the intra-line position.", "GetPointerDevice": "Gets information about the pointer device.", "GetPointerDeviceCursors": "Gets the cursor IDs that are mapped to the cursors associated with a pointer device.", "GetPointerDeviceProperties": "Gets device properties that aren't included in the POINTER_DEVICE_INFO structure.", "GetPointerDeviceRects": "Gets the x and y range for the pointer device for the display that the pointer device is mapped to.", "GetPointerDevices": "Gets information about the pointer devices attached to the system.", "GetPosition": "Gets the amount that characters are offset vertically relative to the baseline.", "GetPositionSubSuper": "Gets the subscript or superscript position relative to the baseline.", "GetPreferredFont": "Retrieves the preferred font for a particular character repertoire and character position.", "GetProperty": "Gets the value of the specified property.", "GetPropertyInfo": "Gets the property type and value of the specified extra property.", "GetPropertyOverrideValue": "Retrieves the host container's override value for the specified Microsoft UI Automation accessibility property of a windowless rich edit control.", "GetProtected": "Gets whether characters are protected against attempts to modify them.", "GetRange": "Gets a text range object for the story.", "GetRawPointerDeviceData": "Gets the raw input data from the pointer device.", "GetRect": "Retrieves a rectangle of the specified type for the current range.", "GetRightIndent": "Retrieves the size of the right margin indent of a paragraph.", "GetRow": "Gets the row properties in the currently selected row.", "GetRTL": "Gets whether this row has right-to-left orientation.", "GetSaved": "Gets a value that indicates whether changes have been made since the file was last saved.", "GetScaling": "Gets the font horizontal scaling percentage.", "GetScrollBarInfo": "The GetScrollBarInfo function retrieves information about the specified scroll bar.", "GetScrollInfo": "The GetScrollInfo function retrieves the parameters of a scroll bar, including the minimum and maximum scrolling positions, the page size, and the position of the scroll box.", "GetScrollPos": "The GetScrollPos function retrieves the current position of the scroll box in the specified scroll bar.", "GetScrollRange": "The GetScrollRange function retrieves the current minimum and maximum scroll box positions for the specified scroll bar.", "GetSelection": "Gets the active selection.", "GetSelection2": "Gets the active selection.", "GetShadow": "Gets whether characters are displayed as shadowed characters.", "GetSize": "Gets the font size.", "GetSmallCaps": "Gets whether characters are in small capital letters.", "GetSnapToGrid": "Gets whether paragraph lines snap to a vertical grid that could be defined for the whole document.", "GetSpaceAfter": "Retrieves the amount of vertical space below a paragraph.", "GetSpaceBefore": "Retrieves the amount of vertical space above a paragraph.", "GetSpaceExtension": "Gets the East Asian space extension value.", "GetSpacing": "Gets the amount of horizontal spacing between characters.", "GetStart": "Gets the start character position of the range.", "GetStartPara": "Gets the character position of the start of the paragraph that contains the range's start character position.", "GetStatistics": "Gets an image list statistics structure.", "GetStory": "Retrieves the story that corresponds to a particular index.", "GetStoryCount": "Gets the count of stories in this document.", "GetStoryLength": "Gets the count of characters in the range's story.", "GetStoryRanges": "Gets the story collection object used to enumerate the stories in a document.", "GetStoryRanges2": "Gets an object for enumerating the stories in a document.", "GetStoryType": "Get the type of the range's story.", "GetStrikeThrough": "Gets whether characters are displayed with a horizontal line through the center.", "GetStrings": "Gets a collection of rich-text strings.", "GetStyle": "Retrieves the style handle to the paragraphs in the specified range.", "GetSubrange": "Retrieves a subrange in a range.", "GetSubscript": "Gets whether characters are displayed as subscript.", "GetSuperscript": "Gets whether characters are displayed as superscript.", "GetTab": "Retrieves tab parameters for a specified tab.", "GetTabCount": "Retrieves the tab count.", "GetTable": "Gets the table properties in the currently selected table.", "GetText": "Gets the text in a story according to the specified conversion flags.", "GetText2": "Gets the text in this range according to the specified conversion flags.", "GetThemeAnimationProperty": "Gets a theme animation property based on the storyboard id and the target id.", "GetThemeAnimationTransform": "Gets an animation transform operation based on storyboard id, target id and transform index.", "GetThemeAppProperties": "Retrieves the property flags that control how visual styles are applied in the current application.", "GetThemeBackgroundContentRect": "Retrieves the size of the content area for the background defined by the visual style.", "GetThemeBackgroundExtent": "Calculates the size and location of the background, defined by the visual style, given the content area.", "GetThemeBackgroundRegion": "Computes the region for a regular or partially transparent background that is bounded by a specified rectangle.", "GetThemeBitmap": "Retrieves the bitmap associated with a particular theme, part, state, and property.", "GetThemeBool": "Retrieves the value of a BOOL property from the SysMetrics section of theme data.", "GetThemeColor": "Retrieves the value of a color property.", "GetThemeDocumentationProperty": "Retrieves the value for a theme property from the documentation section of the specified theme file.", "GetThemeEnumValue": "Retrieves the value of an enumerated type property.", "GetThemeFilename": "Retrieves the value of a filename property.", "GetThemeFont": "Retrieves the value of a font property.", "GetThemeInt": "Retrieves the value of an int property.", "GetThemeIntList": "Retrieves a list of int data from a visual style.", "GetThemeMargins": "Retrieves the value of a MARGINS property.", "GetThemeMetric": "Retrieves the value of a metric property.", "GetThemePartSize": "Calculates the original size of the part defined by a visual style.", "GetThemePosition": "Retrieves the value of a position property.", "GetThemePropertyOrigin": "Retrieves the location of the theme property definition for a property.", "GetThemeRect": "Retrieves the value of a RECT property.", "GetThemeStream": "Retrieves a data stream corresponding to a specified theme, starting from a specified part, state, and property.", "GetThemeString": "Retrieves the value of a string property.", "GetThemeSysBool": "Retrieves the Boolean value of a system metric.", "GetThemeSysColor": "Retrieves the value of a system color.", "GetThemeSysColorBrush": "Retrieves a system color brush.", "GetThemeSysFont": "Retrieves the LOGFONT of a system font.", "GetThemeSysInt": "Retrieves the value of a system int.", "GetThemeSysSize": "Retrieves the value of a system size metric from theme data.", "GetThemeSysString": "Retrieves the value of a system string.", "GetThemeTextExtent": "Calculates the size and location of the specified text when rendered in the visual style font.", "GetThemeTextMetrics": "Retrieves information about the font specified by a visual style for a particular part.", "GetThemeTimingFunction": "Gets a predefined timing function based on a timing function identifier.", "GetThemeTransitionDuration": "Gets the duration for the specified transition.", "GetTrimPunctuationAtStart": "Gets whether to trim the leading space of a punctuation symbol at the start of a line.", "GetType": "Gets this story's type.", "GetTypographyOptions": "Gets the typography options.", "GetUnderline": "Gets the type of underlining for the characters in a range.", "GetUnderlinePositionMode": "Gets the underline position mode.", "GetURL": "Returns the URL text associated with a range.", "GetVersion": "Gets the version number of the Text Object Model engine.", "GetWeight": "Gets the font weight for the characters in a range.", "GetWidowControl": "Retrieves the widow and orphan control state for the paragraphs in a range.", "GetWindow": "Gets the handle of the window that the Text Object Model engine is using to display output.", "GetWindowFeedbackSetting": "Retrieves the feedback configuration for a window.", "GetWindowTheme": "Retrieves a theme handle to a window that has visual styles applied.", "HANDLE_WM_NOTIFY": "Calls a function that processes the WM_NOTIFY message.", "HandsOffStorage": "This call does not call the object 's IRichEditOle::HandsOffStorage method ; the caller must do that.", "Header_ClearAllFilters": "Clears all of the filters for a given header control.", "Header_ClearFilter": "Clears the filter for a given header control.", "Header_CreateDragImage": "Creates a transparent version of an item image within an existing header control.", "Header_DeleteItem": "Deletes an item from a header control.", "Header_EditFilter": "Moves the input focus to the edit box when a filter button has the focus.", "Header_GetBitmapMargin": "Gets the width of the margin of a bitmap in an existing header control.", "Header_GetFocusedItem": "Gets the item in a header control that has the focus.", "Header_GetImageList": "Gets the handle to the image list that has been set for an existing header control.", "Header_GetItem": "Gets information about an item in a header control.", "Header_GetItemCount": "Gets a count of the items in a header control.", "Header_GetItemDropDownRect": "The header control must be of type HDF_SPLITBUTTON.", "Header_GetItemRect": "Gets the bounding rectangle for a given item in a header control.", "Header_GetOrderArray": "Gets the current left - to - right order of items in a header control.", "Header_GetOverflowRect": "The header control must be of type HDF_SPLITBUTTON.", "Header_GetStateImageList": "Gets the handle to the image list that has been set for an existing header control state.", "Header_GetUnicodeFormat": "Gets the Unicode character format flag for the control.", "Header_InsertItem": "Inserts a new item into a header control.", "Header_Layout": "Retrieves the correct size and position of a header control within the parent window.", "Header_OrderToIndex": "Retrieves an index value for an item based on its order in the header control.", "Header_SetBitmapMargin": "Sets the width of the margin for a bitmap in an existing header control.", "Header_SetFilterChangeTimeout": "Sets the timeout interval between the time a change takes place in the filter attributes and the posting of an HDN_FILTERCHANGE notification.", "Header_SetFocusedItem": "Sets the focus to a specified item in a header control.", "Header_SetHotDivider": "Changes the color of a divider between header items to indicate the destination of an external drag - and - drop operation.", "Header_SetImageList": "Assigns an image list to an existing header control.", "Header_SetItem": "Sets the attributes of the specified item in a header control.", "Header_SetOrderArray": "Sets the left - to - right order of header items.", "Header_SetStateImageList": "Assigns an image list to an existing header control state.", "Header_SetUnicodeFormat": "Sets the UNICODE character format flag for the control.", "HexToUnicode": "Converts and replaces the hexadecimal number at the end of this range to a Unicode character.", "HIMAGELIST_QueryInterface": "Retrieves a pointer to an IImageList or IImageList2 object that corresponds to the image list's HIMAGELIST handle.", "HitTestThemeBackground": "Retrieves a hit test code for a point in the background specified by a visual style.", "HomeKey": "Generalizes the functionality of the Home key.", "HyphenateProc": "The HyphenateProc function is an application\u00ef\u00bf\u00bddefined callback function used with the EM_SETHYPHENATEINFO message.", "ImageList_Add": "Adds an image or images to an image list.", "ImageList_AddIcon": "Adds an icon or cursor to an image list.", "ImageList_AddMasked": "Adds an image or images to an image list, generating a mask from the specified bitmap.", "ImageList_BeginDrag": "Begins dragging an image.", "ImageList_CoCreateInstance": "Creates a single instance of an imagelist and returns an interface pointer to it.", "ImageList_Copy": "Copies images within a given image list.", "ImageList_Create": "Creates a new image list.", "ImageList_Destroy": "Destroys an image list.", "ImageList_DragEnter": "Displays the drag image at the specified position within the window.", "ImageList_DragLeave": "Unlocks the specified window and hides the drag image, allowing the window to be updated.", "ImageList_DragMove": "Moves the image that is being dragged during a drag - and - drop operation.", "ImageList_DragShowNolock": "Shows or hides the image being dragged.", "ImageList_Draw": "Draws an image list item in the specified device context.", "ImageList_DrawEx": "Draws an image list item in the specified device context.", "ImageList_DrawIndirect": "Draws an image list image based on an IMAGELISTDRAWPARAMS structure.", "ImageList_Duplicate": "Creates a duplicate of an existing image list.", "ImageList_EndDrag": "Ends a drag operation.", "ImageList_ExtractIcon": "Calls the ImageList_GetIcon function to create an icon or cursor based on an image and mask in an image list.", "ImageList_GetBkColor": "Retrieves the current background color for an image list.", "ImageList_GetDragImage": "Retrieves the temporary image list that is used for the drag image.", "ImageList_GetIcon": "Creates an icon from an image and mask in an image list.", "ImageList_GetIconSize": "All images in an image list have the same dimensions.", "ImageList_GetImageCount": "Retrieves the number of images in an image list.", "ImageList_GetImageInfo": "Retrieves information about an image.", "ImageList_LoadBitmap": "Calls the ImageList_LoadImage function to create an image list from the specified bitmap resource.", "ImageList_LoadImageA": "Creates an image list from the specified bitmap.", "ImageList_LoadImageW": "Creates an image list from the specified bitmap.", "ImageList_Merge": "The function also creates a new image list in which to store the image.", "ImageList_Read": "Reads an image list from a stream.", "ImageList_ReadEx": "Reads an image list from a stream, and returns an IImageList interface to the image list.", "ImageList_Remove": "Removes an image from an image list.", "ImageList_RemoveAll": "Calls the ImageList_Remove function to remove all of the images from an image list.", "ImageList_Replace": "Replaces an image in an image list with a new image.", "ImageList_ReplaceIcon": "Replaces an image with an icon or cursor.", "ImageList_SetBkColor": "Sets the background color for an image list.", "ImageList_SetDragCursorImage": "Creates a new drag image by combining the specified image with the current drag image.", "ImageList_SetIconSize": "Sets the dimensions of images in an image list and removes all images from the list.", "ImageList_SetImageCount": "Resizes an existing image list.", "ImageList_SetOverlayImage": "An image list can have up to four overlay masks in version 4.70 and earlier and up to 15 in version 4.71.", "ImageList_Write": "Writes an image list to a stream.", "ImageList_WriteEx": "Writes an image list to a stream.", "ImportDataObject": "Imports a clipboard object into a rich edit control, replacing the current selection.", "INDEXTOOVERLAYMASK": "Prepares the index of an overlay mask so that the ImageList_Draw function can use it.", "INDEXTOSTATEIMAGEMASK": "Prepares the index of a state image so that a tree-view control or list-view control can use the index to retrieve the state image for an item.", "InitCommonControls": "This function is obsolete.", "InitCommonControlsEx": "Ensures that the common control DLL is loaded, and registers specific common control classes from the DLL.", "Initialize": "Initializes an image list.", "InitializeFlatSB": "Initializes flat scroll bars for a particular window.", "InitializeTouchInjection": "Configures the touch injection context for the calling application and initializes the maximum number of simultaneous contacts that the app can inject.", "InitMUILanguage": "Enables an application to specify a language to be used with the common controls that is different from the system language.", "InjectSyntheticPointerInput": "Simulates pointer input.", "InjectTouchInput": "Simulates touch input.", "InPlaceDeactivate": "Indicates when a rich edit control is to deactivate the currently active in-place object, if any.", "InRange": "Determines whether this range is within or at the same text as a specified range.", "Insert": "Inserts a row, or rows, at the location identified by the associated ITextRange2 object.", "InsertImage": "Inserts an image into this range.", "InsertNullStr": "Inserts a NULL string in the collection at a selected string index.", "InsertObject": "Inserts an object into a rich edit control.", "InsertTable": "Inserts a table in a range.", "InStory": "Determines whether this range's story is the same as a specified range's story.", "IsAppThemed": "Reports whether the current application's user interface displays using visual styles.", "IsCompositionActive": "Determines whether Desktop Window Manager composition effects are available to the theme.", "IsDlgButtonChecked": "The IsDlgButtonChecked function determines whether a button control is checked or whether a three-state button control is checked, unchecked, or indeterminate.", "IsEqual": "Compares two table rows to determine if they have the same properties.", "IsEqual2": "Determines whether this text paragraph object has the same properties as the specified text paragraph object.", "IsThemeActive": "Tests if a visual style for the current application is active.", "IsThemeBackgroundPartiallyTransparent": "Retrieves whether the background specified by the visual style has transparent pieces or alpha-blended pieces.", "IsThemeDialogTextureEnabled": "Reports whether a specified dialog window supports background texturing.", "IsThemePartDefined": "Retrieves whether a visual style has defined parameters for the specified part and state.", "IsVisible": "Indicates whether a windowless rich edit control is currently visible.", "Item": "Gets an ITextRange2 object for a selected index in a string collection.", "Item2": "Gets an ITextRange2 object for a story, by index, in a stories collection.", "LBItemFromPt": "Retrieves the index of the item at the specified point in a list box.", "Linearize": "Translates the built-up math, ruby, and other inline objects in this range to linearized form.", "ListBox_AddItemData": "Adds item data to the list box at the specified location.", "ListBox_AddString": "Adds a string to a list box.", "ListBox_DeleteString": "Deletes the item at the specified location in a list box.", "ListBox_Dir": "Adds names to the list displayed by a list box.", "ListBox_Enable": "Enables or disables a list box control.", "ListBox_FindItemData": "Finds the first item in a list box that has the specified item data.", "ListBox_FindString": "Finds the first string in a list box that begins with the specified string.", "ListBox_FindStringExact": "Finds the first list box string that exactly matches the specified string, except that the search is not case sensitive.", "ListBox_GetCaretIndex": "The item may or may not be selected.", "ListBox_GetCount": "Gets the number of items in a list box.", "ListBox_GetCurSel": "Gets the index of the currently selected item in a single - selection list box.", "ListBox_GetHorizontalExtent": "Gets the width that a list box can be scrolled horizontally if the list box has a horizontal scroll bar.", "ListBox_GetItemData": "Gets the application - defined value associated with the specified list box item.", "ListBox_GetItemHeight": "Retrieves the height of items in a list box.", "ListBox_GetItemRect": "Gets the dimensions of the rectangle that bounds a list box item as it is currently displayed in the list box.", "ListBox_GetSel": "Gets the selection state of an item.", "ListBox_GetSelCount": "Gets the count of selected items in a multiple - selection list box.", "ListBox_GetSelItems": "Gets the indexes of selected items in a multiple - selection list box.", "ListBox_GetText": "Gets a string from a list box.", "ListBox_GetTextLen": "Gets the length of a string in a list box.", "ListBox_GetTopIndex": "Gets the index of the first visible item in a list box.", "ListBox_InsertItemData": "Inserts item data to a list box at the specified location.", "ListBox_InsertString": "Adds a string to a list box at the specified location.", "ListBox_ResetContent": "Removes all items from a list box.", "ListBox_SelectItemData": "If a matching item is found, the item is selected.", "ListBox_SelectString": "If a matching item is found, the item is selected.", "ListBox_SelItemRange": "Selects or deselects one or more consecutive items in a multiple - selection list box.", "ListBox_SetCaretIndex": "If the item is not visible, it is scrolled into view.", "ListBox_SetColumnWidth": "Sets the width of all columns in a multiple - column list box.", "ListBox_SetCurSel": "Sets the currently selected item in a single - selection list box.", "ListBox_SetHorizontalExtent": "Set the width by which a list box can be scrolled horizontally.", "ListBox_SetItemData": "Sets the application - defined value associated with the specified list box item.", "ListBox_SetItemHeight": "Sets the height of items in a list box.", "ListBox_SetSel": "Selects or deselects an item in a multiple - selection list box.", "ListBox_SetTabStops": "Sets the tab - stop positions in a list box.", "ListBox_SetTopIndex": "Ensures that the specified item in a list box is visible.", "ListView_ApproximateViewRect": "Calculates the approximate width and height required to display a given number of items.", "ListView_Arrange": "Arranges items in icon view.", "ListView_CancelEditLabel": "Cancels an item text editing operation.", "ListView_CreateDragImage": "Creates a drag image list for the specified item.", "ListView_DeleteAllItems": "Removes all items from a list - view control.", "ListView_DeleteColumn": "Removes a column from a list - view control.", "ListView_DeleteItem": "Removes an item from a list - view control.", "ListView_EditLabel": "The message implicitly selects and focuses the specified item.", "ListView_EnableGroupView": "Enables or disables whether the items in a list - view control display as a group.", "ListView_EnsureVisible": "Ensures that a list - view item is either entirely or partially visible, scrolling the list - view control if necessary.", "ListView_FindItem": "Searches for a list - view item with the specified characteristics.", "ListView_GetBkColor": "Gets the background color of a list - view control.", "ListView_GetBkImage": "Gets the background image in a list - view control.", "ListView_GetCallbackMask": "Gets the callback mask for a list - view control.", "ListView_GetCheckState": "This should be used only for list - view controls that have the LVS_EX_CHECKBOXES style.", "ListView_GetColumn": "Gets the attributes of a list - view control 's column.", "ListView_GetColumnOrderArray": "Gets the current left - to - right order of columns in a list - view control.", "ListView_GetColumnWidth": "Gets the width of a column in report or list view.", "ListView_GetCountPerPage": "Only fully visible items are counted.", "ListView_GetEditControl": "Gets the handle to the edit control being used to edit a list - view item 's text.", "ListView_GetEmptyText": "Use this macro or send the LVM_GETEMPTYTEXT message explicitly.", "ListView_GetExtendedListViewStyle": "Gets the extended styles that are currently in use for a given list - view control.", "ListView_GetFocusedGroup": "Gets the group that has the focus.", "ListView_GetFooterInfo": "Gets information on the footer of a specified list - view control.", "ListView_GetFooterItem": "Gets information on a footer item for a specified list - view control.", "ListView_GetFooterItemRect": "Gets the coordinates of a footer for a specified item in a list - view control.", "ListView_GetFooterRect": "Gets the coordinates of the footer for a specified list - view control.", "ListView_GetGroupCount": "Gets the number of groups.", "ListView_GetGroupHeaderImageList": "Gets the group header image list that has been set for an existing list-view control.", "ListView_GetGroupInfo": "Gets group information.", "ListView_GetGroupInfoByIndex": "Gets information on a specified group.", "ListView_GetGroupMetrics": "Gets information about the display of groups.", "ListView_GetGroupRect": "Gets the rectangle for a specified group.", "ListView_GetGroupState": "Gets the state for a specified group.", "ListView_GetHeader": "Gets the handle to the header control used by a list - view control.", "ListView_GetHotCursor": "Gets the HCURSOR used when the pointer is over an item while hot tracking is enabled.", "ListView_GetHotItem": "Gets the index of the hot item.", "ListView_GetHoverTime": "Gets the amount of time that the mouse cursor must hover over an item before it is selected.", "ListView_GetImageList": "Gets the handle to an image list used for drawing list - view items.", "ListView_GetInsertMark": "Gets the position of the insertion point.", "ListView_GetInsertMarkColor": "Gets the color of the insertion point.", "ListView_GetInsertMarkRect": "Gets the rectangle that bounds the insertion point.", "ListView_GetISearchString": "Gets the incremental search string of a list - view control.", "ListView_GetItem": "Gets some or all of a list - view item 's attributes.", "ListView_GetItemCount": "Gets the number of items in a list - view control.", "ListView_GetItemIndexRect": "Gets the bounding rectangle for all or part of a subitem in the current view of a specified list - view control.", "ListView_GetItemPosition": "Gets the position of a list - view item.", "ListView_GetItemRect": "Gets the bounding rectangle for all or part of an item in the current view.", "ListView_GetItemSpacing": "Determines the spacing between items in a list - view control.", "ListView_GetItemState": "Gets the state of a list - view item.", "ListView_GetItemText": "Gets the text of a list - view item or subitem.", "ListView_GetNextItem": "Searches for a list - view item that has the specified properties and bears the specified relationship to a specified item.", "ListView_GetNextItemIndex": "Gets the index of the item in a particular list - view control that has the specified properties and relationship to another specific item.", "ListView_GetNumberOfWorkAreas": "Gets the number of working areas in a list - view control.", "ListView_GetOrigin": "Gets the current view origin for a list - view control.", "ListView_GetOutlineColor": "Gets the color of the border of a list - view control if the LVS_EX_BORDERSELECT extended window style is set.", "ListView_GetSelectedColumn": "Gets an integer that specifies the selected column.", "ListView_GetSelectedCount": "Determines the number of selected items in a list - view control.", "ListView_GetSelectionMark": "Gets the selection mark from a list - view control.", "ListView_GetStringWidth": "Determines the width of a specified string using the specified list - view control 's current font.", "ListView_GetSubItemRect": "Gets information about the rectangle that surrounds a subitem in a list-view control.", "ListView_GetTextBkColor": "Gets the text background color of a list - view control.", "ListView_GetTextColor": "Gets the text color of a list - view control.", "ListView_GetTileInfo": "Gets information about a tile in a list - view control.", "ListView_GetTileViewInfo": "Gets information about a list - view control in tile view.", "ListView_GetToolTips": "Gets the tooltip control that the list - view control uses to display tooltips.", "ListView_GetTopIndex": "Gets the index of the topmost visible item when in list or report view.", "ListView_GetUnicodeFormat": "Gets the Unicode character format flag for the control.", "ListView_GetView": "Gets the current view of a list - view control.", "ListView_GetViewRect": "The list view must be in icon or small icon view.", "ListView_GetWorkAreas": "Gets the working areas from a list - view control.", "ListView_HasGroup": "Determines whether the list - view control has a specified group.", "ListView_HitTest": "Determines which list - view item, if any, is at a specified position.", "ListView_HitTestEx": "Determines which list - view item, if any, is at a specified position.", "ListView_InsertColumn": "Inserts a new column in a list - view control.", "ListView_InsertGroup": "Inserts a group into a list - view control.", "ListView_InsertGroupSorted": "Inserts a group into an ordered list of groups.", "ListView_InsertItem": "Inserts a new item in a list - view control.", "ListView_InsertMarkHitTest": "Retrieves the insertion point closest to a specified point.", "ListView_IsGroupViewEnabled": "Checks whether the list - view control has group view enabled.", "ListView_IsItemVisible": "Indicates whether an item in the list - view control is visible.", "ListView_MapIDToIndex": "Maps the ID of an item to an index.", "ListView_MapIndexToID": "Maps the index of an item to a unique ID.", "ListView_MoveGroup": "This macro is not implemented.", "ListView_MoveItemToGroup": "This macro is not implemented.", "ListView_RedrawItems": "Forces a list - view control to redraw a range of items.", "ListView_RemoveAllGroups": "Removes all groups from a list - view control.", "ListView_RemoveGroup": "Removes a group from a list - view control.", "ListView_Scroll": "Scrolls the content of a list - view control.", "ListView_SetBkColor": "Sets the background color of a list - view control.", "ListView_SetBkImage": "Sets the background image in a list - view control.", "ListView_SetCallbackMask": "Changes the callback mask for a list - view control.", "ListView_SetCheckState": "Selects or deselects an item in a list - view control.", "ListView_SetColumn": "Sets the attributes of a list - view column.", "ListView_SetColumnOrderArray": "Sets the left - to - right order of columns in a list - view control.", "ListView_SetColumnWidth": "Used to change the width of a column in report view or the width of all columns in list - view mode.", "ListView_SetExtendedListViewStyle": "Sets extended styles for list - view controls.", "ListView_SetExtendedListViewStyleEx": "Sets extended styles for list - view controls using the style mask.", "ListView_SetGroupHeaderImageList": "Assigns an image list to the group header of a list-view control.", "ListView_SetGroupInfo": "Sets group information.", "ListView_SetGroupMetrics": "Sets information about the display of groups.", "ListView_SetGroupState": "Sets the state for a specified group.", "ListView_SetHotCursor": "To check whether hot tracking is enabled, call SystemParametersInfo.", "ListView_SetHotItem": "Sets the hot item in a list - view control.", "ListView_SetHoverTime": "Sets the amount of time that the mouse cursor must hover over an item before it is selected.", "ListView_SetIconSpacing": "Sets the spacing between icons in list - view controls set to the LVS_ICON style.", "ListView_SetImageList": "Assigns an image list to a list - view control.", "ListView_SetInfoTip": "Sets tooltip text.", "ListView_SetInsertMark": "Sets the insertion point to the defined position.", "ListView_SetInsertMarkColor": "Sets the color of the insertion point.", "ListView_SetItem": "Sets some or all of a list - view item 's attributes.", "ListView_SetItemCount": "Causes the list - view control to allocate memory for the specified number of items.", "ListView_SetItemCountEx": "Sets the virtual number of items in a virtual list view.", "ListView_SetItemIndexState": "Sets the state of a specified list - view item.", "ListView_SetItemPosition": "Moves an item to a specified position in a list - view control.", "ListView_SetItemPosition32": "Moves an item to a specified position in a list-view control.", "ListView_SetItemState": "Changes the state of an item in a list - view control.", "ListView_SetItemText": "Changes the text of a list - view item or subitem.", "ListView_SetOutlineColor": "Sets the color of the border of a list - view control if the LVS_EX_BORDERSELECT extended window style is set.", "ListView_SetSelectedColumn": "Sets the index of the selected column.", "ListView_SetSelectionMark": "Sets the selection mark in a list - view control.", "ListView_SetTextBkColor": "Sets the background color of text in a list - view control.", "ListView_SetTextColor": "Sets the text color of a list - view control.", "ListView_SetTileInfo": "Sets information for an existing tile of a list - view control.", "ListView_SetTileViewInfo": "Sets information that a list - view control uses in tile view.", "ListView_SetToolTips": "Sets the tooltip control that the list - view control will use to display tooltips.", "ListView_SetUnicodeFormat": "Sets the Unicode character format flag for the control.", "ListView_SetView": "Sets the view of a list - view control.", "ListView_SetWorkAreas": "Sets the working areas within a list - view control.", "ListView_SortGroups": "Uses an application - defined comparison function to sort groups by ID within a list - view control.", "ListView_SortItems": "The index of each item changes to reflect the new sequence.", "ListView_SortItemsEx": "The index of each item changes to reflect the new sequence.", "ListView_SubItemHitTest": "Determines which list - view item or subitem is located at a given position.", "ListView_SubItemHitTestEx": "Determines which list - view item or subitem is located at a given position.", "ListView_Update": "If the list - view control has the LVS_AUTOARRANGE style, this macro causes the list - view control to be arranged.", "LoadIconMetric": "Loads a specified icon resource with a client-specified system metric.", "LoadIconWithScaleDown": "Loads an icon.", "LPFNADDPROPSHEETPAGE": "Specifies an application-defined callback function that a property sheet extension uses to add a page to a property sheet.", "LPFNPSPCALLBACKA": "An application can use this function to perform initialization and cleanup operations for the page.", "LPFNPSPCALLBACKW": "An application can use this function to perform initialization and cleanup operations for the page.", "MakeDragList": "Changes the specified single-selection list box to a drag list box.", "MAKEIPADDRESS": "Packs four byte-values into a single LPARAM suitable for use with the IPM_SETADDRESS message.", "MAKEIPRANGE": "Packs two byte-values into a single LPARAM suitable for use with the IPM_SETRANGE message.", "MenuHelp": "Processes WM_MENUSELECT and WM_COMMAND messages and displays Help text about the current menu in the specified status window.", "Merge": "This method also creates a new image list in which to store the image.", "MonthCal_GetCalendarBorder": "Gets the border size, in pixels, of a month calendar control.", "MonthCal_GetCalendarCount": "Gets the number of calendars currently displayed in the calendar control.", "MonthCal_GetCalendarGridInfo": "Gets information about a calendar grid.", "MonthCal_GetCALID": "Gets the current calendar ID for the given calendar control.", "MonthCal_GetColor": "Retrieves the color for a given portion of a month calendar control.", "MonthCal_GetCurrentView": "Gets the view for a month calendar control.", "MonthCal_GetCurSel": "Retrieves the currently selected date.", "MonthCal_GetFirstDayOfWeek": "Retrieves the first day of the week for a month calendar control.", "MonthCal_GetMaxSelCount": "Retrieves the maximum date range that can be selected in a month calendar control.", "MonthCal_GetMaxTodayWidth": "This includes the label text and the date text.", "MonthCal_GetMinReqRect": "Retrieves the minimum size required to display a full month in a month calendar control.", "MonthCal_GetMonthDelta": "Retrieves the scroll rate for a month calendar control.", "MonthCal_GetMonthRange": "Retrieves date information that represents the high and low limits of a month calendar control 's display.", "MonthCal_GetRange": "You can use this macro or send the MCM_GETRANGE message explicitly.", "MonthCal_GetSelRange": "Retrieves date information that represents the upper and lower limits of the date range currently selected by the user.", "MonthCal_GetToday": "Retrieves the date information for the date specified as \" today \" for a month calendar control.", "MonthCal_GetUnicodeFormat": "Retrieves the Unicode character format flag for the control.", "MonthCal_HitTest": "Determines which portion of a month calendar control is at a given point on the screen.", "MonthCal_SetCalendarBorder": "Sets the border size, in pixels, of a month calendar control.", "MonthCal_SetCALID": "Sets the calendar ID for the given calendar control.", "MonthCal_SetColor": "Sets the color for a given portion of a month calendar control.", "MonthCal_SetCurrentView": "Sets the view for a month calendar control.", "MonthCal_SetCurSel": "If the specified date is not in view, the control updates the display to bring it into view.", "MonthCal_SetDayState": "Sets the day states for all months that are currently visible within a month calendar control.", "MonthCal_SetFirstDayOfWeek": "Sets the first day of the week for a month calendar control.", "MonthCal_SetMaxSelCount": "Sets the maximum number of days that can be selected in a month calendar control.", "MonthCal_SetMonthDelta": "Sets the scroll rate for a month calendar control.", "MonthCal_SetRange": "Sets the minimum and maximum allowable dates for a month calendar control.", "MonthCal_SetSelRange": "Sets the selection for a month calendar control to a given date range.", "MonthCal_SetToday": "Sets the \" today \" selection for a month calendar control.", "MonthCal_SetUnicodeFormat": "Sets the Unicode character format flag for the control.", "MonthCal_SizeRectToMin": "Calculates how many calendars will fit in the given rectangle, and then returns the minimum size that a rectangle needs to be to fit that number of calendars.", "Move": "If the range is nondegenerate, the range is collapsed to an insertion point at either end, depending on Count, and then is moved.", "MoveBoundary": "Moves the start boundary of a string, by index, for a selected number of characters.", "MoveDown": "Mimics the functionality of the Down Arrow and Page Down keys.", "MoveEnd": "Moves the end position of the range.", "MoveEndUntil": "Moves the range's end to the character position of the first character found that is in the set of characters specified by Cset, provided that the character is found within Count characters of the range's end.", "MoveEndWhile": "Moves the end of the range either Count characters or just past all contiguous characters that are found in the set of characters specified by Cset, whichever is less.", "MoveLeft": "Generalizes the functionality of the Left Arrow key.", "MoveRight": "Generalizes the functionality of the Right Arrow key.", "MoveStart": "Moves the start position of the range the specified number of units in the specified direction.", "MoveStartUntil": "Moves the start position of the range the position of the first character found that is in the set of characters specified by Cset, provided that the character is found within Count characters of the start position.", "MoveStartWhile": "Moves the start position of the range either Count characters, or just past all contiguous characters that are found in the set of characters specified by Cset, whichever is less.", "MoveUntil": "Searches up to Count characters for the first character in the set of characters specified by Cset.", "MoveUp": "Mimics the functionality of the Up Arrow and Page Up keys.", "MoveWhile": "Starts at a specified end of a range and searches while the characters belong to the set specified by Cset and while the number of characters is less than or equal to Count.", "New": "Opens a new document.", "Notify": "Notifies the Text Object Model events.", "OnTxCharFormatChange": "Sets the default character format for the text host.", "OnTxInPlaceActivate": "Notifies the text services object that this control is in-place active.", "OnTxInPlaceDeactivate": "Notifies the text services object that this control is no longer in-place active.", "OnTxParaFormatChange": "Sets the default paragraph format for the text host.", "OnTxPropertyBitsChange": "Sets properties for the control.", "OnTxSetCursor": "Notifies the text services object to set the cursor.", "OnTxUIActivate": "Informs the text services object that the control is now UI active.", "OnTxUIDeactivate": "Informs the text services object that the control is no longer UI active.", "Open": "There are parameters to specify access and sharing privileges, creation and conversion of the file, as well as the code page for the file.", "OpenThemeData": "Opens the theme data for a window and its associated class.", "OpenThemeDataEx": "Opens the theme data associated with a window for specified theme classes.", "PackTouchHitTestingProximityEvaluation": "Returns the proximity evaluation score and the adjusted touch-point coordinates as a packed value for the WM_TOUCHHITTESTING callback.", "Pager_ForwardMouse": "Enables or disables mouse forwarding for the pager control.", "Pager_GetBkColor": "Retrieves the current background color for the pager control.", "Pager_GetBorder": "Retrieves the current border size for the pager control.", "Pager_GetButtonSize": "Retrieves the current button size for the pager control.", "Pager_GetButtonState": "Retrieves the state of the specified button in a pager control.", "Pager_GetDropTarget": "Retrieves a pager control 's IDropTarget interface pointer.", "Pager_GetPos": "Retrieves the current scroll position of the pager control.", "Pager_RecalcSize": "Using this macro will result in a PGN_CALCSIZE notification being sent.", "Pager_SetBkColor": "Sets the current background color for the pager control.", "Pager_SetBorder": "Sets the current border size for the pager control.", "Pager_SetButtonSize": "Sets the current button size for the pager control.", "Pager_SetChild": "Sets the contained window for the pager control.", "Pager_SetPos": "Sets the scroll position for the pager control.", "Pager_SetScrollInfo": "Sets the scrolling parameters of the pager control, including the timeout value, the lines per timeout, and the pixels per line.", "Paste": "Pastes text from a specified data object.", "PFNDACOMPARE": "Defines the prototype for the compare function used by DSA_Sort.", "PFNDACOMPARECONST": "Defines the prototype for the compare function used by DSA_Sort when the items being compared are constant objects.", "PFNDAENUMCALLBACK": "Defines the prototype for the callback function used by dynamic structure array functions.", "PFNDAENUMCALLBACKCONST": "Defines the prototype for the callback function used by dynamic structure array functions when the items involved are pointers to constant data.", "PFNDPAMERGE": "Defines the prototype for the merge function used by DPA_Merge.", "PFNDPAMERGECONST": "Defines the prototype for the merge function used by DPA_Merge, using constant values.", "PFNDPASTREAM": "Defines the prototype for the callback function used by DPA_LoadStream and DPA_SaveStream.", "PFNLVGROUPCOMPARE": "The LVGroupCompare function is an application-defined callback function used with the LVM_INSERTGROUPSORTED and LVM_SORTGROUPS messages.", "PFNPROPSHEETCALLBACK": "An application-defined callback function that the system calls when the property sheet is being created and initialized.", "PFTASKDIALOGCALLBACK": "The TaskDialogCallbackProc function is an application-defined function used with the TaskDialogIndirect function.", "PrefixTop": "Prefixes a string to the top string in the collection.", "PreloadImages": "Preloads images, as specified.", "PropertySheetA": "Creates a property sheet and adds the pages defined in the specified property sheet header structure.", "PropertySheetW": "Creates a property sheet and adds the pages defined in the specified property sheet header structure.", "PropSheet_AddPage": "Adds a new page to the end of an existing property sheet.", "PropSheet_Apply": "You can use this macro or send the PSM_APPLY message explicitly.", "PropSheet_CancelToClose": "Used when changes made since the most recent PSN_APPLY notification can not be canceled.", "PropSheet_Changed": "Informs a property sheet that information in a page has changed.", "PropSheet_EnableWizButtons": "Enables or disables buttons in an Aero wizard.", "PropSheet_GetCurrentPageHwnd": "Retrieves a handle to the window of the current page of a property sheet.", "PropSheet_GetResult": "Used by modeless property sheets to retrieve the information returned to modal property sheets by PropertySheet.", "PropSheet_GetTabControl": "Retrieves the handle to the tab control of a property sheet.", "PropSheet_HwndToIndex": "You can use this macro or send the PSM_HWNDTOINDEX message explicitly.", "PropSheet_IdToIndex": "You can use this macro or send the PSM_IDTOINDEX message explicitly.", "PropSheet_IndexToHwnd": "Takes the index of a property sheet page and returns its window handle.", "PropSheet_IndexToId": "Takes the index of a property sheet page and returns its resource identifier.", "PropSheet_IndexToPage": "Takes the index of a property sheet page and returns its HPROPSHEETPAGE handle.", "PropSheet_InsertPage": "The page can be inserted either at a specified index or after a specified page.", "PropSheet_IsDialogMessage": "Passes a message to a property sheet dialog box and indicates whether the dialog box processed the message.", "PropSheet_PageToIndex": "You can use this macro or send the PSM_PAGETOINDEX message explicitly.", "PropSheet_PressButton": "Simulates the selection of a property sheet button.", "PropSheet_QuerySiblings": "You can use this macro or send the PSM_QUERYSIBLINGS message explicitly.", "PropSheet_RebootSystem": "Indicates the system needs to be restarted for the changes to take effect.", "PropSheet_RecalcPageSizes": "Recalculates the page size of a standard or wizard property sheet after pages have been added or removed.", "PropSheet_RemovePage": "Removes a page from a property sheet.", "PropSheet_RestartWindows": "You can use this macro or send the PSM_RESTARTWINDOWS message explicitly.", "PropSheet_SetButtonText": "Sets the text of a button in an Aero wizard.", "PropSheet_SetCurSel": "Activates the specified page in a property sheet.", "PropSheet_SetCurSelByID": "Activates the specified page in a property sheet based on the resource identifier of the page.", "PropSheet_SetFinishText": "Sets the text of the Finish button in a wizard, shows and enables the button, and hides the Next and Back buttons.", "PropSheet_SetHeaderSubTitle": "Sets the subtitle text for the header of a wizard 's interior page.", "PropSheet_SetHeaderTitle": "Sets the title text for the header of a wizard 's interior page.", "PropSheet_SetNextText": "Sets the text of the Next button in a wizard.", "PropSheet_SetTitle": "Sets the title of a property sheet.", "PropSheet_SetWizButtons": "You can use this macro or send the PSM_SETWIZBUTTONS message explicitly.", "PropSheet_ShowWizButtons": "Show or hide buttons in a wizard.", "PropSheet_UnChanged": "You can use this macro or send the PSM_UNCHANGED message explicitly.", "QueryAcceptData": "During a paste operation or a drag event, determines if the data that is pasted or dragged should be accepted.", "QueryInsertObject": "Queries the application as to whether an object should be inserted.", "Range": "Retrieves a text range object for a specified range of content in the active story of the document.", "Range2": "Retrieves a new text range for the active story of the document.", "RangeFromPoint": "Retrieves a range for the content at or nearest to the specified point on the screen.", "RangeFromPoint2": "Retrieves the degenerate range at a particular point on the screen.", "Redo": "Performs a specified number of redo operations.", "RegisterPointerDeviceNotifications": "Registers a window to process the WM_POINTERDEVICECHANGE, WM_POINTERDEVICEINRANGE, and WM_POINTERDEVICEOUTOFRANGE pointer device notifications.", "RegisterTouchHitTestingWindow": "Registers a window to process the WM_TOUCHHITTESTING notification.", "ReleaseCallManager": "Releases the call manager.", "ReleaseImmContext": "Releases an Input Method Manager input context.", "Remove": "Removes a string from a string collection, starting at an index.", "Replace": "Replaces an image in an image list with a new image.", "Replace2": "Replaces an image in an image list.", "ReplaceFromImageList": "Replaces an image in one image list with an image from another image list.", "ReplaceIcon": "Replaces an image with an icon or cursor.", "Reset": "Resets a row.", "Resize": "Resizes the current image.", "Save": "Saves the document.", "SaveCompleted": "Indicates when the most recent save operation has been completed and that the rich edit control should hold onto a different storage for the object.", "ScrollBar_Enable": "Enables or disables a scroll bar control.", "ScrollBar_GetPos": "Retrieves the position of the scroll box in the specified scroll bar.", "ScrollBar_GetRange": "Gets the range of a scroll bar.", "ScrollBar_SetPos": "Sets the position of the scroll box in the specified scroll bar and, if requested, redraws the scroll bar to reflect the new position of the scroll box.", "ScrollBar_SetRange": "Sets the range of a scroll bar.", "ScrollBar_Show": "Shows or hides a scroll bar control.", "ScrollDC": "The ScrollDC function scrolls a rectangle of bits horizontally and vertically.", "ScrollIntoView": "Scrolls the specified range into view.", "ScrollWindow": "The ScrollWindow function scrolls the contents of the specified window's client area.", "ScrollWindowEx": "The ScrollWindowEx function scrolls the contents of the specified window's client area.", "SECOND_IPADDRESS": "Extracts the field 1 value from a packed IP address retrieved with the IPM_GETADDRESS message.", "Select": "Sets the start and end positions, and story values of the active selection, to those of this range.", "SetActive": "Sets the active state of a story.", "SetActiveStory": "Sets the active story; that is, the story that receives keyboard and mouse input.", "SetActiveSubrange": "Makes the specified subrange the active subrange of this range.", "SetAlignment": "Sets the horizontal alignment of a row.", "SetAllCaps": "Sets whether the characters are all uppercase.", "SetAnimation": "Sets the animation type.", "SetAutoLigatures": "Sets whether support for automatic ligatures is active.", "SetAutospaceAlpha": "Sets the East Asian \"autospace alpha\" state.", "SetAutospaceNumeric": "Sets the East Asian \"autospace numeric\" state.", "SetAutospaceParens": "Sets the East Asian \"autospace parentheses\" state.", "SetBackColor": "Sets the background color.", "SetBkColor": "Sets the background color for an image list.", "SetBold": "Sets whether characters are bold.", "SetCallback": "Sets an image list callback.", "SetCaretType": "Sets the caret type.", "SetCellAlignment": "Sets the vertical alignment of the active cell.", "SetCellBorderColors": "Sets the border colors of the active cell.", "SetCellBorderWidths": "Sets the border widths of the active cell.", "SetCellColorBack": "Sets the background color of the active cell.", "SetCellColorFore": "Sets the foreground color of the active cell.", "SetCellCount": "Sets the count of cells in a row.", "SetCellCountCache": "Sets the count of cells cached for a row.", "SetCellIndex": "Sets the index of the active cell.", "SetCellMargin": "Sets the cell margin of a row.", "SetCellMergeFlags": "Sets the merge flags of the active cell.", "SetCellShading": "Sets the shading of the active cell.", "SetCellVerticalText": "Sets the vertical-text setting of the active cell.", "SetCellWidth": "Sets the active cell width in twips.", "SetChar": "Sets the character at the starting position of the range.", "SetCharRep": "Sets the character repertoire.", "SetCompressionMode": "Sets the East Asian compression mode.", "SetCookie": "Sets the client cookie.", "SetDefaultTabStop": "Sets the default tab stop, which is used when no tab exists beyond the current display position.", "SetDocumentFont": "Sets the default character formatting for this instance of the Text Object Model engine.", "SetDocumentPara": "Sets the default paragraph formatting for this instance of the Text Object Model engine.", "SetDoubleStrike": "Sets whether characters are displayed with double horizontal lines through the center.", "SetDragCursorImage": "Creates a new drag image by combining the specified image, which is typically a mouse cursor image, with the current drag image.", "SetDropCap": "Sets the drop-cap parameters for the paragraph that contains the current range.", "SetDuplicate": "Sets the formatting for an existing paragraph by copying a given format.", "SetDuplicate2": "Sets the properties of this object by copying the properties of another text paragraph object.", "SetDvaspect": "The call does cause the object to be redrawn.", "SetEffectColor": "Specifies the color to use for special text attributes.", "SetEffects": "Sets the paragraph format effects.", "SetEffects2": "Sets the additional character format effects.", "SetEmboss": "Sets whether characters are embossed.", "SetEnd": "Sets the end position of the range.", "SetEngrave": "Sets whether characters are displayed as imprinted characters.", "SetFlags": "Sets the text selection flags.", "SetFont": "Sets this range's character attributes to those of the specified ITextFont object.", "SetFont2": "Sets the character formatting attributes of the range.", "SetFontAlignment": "Sets the paragraph font alignment for Chinese, Japanese, Korean text.", "SetForeColor": "Sets the foreground color.", "SetFormattedText": "Replaces text with formatted text.", "SetFormattedText2": "Sets the text of this range to the formatted text of the specified range.", "SetGravity": "Sets the gravity of this range.", "SetHangingPunctuation": "Sets whether to hang punctuation symbols on the right margin when the paragraph is justified.", "SetHeight": "Sets the height of a row.", "SetHidden": "Sets whether characters are hidden.", "SetHostNames": "Sets the host names to be given to objects as they are inserted to a rich edit control.", "SetHyphenation": "Controls hyphenation for the paragraphs in the range.", "SetIconSize": "Sets the dimensions of images in an image list and removes all images from the list.", "SetImageCount": "Resizes an existing image list.", "SetIMEInProgress": "Sets the state of the Input Method Editor in-progress flag.", "SetIndent": "Sets the indent of a row.", "SetIndents": "Sets the first-line indent, the left indent, and the right indent for a paragraph.", "SetIndex": "Changes this range to the specified unit of the story.", "SetInlineObject": "Sets or inserts the properties of an inline object for a degenerate range.", "SetItalic": "Sets whether characters are in italics.", "SetKeepTogether": "Sets whether this row is allowed to be broken across pages.", "SetKeepWithNext": "Sets whether a row should appear on the same page as the row that follows it.", "SetKerning": "Sets the minimum font size at which kerning occurs.", "SetLanguageID": "Sets the language ID or language code identifier.", "SetLineSpacing": "Sets the paragraph line-spacing rule and the line spacing for a paragraph.", "SetLinkAvailable": "Sets the value of the link-available bit in the object's flags.", "SetListAlignment": "Sets the alignment of bulleted or numbered text used for paragraphs.", "SetListLevelIndex": "Sets the list level index used for paragraphs.", "SetListStart": "Sets the starting number or Unicode value for a numbered list.", "SetListTab": "Sets the list tab setting, which is the distance between the first indent and the start of the text on the first line.", "SetListType": "Sets the type of list to be used for paragraphs.", "SetMathProperties": "Specifies the math properties to use for the document.", "SetMathZone": "Sets whether a math zone is active.", "SetModWidthPairs": "Sets whether \"decrease widths on pairs\" is active.", "SetModWidthSpace": "Sets whether \"increase width of whitespace\" is active.", "SetName": "Sets the font name.", "SetNoLineNumber": "Determines whether to suppress line numbering of paragraphs in a range.", "SetNotificationMode": "Sets the notification mode.", "SetOldNumbers": "Sets whether old-style numbers are active.", "SetOpCp": "Sets the character position in the source range's story that has desired character formatting attributes.", "SetOriginalSize": "Sets the original size of a specified image.", "SetOutline": "Sets whether characters are displayed as outlined characters.", "SetOverlapping": "Sets whether overlapping text is active.", "SetOverlayImage": "Adds a specified image to the list of images used as overlay masks.", "SetPageBreakBefore": "Controls whether there is a page break before each paragraph in a range.", "SetPara": "Sets the paragraph attributes of this range to those of the specified ITextPara object.", "SetPara2": "Sets the paragraph format attributes of a range.", "SetPoint": "Changes the range based on a specified point at or up through aligned according to Type.", "SetPosition": "Sets the amount that characters are offset vertically relative to the baseline.", "SetPositionSubSuper": "Sets the position of a subscript or superscript relative to the baseline, as a percentage of the font height.", "SetProperty": "Sets the value of the specified property.", "SetProtected": "Sets whether characters are protected against attempts to modify them.", "SetRange": "Adjusts the range endpoints to the specified values.", "SetRightIndent": "Sets the right margin of paragraph.", "SetRTL": "Sets whether this row has right-to-left orientation.", "SetSaved": "Sets the document Saved property.", "SetScaling": "Sets the font horizontal scaling percentage.", "SetScrollInfo": "The function also redraws the scroll bar, if requested.", "SetScrollPos": "The SetScrollPos function sets the position of the scroll box in the specified scroll bar and, if requested, redraws the scroll bar to reflect the new position of the scroll box.", "SetScrollRange": "The SetScrollRange function sets the minimum and maximum scroll box positions for the specified scroll bar.", "SetShadow": "Sets whether characters are displayed as shadowed characters.", "SetSize": "Sets the font size.", "SetSmallCaps": "Sets whether characters are in small capital letters.", "SetSnapToGrid": "Sets whether paragraph lines snap to a vertical grid that could be defined for the whole document.", "SetSpaceAfter": "Sets the amount of space that follows a paragraph.", "SetSpaceBefore": "Sets the amount of space preceding a paragraph.", "SetSpaceExtension": "Sets the East Asian space extension value.", "SetSpacing": "Sets the amount of horizontal spacing between characters.", "SetStart": "Sets the character position for the start of this range.", "SetStrikeThrough": "Sets whether characters are displayed with a horizontal line through the center.", "SetStyle": "Sets the paragraph style for the paragraphs in a range.", "SetSubscript": "Sets whether characters are displayed as subscript.", "SetSuperscript": "Sets whether characters are displayed as superscript.", "SetText": "Replaces the text in a story with the specified text.", "SetText2": "Sets the text of this range.", "SetThemeAppProperties": "Sets the flags that determine how visual styles are implemented in the calling application.", "SetTrimPunctuationAtStart": "Sets whether to trim the leading space of a punctuation symbol at the start of a line.", "SetType": "Sets the story type.", "SetTypographyOptions": "Specifies the typography options for the document.", "SetUnderline": "Sets the type of underlining for the characters in a range.", "SetUnderlinePositionMode": "Sets the underline position mode.", "SetURL": "Sets the text in this range to that of the specified URL.", "SetWeight": "Sets the font weight for the characters in a range.", "SetWidowControl": "Controls the suppression of widows and orphans.", "SetWindowFeedbackSetting": "Sets the feedback configuration for a window.", "SetWindowTheme": "Causes a window to use a different set of visual style information than its class normally uses.", "SetWindowThemeAttribute": "Sets attributes to control how visual styles are applied to a specified window.", "SetWindowThemeNonClientAttributes": "Sets non-client attributes to control how visual styles are applied to a specified window.", "ShowContainerUI": "Indicates whether or not the application is to display its container UI.", "ShowHideMenuCtl": "Sets or removes the specified menu item's check mark attribute and shows or hides the corresponding control.", "ShowScrollBar": "The ShowScrollBar function shows or hides the specified scroll bar.", "ShutdownTextServices": "Disconnects a host from a text services instance.", "StartOf": "Moves the range ends to the start of the first overlapping Unit in the range.", "Static_Enable": "Enables or disables a static control.", "Static_GetIcon": "Retrieves a handle to the icon associated with a static control that has the SS_ICON style.", "Static_GetText": "Gets the text of a static control.", "Static_GetTextLength": "Gets the number of characters in the text of a static control.", "Static_SetIcon": "Sets the icon for a static control.", "Static_SetText": "Sets the text of a static control.", "Str_SetPtrW": "Sets ppszCurrent to a copy of pszNew and frees the previous value, if necessary.", "SuffixTop": "Suffixes a string to the top string in the collection.", "Swap": "Swaps the top two strings in the collection.", "SysBeep": "Generates a system beep.", "TabCtrl_AdjustRect": "Calculates a tab control 's display area given a window rectangle, or calculates the window rectangle that would correspond to a specified display area.", "TabCtrl_DeleteAllItems": "Removes all items from a tab control.", "TabCtrl_DeleteItem": "Removes an item from a tab control.", "TabCtrl_DeselectAll": "Resets items in a tab control, clearing any that were set to the TCIS_BUTTONPRESSED state.", "TabCtrl_GetCurFocus": "Returns the index of the item that has the focus in a tab control.", "TabCtrl_GetCurSel": "Determines the currently selected tab in a tab control.", "TabCtrl_GetExtendedStyle": "Retrieves the extended styles that are currently in use for the tab control.", "TabCtrl_GetImageList": "Retrieves the image list associated with a tab control.", "TabCtrl_GetItem": "Retrieves information about a tab in a tab control.", "TabCtrl_GetItemCount": "Retrieves the number of tabs in the tab control.", "TabCtrl_GetItemRect": "Retrieves the bounding rectangle for a tab in a tab control.", "TabCtrl_GetRowCount": "Retrieves the current number of rows of tabs in a tab control.", "TabCtrl_GetToolTips": "Retrieves the handle to the tooltip control associated with a tab control.", "TabCtrl_GetUnicodeFormat": "Retrieves the UNICODE character format flag for the control.", "TabCtrl_HighlightItem": "Sets the highlight state of a tab item.", "TabCtrl_HitTest": "Determines which tab, if any, is at a specified screen position.", "TabCtrl_InsertItem": "Inserts a new tab in a tab control.", "TabCtrl_RemoveImage": "Removes an image from a tab control 's image list.", "TabCtrl_SetCurFocus": "Sets the focus to a specified tab in a tab control.", "TabCtrl_SetCurSel": "Selects a tab in a tab control.", "TabCtrl_SetExtendedStyle": "Sets the extended styles that the tab control will use.", "TabCtrl_SetImageList": "Assigns an image list to a tab control.", "TabCtrl_SetItem": "Sets some or all of a tab 's attributes.", "TabCtrl_SetItemExtra": "Sets the number of bytes per tab reserved for application - defined data in a tab control.", "TabCtrl_SetItemSize": "Sets the width and height of tabs in a fixed - width or owner - drawn tab control.", "TabCtrl_SetMinTabWidth": "Sets the minimum width of items in a tab control.", "TabCtrl_SetPadding": "Sets the amount of space around each tab 's icon and label in a tab control.", "TabCtrl_SetToolTips": "Assigns a tooltip control to a tab control.", "TabCtrl_SetUnicodeFormat": "Sets the Unicode character format flag for the control.", "TaskDialog": "The TaskDialog function creates, displays, and operates a task dialog.", "TaskDialogIndirect": "The TaskDialogIndirect function creates, displays, and operates a task dialog.", "THIRD_IPADDRESS": "Extracts the field 2 value from a packed IP address retrieved with the IPM_GETADDRESS message.", "TreeView_CreateDragImage": "Creates a dragging bitmap for the specified item in a tree-view control.", "TreeView_DeleteAllItems": "Deletes all items from a tree-view control.", "TreeView_DeleteItem": "You can also send the TVM_DELETEITEM message explicitly.", "TreeView_EditLabel": "Begins in-place editing of the specified item's text, replacing the text of the item with a single-line edit control containing the text.", "TreeView_EndEditLabelNow": "Ends the editing of a tree - view item 's label.", "TreeView_EnsureVisible": "Ensures that a tree - view item is visible, expanding the parent item or scrolling the tree - view control, if necessary.", "TreeView_Expand": "You can use this macro or send the TVM_EXPAND message explicitly.", "TreeView_GetBkColor": "Retrieves the current background color of the control.", "TreeView_GetCheckState": "Gets the check state of the specified item.", "TreeView_GetChild": "Retrieves the first child item of the specified tree - view item.", "TreeView_GetCount": "Retrieves a count of the items in a tree - view control.", "TreeView_GetDropHilight": "You can use this macro, or you can explicitly send the TVM_GETNEXTITEM message with the TVGN_DROPHILITE flag.", "TreeView_GetEditControl": "Retrieves the handle to the edit control being used to edit a tree - view item 's text.", "TreeView_GetExtendedStyle": "Retrieves the extended style for a specified tree - view control.", "TreeView_GetFirstVisible": "Retrieves the first visible item in a tree - view control window.", "TreeView_GetImageList": "You can use this macro or send the TVM_GETIMAGELIST message explicitly.", "TreeView_GetIndent": "Retrieves the amount, in pixels, that child items are indented relative to their parent items.", "TreeView_GetInsertMarkColor": "Retrieves the color used to draw the insertion mark for the tree view.", "TreeView_GetISearchString": "Retrieves the incremental search string for a tree - view control.", "TreeView_GetItem": "Retrieves some or all of a tree - view item 's attributes.", "TreeView_GetItemHeight": "Retrieves the current height of the tree - view items.", "TreeView_GetItemPartRect": "Use this macro or send the TVM_GETITEMPARTRECT message explicitly.", "TreeView_GetItemRect": "Retrieves the bounding rectangle for a tree - view item and indicates whether the item is visible.", "TreeView_GetItemState": "Retrieves some or all of a tree - view item 's state attributes.", "TreeView_GetLastVisible": "Retrieves the last expanded item in a tree - view control.", "TreeView_GetLineColor": "Gets the current line color.", "TreeView_GetNextItem": "Retrieves the tree - view item that bears the specified relationship to a specified item.", "TreeView_GetNextSelected": "Retrieves the tree-view item that bears the TVGN_NEXTSELECTED relationship to a specified tree item.", "TreeView_GetNextSibling": "Retrieves the next sibling item of a specified item in a tree - view control.", "TreeView_GetNextVisible": "Retrieves the next visible item that follows a specified item in a tree - view control.", "TreeView_GetParent": "Retrieves the parent item of the specified tree - view item.", "TreeView_GetPrevSibling": "Retrieves the previous sibling item of a specified item in a tree - view control.", "TreeView_GetPrevVisible": "Retrieves the first visible item that precedes a specified item in a tree - view control.", "TreeView_GetRoot": "Retrieves the topmost or very first item of the tree - view control.", "TreeView_GetScrollTime": "Retrieves the maximum scroll time for the tree - view control.", "TreeView_GetSelectedCount": "TreeView_GetSelectedCount macro", "TreeView_GetSelection": "Retrieves the currently selected item in a tree - view control.", "TreeView_GetTextColor": "Retrieves the current text color of the control.", "TreeView_GetToolTips": "Retrieves the handle to the child tooltip control used by a tree - view control.", "TreeView_GetUnicodeFormat": "Retrieves the Unicode character format flag for the control.", "TreeView_GetVisibleCount": "Obtains the number of items that can be fully visible in the client window of a tree - view control.", "TreeView_HitTest": "You can use this macro or send the TVM_HITTEST message explicitly.", "TreeView_InsertItem": "Inserts a new item in a tree - view control.", "TreeView_MapAccIDToHTREEITEM": "Maps an accessibility ID to an HTREEITEM.", "TreeView_MapHTREEITEMToAccID": "Maps an HTREEITEM to an accessibility ID.", "TreeView_Select": "Selects the specified tree-view item, scrolls the item into view, or redraws the item in the style used to indicate the target of a drag-and-drop operation.", "TreeView_SelectDropTarget": "You can use this macro or the TreeView_Select macro, or you can send the TVM_SELECTITEM message explicitly.", "TreeView_SelectItem": "You can use this macro or the TreeView_Select macro, or you can send the TVM_SELECTITEM message explicitly.", "TreeView_SelectSetFirstVisible": "Scrolls the tree-view control vertically to ensure that the specified item is visible.", "TreeView_SetAutoScrollInfo": "Sets information used to determine auto - scroll characteristics.", "TreeView_SetBkColor": "Sets the background color of the control.", "TreeView_SetBorder": "Sets the size of the border for the items in a tree - view control.", "TreeView_SetCheckState": "Sets the item 's state image to \" checked \" or \" unchecked. \"", "TreeView_SetExtendedStyle": "Sets the extended style for a specified TreeView control.", "TreeView_SetHot": "Sets the hot item for a tree - view control.", "TreeView_SetImageList": "Sets the normal or state image list for a tree - view control and redraws the control using the new images.", "TreeView_SetIndent": "Sets the width of indentation for a tree - view control and redraws the control to reflect the new width.", "TreeView_SetInsertMark": "Sets the insertion mark in a tree - view control.", "TreeView_SetInsertMarkColor": "Sets the color used to draw the insertion mark for the tree view.", "TreeView_SetItem": "You can use this macro or send the TVM_SETITEM message explicitly.", "TreeView_SetItemHeight": "Sets the height of the tree - view items.", "TreeView_SetItemState": "Sets a tree - view item 's state attributes.", "TreeView_SetLineColor": "Sets the current line color.", "TreeView_SetScrollTime": "Sets the maximum scroll time for the tree - view control.", "TreeView_SetTextColor": "Sets the text color of the control.", "TreeView_SetToolTips": "Sets a tree - view control 's child tooltip control.", "TreeView_SetUnicodeFormat": "Sets the Unicode character format flag for the control.", "TreeView_ShowInfoTip": "Shows the infotip for a specified item in a tree - view control.", "TreeView_SortChildren": "Sorts the child items of the specified parent item in a tree - view control.", "TreeView_SortChildrenCB": "Sorts tree - view items using an application - defined callback function that compares the items.", "TxActivate": "Notifies the text host that the control is active.", "TxClientToScreen": "Converts text host coordinates to screen coordinates.", "TxCreateCaret": "Creates a new shape for windowless rich edit control's caret.", "TxDeactivate": "Notifies the text host that the control is now inactive.", "TxDestroyCaret": "Destroys the caret.", "TxDraw": "Draws the text services object.", "TxDrawD2D": "Draws the text services object by using Direct2D rendering.", "TxEnableScrollBar": "Enables or disables one or both scroll bar arrows in the text host window.", "TxFreeTextServicesNotification": "Notifies the text host that text services have been freed.", "TxGetAcceleratorPos": "Requests the special character to use for the underlining accelerator character.", "TxGetBackStyle": "Requests the background style of the text host.", "TxGetBaseLinePos": "Gets the base line position of the first visible line, in pixels, relative to the text services client rectangle.", "TxGetCachedSize": "Typically, this will be the size of the last client rectangle used in ITextServices::TxDraw, ITextServices::OnTxSetCursor, and so forth, although it is not guaranteed to be.", "TxGetCharFormat": "Requests the text host's default character format.", "TxGetClientRect": "Retrieves the client coordinates of the text host's client area.", "TxGetCurTargetX": "Gets the target x position, that is, the current horizontal position of the caret.", "TxGetDC": "Requests the device context for the text host window.", "TxGetDropTarget": "Gets the drop target for the text control.", "TxGetEastAsianFlags": "Gets whether Input Method Editor input is allowed and whether the edit styles include ES_SELFIME.", "TxGetEditStyle": "Gets whether a rich edit control is in a dialog box.", "TxGetExtent": "Requests the native size of the control in HIMETRIC.", "TxGetHorzExtent": "Gets the horizontal scroll extent of the text host window.", "TxGetHScroll": "Returns horizontal scroll bar information.", "TxGetMaxLength": "Gets the text host's maximum allowed length for the text.", "TxGetNaturalSize": "Allows a control to be resized so it fits its content appropriately.", "TxGetNaturalSize2": "Resizes a control so it fits its content appropriately.", "TxGetPalette": "Retrieves the color palette of the rich edit control.", "TxGetParaFormat": "Requests the text host's default paragraph format.", "TxGetPasswordChar": "Requests the text host's password character.", "TxGetPropertyBits": "Requests the bit property settings for the text host.", "TxGetScrollBars": "Requests information about the scroll bars supported by the text host.", "TxGetSelectionBarWidth": "Returns the size of selection bar in HIMETRIC.", "TxGetSysColor": "Retrieves the text host's color for a specified display element.", "TxGetText": "Returns all of the Unicode plain text in the control as a BSTR.", "TxGetViewInset": "Requests the dimensions of the white space inset around the text in the text host window.", "TxGetVScroll": "Returns vertical scroll bar state information.", "TxGetWindow": "Retrieves the handle of the text host window for the rich edit control.", "TxGetWindowStyles": "Retrieves the window styles and extended windows styles of the text host window.", "TxImmGetContext": "Retrieves the Input Method Editor input context associated with the text services host.", "TxImmReleaseContext": "Releases an input context returned by the ITextHost::TxImmGetContext method and unlocks the memory associated with the context.", "TxInvalidateRect": "Specifies a rectangle for the text host to add to the update region of the text host window.", "TxIsDoubleClickPending": "Discovers whether the message queue contains a WM_LBUTTONDBLCLK message that is pending for the text host window.", "TxKillTimer": "Requests the text host to destroy the specified timer.", "TxNotify": "Notifies the text host of various events.", "TxQueryHitPoint": "Tests whether a specified point is within the rectangle of the text services object.", "TxReleaseDC": "Releases the device context obtained by the ITextHost::TxGetDC method.", "TxScreenToClient": "Converts the screen coordinates to the text host window coordinates.", "TxScrollWindowEx": "Requests the text host to scroll the content of the specified client area.", "TxSendMessage": "Used by the window host to forward messages sent from its window to the text services object.", "TxSetCapture": "Sets the mouse capture in the text host's window.", "TxSetCaretPos": "Moves the caret position to the specified coordinates in the text host window.", "TxSetCursor": "Establishes a new cursor shape in the text host's window.", "TxSetCursor2": "Sets the shape of the cursor in the text host window.", "TxSetFocus": "Sets the focus to the text host window.", "TxSetForegroundWindow": "Sets the rich edit control's host window as the foreground window.", "TxSetScrollPos": "Sets the position of the scroll box in the specified scroll bar and, if requested, redraws the scroll bar to reflect the new position of the scroll box.", "TxSetScrollRange": "Sets the minimum and maximum position values for the specified scroll bar in the text host window.", "TxSetText": "Sets all of the text in the control.", "TxSetTimer": "Requests the text host to create a timer with a specified time-out.", "TxShowCaret": "Shows or hides the caret at the caret position in the text host window.", "TxShowDropCaret": "Shows or hides the caret during the drop portion of a drag-and-drop operation.", "TxShowScrollBar": "Shows or hides the scroll bar in the text host window.", "TxViewChange": "Indicates to the text host that the update region has changed.", "TypeText": "Types the string given by bstr at this selection as if someone typed it.", "Undo": "Performs a specified number of undo operations.", "Unfreeze": "Decrements the freeze count.", "UnicodeToHex": "Converts the Unicode character(s) preceding the start position of this text range to a hexadecimal number, and selects it.", "UninitializeFlatSB": "Uninitializes flat scroll bars for a particular window.", "Update": "Updates the selection and caret.", "UpdatePanningFeedback": "Updates clients about state of a window resulting from a panning gesture.", "UpdateWindow": "Notifies the client that the view has changed and the client should update the view if the Text Object Model engine is in-place active."}