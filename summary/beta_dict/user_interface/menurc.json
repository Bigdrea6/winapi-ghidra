{"AppendMenuA": "Appends a new item to the end of the specified menu bar, drop-down menu, submenu, or shortcut menu.", "AppendMenuW": "Appends a new item to the end of the specified menu bar, drop-down menu, submenu, or shortcut menu.", "BeginUpdateResourceA": "Retrieves a handle that can be used by the UpdateResource function to add, delete, or replace resources in a binary module.", "BeginUpdateResourceW": "Retrieves a handle that can be used by the UpdateResource function to add, delete, or replace resources in a binary module.", "CharLowerA": "Converts a character string or a single character to lowercase.", "CharLowerBuffA": "Converts uppercase characters in a buffer to lowercase characters.", "CharLowerBuffW": "Converts uppercase characters in a buffer to lowercase characters.", "CharLowerW": "Converts a character string or a single character to lowercase.", "CharNextA": "Retrieves a pointer to the next character in a string.", "CharNextExA": "Retrieves the pointer to the next character in a string.", "CharNextW": "Retrieves a pointer to the next character in a string.", "CharPrevA": "Retrieves a pointer to the preceding character in a string.", "CharPrevExA": "Retrieves the pointer to the preceding character in a string.", "CharPrevW": "Retrieves a pointer to the preceding character in a string.", "CharToOemA": "Translates a string into the OEM-defined character set.", "CharToOemBuffA": "Translates a specified number of characters in a string into the OEM-defined character set.", "CharToOemBuffW": "Translates a specified number of characters in a string into the OEM-defined character set.", "CharToOemW": "Translates a string into the OEM-defined character set.", "CharUpperA": "Converts a character string or a single character to uppercase.", "CharUpperBuffA": "Converts lowercase characters in a buffer to uppercase characters.", "CharUpperBuffW": "Converts lowercase characters in a buffer to uppercase characters.", "CharUpperW": "Converts a character string or a single character to uppercase.", "CheckMenuItem": "Sets the state of the specified menu item's check-mark attribute to either selected or clear.", "CheckMenuRadioItem": "Checks a specified menu item and makes it a radio item.", "ClipCursor": "Confines the cursor to a rectangular area on the screen.", "CopyAcceleratorTableA": "Copies the specified accelerator table.", "CopyAcceleratorTableW": "Copies the specified accelerator table.", "CopyCursor": "Copies the specified cursor.", "CopyIcon": "Copies the specified icon from another module to the current module.", "CopyImage": "Creates a new image and copies the attributes of the specified image to the new one.", "CreateAcceleratorTableA": "Creates an accelerator table.", "CreateAcceleratorTableW": "Creates an accelerator table.", "CreateCaret": "Creates a new shape for the system caret and assigns ownership of the caret to the specified window.", "CreateCursor": "Creates a cursor having the specified size, bit patterns, and hot spot.", "CreateIcon": "Creates an icon that has the specified size, colors, and bit patterns.", "CreateIconFromResource": "Creates an icon or cursor from resource bits describing the icon.", "CreateIconFromResourceEx": "Creates an icon or cursor from resource bits describing the icon.", "CreateIconIndirect": "Creates an icon or cursor from an ICONINFO structure.", "CreateMenu": "Creates a menu.", "CreatePopupMenu": "Creates a drop-down menu, submenu, or shortcut menu.", "CreateResourceIndexer": "Creates a new resource indexer for the specified paths of the root of the project files and the extension DLL.", "DeleteMenu": "Deletes an item from the specified menu.", "DestroyAcceleratorTable": "Destroys an accelerator table.", "DestroyCaret": "Destroys the caret's current shape, frees the caret from the window, and removes the caret from the screen.", "DestroyCursor": "Destroys a cursor and frees any memory the cursor occupied.", "DestroyIcon": "Destroys an icon and frees any memory the icon occupied.", "DestroyIndexedResults": "Frees the parameters that the IndexFilePath method returned.", "DestroyMenu": "Destroys the specified menu and frees any memory that the menu occupies.", "DestroyResourceIndexer": "Frees the computational resources associated with the specified resource indexer.", "DrawIcon": "Draws an icon or cursor into the specified device context.", "DrawIconEx": "Draws an icon or cursor into the specified device context, performing the specified raster operations, and stretching or compressing the icon or cursor as specified.", "DrawMenuBar": "Redraws the menu bar of the specified window.", "EnableMenuItem": "Enables, disables, or grays the specified menu item.", "EndMenu": "Ends the calling thread's active menu.", "EndUpdateResourceA": "Commits or discards changes made prior to a call to UpdateResource.", "EndUpdateResourceW": "Commits or discards changes made prior to a call to UpdateResource.", "ENUMRESNAMEPROCA": "An application-defined callback function used with the EnumResourceNames and EnumResourceNamesEx functions.", "ENUMRESNAMEPROCW": "An application-defined callback function used with the EnumResourceNames and EnumResourceNamesEx functions.", "EnumResourceLanguagesA": "Enumerates language-specific resources, of the specified type and name, associated with a binary module.", "EnumResourceLanguagesExA": "Enumerates language-specific resources, of the specified type and name, associated with a specified binary module.", "EnumResourceLanguagesExW": "Enumerates language-specific resources, of the specified type and name, associated with a specified binary module.", "EnumResourceLanguagesW": "Enumerates language-specific resources, of the specified type and name, associated with a binary module.", "EnumResourceNamesA": "Enumerates resources of a specified type within a binary module.", "EnumResourceNamesExA": "The search can include both an LN file and its associated.mui files, or it can be limited in several ways.", "EnumResourceNamesExW": "The search can include both an LN file and its associated.mui files, or it can be limited in several ways.", "EnumResourceNamesW": "Enumerates resources of a specified type within a binary module.", "EnumResourceTypesA": "Enumerates resource types within a binary module.", "EnumResourceTypesExA": "Enumerates resource types associated with a specified binary module.", "EnumResourceTypesExW": "Enumerates resource types associated with a specified binary module.", "EnumResourceTypesW": "Enumerates resource types within a binary module.", "ENUMRESTYPEPROCA": "An application-defined callback function used with the EnumResourceTypes and EnumResourceTypesEx functions.", "ENUMRESTYPEPROCW": "An application-defined callback function used with the EnumResourceTypes and EnumResourceTypesEx functions.", "FindResourceA": "Determines the location of a resource with the specified type and name in the specified module.", "FindResourceExA": "Determines the location of the resource with the specified type, name, and language in the specified module.", "FindResourceExW": "Determines the location of the resource with the specified type, name, and language in the specified module.", "FindResourceW": "Determines the location of a resource with the specified type and name in the specified module.", "FreeResource": "Decrements the reference count of a loaded resource.", "GetCaretBlinkTime": "Retrieves the time required to invert the caret 's pixels.", "GetCaretPos": "Copies the caret's position to the specified POINT structure.", "GetClipCursor": "Retrieves the screen coordinates of the rectangular area to which the cursor is confined.", "GetCursor": "Retrieves a handle to the current cursor.", "GetCursorInfo": "Retrieves information about the global cursor.", "GetCursorPos": "Retrieves the position of the mouse cursor, in screen coordinates.", "GetDistanceOfClosestLanguageInList": "Determines the distance between the specified language code and the closest match in a list of languages.", "GetFileVersionInfoA": "Retrieves version information for the specified file.", "GetFileVersionInfoExA": "Retrieves version information for the specified file.", "GetFileVersionInfoExW": "Retrieves version information for the specified file.", "GetFileVersionInfoSizeA": "If version information is available, GetFileVersionInfoSize returns the size, in bytes, of that information.", "GetFileVersionInfoSizeExA": "If version information is available, GetFileVersionInfoSizeEx returns the size, in bytes, of that information.", "GetFileVersionInfoSizeExW": "If version information is available, GetFileVersionInfoSizeEx returns the size, in bytes, of that information.", "GetFileVersionInfoSizeW": "If version information is available, GetFileVersionInfoSize returns the size, in bytes, of that information.", "GetFileVersionInfoW": "Retrieves version information for the specified file.", "GetIconInfo": "Retrieves information about the specified icon or cursor.", "GetIconInfoExA": "Retrieves information about the specified icon or cursor.", "GetIconInfoExW": "Retrieves information about the specified icon or cursor.", "GetMenu": "Retrieves a handle to the menu assigned to the specified window.", "GetMenuBarInfo": "Retrieves information about the specified menu bar.", "GetMenuCheckMarkDimensions": "Retrieves the dimensions of the default check-mark bitmap.", "GetMenuDefaultItem": "Determines the default menu item on the specified menu.", "GetMenuInfo": "Retrieves information about a specified menu.", "GetMenuItemCount": "Determines the number of items in the specified menu.", "GetMenuItemID": "Retrieves the menu item identifier of a menu item located at the specified position in a menu.", "GetMenuItemInfoA": "Retrieves information about a menu item.", "GetMenuItemInfoW": "Retrieves information about a menu item.", "GetMenuItemRect": "Retrieves the bounding rectangle for the specified menu item.", "GetMenuState": "Retrieves the menu flags associated with the specified menu item.", "GetMenuStringA": "Copies the text string of the specified menu item into the specified buffer.", "GetMenuStringW": "Copies the text string of the specified menu item into the specified buffer.", "GetPhysicalCursorPos": "Retrieves the position of the cursor in physical coordinates.", "GetSubMenu": "Retrieves a handle to the drop-down menu or submenu activated by the specified menu item.", "GetSystemMenu": "Enables the application to access the window menu for copying and modifying.", "HideCaret": "Removes the caret from the screen.", "HiliteMenuItem": "Adds or removes highlighting from an item in a menu bar.", "IndexFilePath": "Indexes a file path for file and folder naming conventions.", "InsertMenuA": "Inserts a new menu item into a menu, moving other items down the menu.", "InsertMenuItemA": "Inserts a new menu item at the specified position in a menu.", "InsertMenuItemW": "Inserts a new menu item at the specified position in a menu.", "InsertMenuW": "Inserts a new menu item into a menu, moving other items down the menu.", "IS_INTRESOURCE": "Determines whether a value is an integer identifier for a resource.", "IsCharAlphaA": "Determines whether a character is an alphabetical character.", "IsCharAlphaNumericA": "Determines whether a character is either an alphabetical or a numeric character.", "IsCharAlphaNumericW": "Determines whether a character is either an alphabetical or a numeric character.", "IsCharAlphaW": "Determines whether a character is an alphabetical character.", "IsCharLowerA": "Determines whether a character is lowercase.", "IsCharUpperA": "Determines whether a character is uppercase.", "IsCharUpperW": "Determines whether a character is uppercase.", "IsMenu": "Determines whether a handle is a menu handle.", "IsWellFormedTag": "Determines whether a BCP-47 language tag is well-formed.", "LoadAcceleratorsA": "Loads the specified accelerator table.", "LoadAcceleratorsW": "Loads the specified accelerator table.", "LoadCursorA": "Loads the specified cursor resource from the executable file associated with an application instance.", "LoadCursorFromFileA": "Creates a cursor based on data contained in a file.", "LoadCursorFromFileW": "Creates a cursor based on data contained in a file.", "LoadCursorW": "Loads the specified cursor resource from the executable file associated with an application instance.", "LoadIconA": "Loads the specified icon resource from the executable file associated with an application instance.", "LoadIconW": "Loads the specified icon resource from the executable file associated with an application instance.", "LoadImageA": "Loads an icon, cursor, animated cursor, or bitmap.", "LoadImageW": "Loads an icon, cursor, animated cursor, or bitmap.", "LoadMenuA": "Loads the specified menu resource from the executable file associated with an application instance.", "LoadMenuIndirectA": "Loads the specified menu template in memory.", "LoadMenuIndirectW": "Loads the specified menu template in memory.", "LoadMenuW": "Loads the specified menu resource from the executable file associated with an application instance.", "LoadResource": "Retrieves a handle that can be used to obtain a pointer to the first byte of the specified resource in memory.", "LoadStringA": "Loads a string resource from the executable file associated with a specified module, copies the string into a buffer, and appends a terminating null character.", "LoadStringW": "Loads a string resource from the executable file associated with a specified module, copies the string into a buffer, and appends a terminating null character.", "LockResource": "Retrieves a pointer to the specified resource in memory.", "LookupIconIdFromDirectory": "Searches through icon or cursor data for the icon or cursor that best fits the current display device.", "LookupIconIdFromDirectoryEx": "Searches through icon or cursor data for the icon or cursor that best fits the current display device.", "lstrcatA": "Appends one string to another.", "lstrcatW": "Appends one string to another.", "lstrcmpA": "Compares two character strings.", "lstrcmpiA": "Compares two character strings.", "lstrcmpiW": "Compares two character strings.", "lstrcmpW": "Compares two character strings.", "lstrcpyA": "Copies a string to a buffer.", "lstrcpynA": "Copies a specified number of characters from a source string into a buffer.", "lstrcpynW": "Copies a specified number of characters from a source string into a buffer.", "lstrcpyW": "Copies a string to a buffer.", "lstrlenA": "Determines the length of the specified string.", "lstrlenW": "Determines the length of the specified string.", "MAKEINTRESOURCEA": "Converts an integer value to a resource type compatible with the resource-management functions.", "MAKEINTRESOURCEW": "Converts an integer value to a resource type compatible with the resource-management functions.", "MenuItemFromPoint": "Determines which menu item, if any, is at the specified location.", "ModifyMenuA": "Changes an existing menu item.", "ModifyMenuW": "Changes an existing menu item.", "OemToCharA": "Translates a string from the OEM-defined character set into either an ANSI or a wide-character string.", "OemToCharBuffA": "Translates a specified number of characters in a string from the OEM-defined character set into either an ANSI or a wide-character string.", "OemToCharBuffW": "Translates a specified number of characters in a string from the OEM-defined character set into either an ANSI or a wide-character string.", "OemToCharW": "Translates a string from the OEM-defined character set into either an ANSI or a wide-character string.", "PrivateExtractIconsA": "Creates an array of handles to icons that are extracted from a specified file.", "PrivateExtractIconsW": "Creates an array of handles to icons that are extracted from a specified file.", "RemoveMenu": "Deletes a menu item or detaches a submenu from the specified menu.", "SetCaretBlinkTime": "Sets the caret blink time to the specified number of milliseconds.", "SetCaretPos": "Moves the caret to the specified coordinates.", "SetCursor": "Sets the cursor shape.", "SetCursorPos": "Moves the cursor to the specified screen coordinates.", "SetMenu": "Assigns a new menu to the specified window.", "SetMenuDefaultItem": "Sets the default menu item for the specified menu.", "SetMenuInfo": "Sets information for a specified menu.", "SetMenuItemBitmaps": "Associates the specified bitmap with a menu item.", "SetMenuItemInfoA": "Changes information about a menu item.", "SetMenuItemInfoW": "Changes information about a menu item.", "SetPhysicalCursorPos": "Sets the position of the cursor in physical coordinates.", "SetSystemCursor": "It replaces the contents of the system cursor specified by the i d parameter with the contents of the cursor specified by the hcur parameter and then destroys hcur.", "ShowCaret": "Makes the caret visible on the screen at the caret 's current position.", "ShowCursor": "Displays or hides the cursor.", "SizeofResource": "Retrieves the size, in bytes, of the specified resource.", "StringCbCatA": "Concatenates one string to another string.", "StringCbCatExA": "Concatenates one string to another string.", "StringCbCatExW": "Concatenates one string to another string.", "StringCbCatNA": "Concatenates the specified number of bytes from one string to another string.", "StringCbCatNExA": "Concatenates the specified number of bytes from one string to another string.", "StringCbCatNExW": "Concatenates the specified number of bytes from one string to another string.", "StringCbCatNW": "Concatenates the specified number of bytes from one string to another string.", "StringCbCatW": "Concatenates one string to another string.", "StringCbCopyA": "Copies one string to another.", "StringCbCopyExA": "Copies one string to another.", "StringCbCopyExW": "Copies one string to another.", "StringCbCopyNA": "Copies the specified number of bytes from one string to another.", "StringCbCopyNExA": "Copies the specified number of bytes from one string to another.", "StringCbCopyNExW": "Copies the specified number of bytes from one string to another.", "StringCbCopyNW": "Copies the specified number of bytes from one string to another.", "StringCbCopyW": "Copies one string to another.", "StringCbGetsA": "Gets one line of text from stdin, up to and including the newline character.", "StringCbGetsExA": "Gets one line of text from stdin, up to and including the newline character.", "StringCbGetsExW": "Gets one line of text from stdin, up to and including the newline character.", "StringCbGetsW": "Gets one line of text from stdin, up to and including the newline character.", "StringCbLengthA": "Determines whether a string exceeds the specified length, in bytes.", "StringCbLengthW": "Determines whether a string exceeds the specified length, in bytes.", "StringCbPrintf_lA": "The size of the destination buffer is provided to the function to ensure that it does not write past the end of this buffer.", "StringCbPrintf_lExA": "The size of the destination buffer is provided to the function to ensure that it does not write past the end of this buffer.", "StringCbPrintf_lExW": "The size of the destination buffer is provided to the function to ensure that it does not write past the end of this buffer.", "StringCbPrintf_lW": "The size of the destination buffer is provided to the function to ensure that it does not write past the end of this buffer.", "StringCbPrintfA": "Writes formatted data to the specified string.", "StringCbPrintfExA": "Writes formatted data to the specified string.", "StringCbPrintfExW": "Writes formatted data to the specified string.", "StringCbPrintfW": "Writes formatted data to the specified string.", "StringCbVPrintf_lA": "The size of the destination buffer is provided to the function to ensure that it does not write past the end of this buffer.", "StringCbVPrintf_lExA": "The size of the destination buffer is provided to the function to ensure that it does not write past the end of this buffer.", "StringCbVPrintf_lExW": "The size of the destination buffer is provided to the function to ensure that it does not write past the end of this buffer.", "StringCbVPrintf_lW": "The size of the destination buffer is provided to the function to ensure that it does not write past the end of this buffer.", "StringCbVPrintfA": "Writes formatted data to the specified string using a pointer to a list of arguments.", "StringCbVPrintfExA": "Writes formatted data to the specified string using a pointer to a list of arguments.", "StringCbVPrintfExW": "Writes formatted data to the specified string using a pointer to a list of arguments.", "StringCbVPrintfW": "Writes formatted data to the specified string using a pointer to a list of arguments.", "StringCchCatA": "Concatenates one string to another string.", "StringCchCatExA": "Concatenates one string to another string.", "StringCchCatExW": "Concatenates one string to another string.", "StringCchCatNA": "Concatenates the specified number of characters from one string to another string.", "StringCchCatNExA": "Concatenates the specified number of characters from one string to another string.", "StringCchCatNExW": "Concatenates the specified number of characters from one string to another string.", "StringCchCatNW": "Concatenates the specified number of characters from one string to another string.", "StringCchCatW": "Concatenates one string to another string.", "StringCchCopyA": "Copies one string to another.", "StringCchCopyExA": "Copies one string to another.", "StringCchCopyExW": "Copies one string to another.", "StringCchCopyNA": "Copies the specified number of characters from one string to another.", "StringCchCopyNExA": "Copies the specified number of characters from one string to another.", "StringCchCopyNExW": "Copies the specified number of characters from one string to another.", "StringCchCopyNW": "Copies the specified number of characters from one string to another.", "StringCchCopyW": "Copies one string to another.", "StringCchGetsA": "Gets one line of text from stdin, up to and including the newline character.", "StringCchGetsExA": "Gets one line of text from stdin, up to and including the newline character.", "StringCchGetsExW": "Gets one line of text from stdin, up to and including the newline character.", "StringCchGetsW": "Gets one line of text from stdin, up to and including the newline character.", "StringCchLengthA": "Determines whether a string exceeds the specified length, in characters.", "StringCchLengthW": "Determines whether a string exceeds the specified length, in characters.", "StringCchPrintf_lA": "The size of the destination buffer is provided to the function to ensure that it does not write past the end of this buffer.", "StringCchPrintf_lExA": "The size of the destination buffer is provided to the function to ensure that it does not write past the end of this buffer.", "StringCchPrintf_lExW": "The size of the destination buffer is provided to the function to ensure that it does not write past the end of this buffer.", "StringCchPrintf_lW": "The size of the destination buffer is provided to the function to ensure that it does not write past the end of this buffer.", "StringCchPrintfA": "Writes formatted data to the specified string.", "StringCchPrintfExA": "Writes formatted data to the specified string.", "StringCchPrintfExW": "Writes formatted data to the specified string.", "StringCchPrintfW": "Writes formatted data to the specified string.", "StringCchVPrintf_lA": "The size of the destination buffer is provided to the function to ensure that it does not write past the end of this buffer.", "StringCchVPrintf_lExA": "The size of the destination buffer is provided to the function to ensure that it does not write past the end of this buffer.", "StringCchVPrintf_lExW": "The size of the destination buffer is provided to the function to ensure that it does not write past the end of this buffer.", "StringCchVPrintf_lW": "The size of the destination buffer is provided to the function to ensure that it does not write past the end of this buffer.", "StringCchVPrintfA": "Writes formatted data to the specified string using a pointer to a list of arguments.", "StringCchVPrintfExA": "Writes formatted data to the specified string using a pointer to a list of arguments.", "StringCchVPrintfExW": "Writes formatted data to the specified string using a pointer to a list of arguments.", "StringCchVPrintfW": "Writes formatted data to the specified string using a pointer to a list of arguments.", "TrackPopupMenu": "The shortcut menu can appear anywhere on the screen.", "TrackPopupMenuEx": "The shortcut menu can appear anywhere on the screen.", "TranslateAcceleratorA": "Processes accelerator keys for menu commands.", "TranslateAcceleratorW": "Processes accelerator keys for menu commands.", "UpdateResourceA": "Adds, deletes, or replaces a resource in a portable executable file.", "UpdateResourceW": "Adds, deletes, or replaces a resource in a portable executable file.", "VerFindFileA": "Determines where to install a file based on whether it locates another version of the file in the system.", "VerFindFileW": "Determines where to install a file based on whether it locates another version of the file in the system.", "VerInstallFileA": "Installs the specified file based on information returned from the VerFindFile function.", "VerInstallFileW": "Installs the specified file based on information returned from the VerFindFile function.", "VerLanguageNameA": "Retrieves a description string for the language associated with a specified binary Microsoft language identifier.", "VerLanguageNameW": "Retrieves a description string for the language associated with a specified binary Microsoft language identifier.", "VerQueryValueA": "Retrieves specified version information from the specified version-information resource.", "VerQueryValueW": "Retrieves specified version information from the specified version-information resource.", "wsprintfA": "Writes formatted data to the specified buffer.", "wsprintfW": "Writes formatted data to the specified buffer.", "wvsprintfA": "Writes formatted data to the specified buffer using a pointer to a list of arguments.", "wvsprintfW": "Writes formatted data to the specified buffer using a pointer to a list of arguments."}