{"ActivateKeyboardLayout": "Sets the input locale identifier for the calling thread or the current process.", "AddClipboardFormatListener": "Places the given window in the system-maintained clipboard format listener list.", "AdjustWindowRect": "Calculates the required size of the window rectangle, based on the desired client-rectangle size.", "AdjustWindowRectEx": "Calculates the required size of the window rectangle, based on the desired size of the client rectangle.", "AdjustWindowRectExForDpi": "Calculates the required size of the window rectangle, based on the desired size of the client rectangle and the provided DPI.", "AllowSetForegroundWindow": "Enables the specified process to set the foreground window using the SetForegroundWindow function.", "AnimateWindow": "Enables you to produce special effects when showing or hiding windows.", "AnyPopup": "Indicates whether an owned, visible, top-level pop-up, or overlapped window exists on the screen.", "AppendMenuA": "Appends a new item to the end of the specified menu bar, drop-down menu, submenu, or shortcut menu.", "AppendMenuW": "Appends a new item to the end of the specified menu bar, drop-down menu, submenu, or shortcut menu.", "AreDpiAwarenessContextsEqual": "Determines whether two DPI_AWARENESS_CONTEXT values are identical.", "ArrangeIconicWindows": "Arranges all the minimized child windows of the specified parent window.", "AttachThreadInput": "Attaches or detaches the input processing mechanism of one thread to that of another thread.", "BeginDeferWindowPos": "Allocates memory for a multiple-window- position structure and returns the handle to the structure.", "BeginPaint": "The BeginPaint function prepares the specified window for painting and fills a PAINTSTRUCT structure with information about the painting.", "BlockInput": "Blocks keyboard and mouse input events from reaching applications.", "BringWindowToTop": "Brings the specified window to the top of the Z order.", "BroadcastSystemMessage": "Sends a message to the specified recipients.", "BroadcastSystemMessageA": "Sends a message to the specified recipients.", "BroadcastSystemMessageExA": "Sends a message to the specified recipients.", "BroadcastSystemMessageExW": "Sends a message to the specified recipients.", "BroadcastSystemMessageW": "Sends a message to the specified recipients.", "CalculatePopupWindowPosition": "Calculates an appropriate pop-up window position using the specified anchor point, pop-up window size, flags, and the optional exclude rectangle.", "CallMsgFilterA": "Passes the specified message and hook code to the hook procedures associated with the WH_SYSMSGFILTER and WH_MSGFILTER hooks.", "CallMsgFilterW": "Passes the specified message and hook code to the hook procedures associated with the WH_SYSMSGFILTER and WH_MSGFILTER hooks.", "CallNextHookEx": "Passes the hook information to the next hook procedure in the current hook chain.", "CallWindowProcA": "Passes message information to the specified window procedure.", "CallWindowProcW": "Passes message information to the specified window procedure.", "CascadeWindows": "Cascades the specified child windows of the specified parent window.", "ChangeClipboardChain": "Removes a specified window from the chain of clipboard viewers.", "ChangeDisplaySettingsA": "The ChangeDisplaySettings function changes the settings of the default display device to the specified graphics mode.", "ChangeDisplaySettingsExA": "The ChangeDisplaySettingsEx function changes the settings of the specified display device to the specified graphics mode.", "ChangeDisplaySettingsExW": "The ChangeDisplaySettingsEx function changes the settings of the specified display device to the specified graphics mode.", "ChangeDisplaySettingsW": "The ChangeDisplaySettings function changes the settings of the default display device to the specified graphics mode.", "ChangeWindowMessageFilter": "Adds or removes a message from the User Interface Privilege Isolation message filter.", "ChangeWindowMessageFilterEx": "Modifies the User Interface Privilege Isolation message filter for a specified window.", "CharLowerA": "Converts a character string or a single character to lowercase.", "CharLowerBuffA": "Converts uppercase characters in a buffer to lowercase characters.", "CharLowerBuffW": "Converts uppercase characters in a buffer to lowercase characters.", "CharLowerW": "Converts a character string or a single character to lowercase.", "CharNextA": "Retrieves a pointer to the next character in a string.", "CharNextExA": "Retrieves the pointer to the next character in a string.", "CharNextW": "Retrieves a pointer to the next character in a string.", "CharPrevA": "Retrieves a pointer to the preceding character in a string.", "CharPrevExA": "Retrieves the pointer to the preceding character in a string.", "CharPrevW": "Retrieves a pointer to the preceding character in a string.", "CharToOemA": "Translates a string into the OEM-defined character set.", "CharToOemBuffA": "Translates a specified number of characters in a string into the OEM-defined character set.", "CharToOemBuffW": "Translates a specified number of characters in a string into the OEM-defined character set.", "CharToOemW": "Translates a string into the OEM-defined character set.", "CharUpperA": "Converts a character string or a single character to uppercase.", "CharUpperBuffA": "Converts lowercase characters in a buffer to uppercase characters.", "CharUpperBuffW": "Converts lowercase characters in a buffer to uppercase characters.", "CharUpperW": "Converts a character string or a single character to uppercase.", "CheckDlgButton": "Changes the check state of a button control.", "CheckMenuItem": "Sets the state of the specified menu item's check-mark attribute to either selected or clear.", "CheckMenuRadioItem": "Checks a specified menu item and makes it a radio item.", "CheckRadioButton": "Adds a check mark to all other radio buttons in the group.", "ChildWindowFromPoint": "Determines which, if any, of the child windows belonging to a parent window contains the specified point.", "ChildWindowFromPointEx": "Determines which, if any, of the child windows belonging to the specified parent window contains the specified point.", "ClientToScreen": "The ClientToScreen function converts the client-area coordinates of a specified point to screen coordinates.", "ClipCursor": "Confines the cursor to a rectangular area on the screen.", "CloseClipboard": "Closes the clipboard.", "CloseDesktop": "Closes an open handle to a desktop object.", "CloseGestureInfoHandle": "Closes resources associated with a gesture information handle.", "CloseTouchInputHandle": "Closes a touch input handle, frees process memory associated with it, and invalidates the handle.", "CloseWindow": "Minimizes the specified window.", "CloseWindowStation": "Closes an open window station handle.", "CopyAcceleratorTableA": "Copies the specified accelerator table.", "CopyAcceleratorTableW": "Copies the specified accelerator table.", "CopyCursor": "Copies the specified cursor.", "CopyIcon": "Copies the specified icon from another module to the current module.", "CopyImage": "Creates a new image and copies the attributes of the specified image to the new one.", "CopyRect": "The CopyRect function copies the coordinates of one rectangle to another.", "CountClipboardFormats": "Retrieves the number of different data formats currently on the clipboard.", "CreateAcceleratorTableA": "Creates an accelerator table.", "CreateAcceleratorTableW": "Creates an accelerator table.", "CreateCaret": "Creates a new shape for the system caret and assigns ownership of the caret to the specified window.", "CreateCursor": "Creates a cursor having the specified size, bit patterns, and hot spot.", "CreateDesktopA": "Creates a new desktop, associates it with the current window station of the calling process, and assigns it to the calling thread.", "CreateDesktopExA": "Creates a new desktop with the specified heap, associates it with the current window station of the calling process, and assigns it to the calling thread.", "CreateDesktopExW": "Creates a new desktop with the specified heap, associates it with the current window station of the calling process, and assigns it to the calling thread.", "CreateDesktopW": "Creates a new desktop, associates it with the current window station of the calling process, and assigns it to the calling thread.", "CreateDialogA": "Creates a modeless dialog box from a dialog box template resource.", "CreateDialogIndirectA": "Creates a modeless dialog box from a dialog box template in memory.", "CreateDialogIndirectParamA": "Creates a modeless dialog box from a dialog box template in memory.", "CreateDialogIndirectParamW": "Creates a modeless dialog box from a dialog box template in memory.", "CreateDialogIndirectW": "Creates a modeless dialog box from a dialog box template in memory.", "CreateDialogParamA": "Creates a modeless dialog box from a dialog box template resource.", "CreateDialogParamW": "Creates a modeless dialog box from a dialog box template resource.", "CreateDialogW": "Creates a modeless dialog box from a dialog box template resource.", "CreateIcon": "Creates an icon that has the specified size, colors, and bit patterns.", "CreateIconFromResource": "Creates an icon or cursor from resource bits describing the icon.", "CreateIconFromResourceEx": "Creates an icon or cursor from resource bits describing the icon.", "CreateIconIndirect": "Creates an icon or cursor from an ICONINFO structure.", "CreateMDIWindowA": "Creates a multiple-document interface child window.", "CreateMDIWindowW": "Creates a multiple-document interface child window.", "CreateMenu": "Creates a menu.", "CreatePopupMenu": "Creates a drop-down menu, submenu, or shortcut menu.", "CreateSyntheticPointerDevice": "Configures the pointer injection device for the calling application, and initializes the maximum number of simultaneous pointers that the app can inject.", "CreateWindowA": "Creates an overlapped, pop-up, or child window.", "CreateWindowExA": "Creates an overlapped, pop-up, or child window with an extended window style; otherwise, this function is identical to the CreateWindow function.", "CreateWindowExW": "Creates an overlapped, pop-up, or child window with an extended window style; otherwise, this function is identical to the CreateWindow function.", "CreateWindowStationA": "Creates a window station object, associates it with the calling process, and assigns it to the current session.", "CreateWindowStationW": "Creates a window station object, associates it with the calling process, and assigns it to the current session.", "CreateWindowW": "Creates an overlapped, pop-up, or child window.", "DefDlgProcA": "Calls the default dialog box window procedure to provide default processing for any window messages that a dialog box with a private window class does not process.", "DefDlgProcW": "Calls the default dialog box window procedure to provide default processing for any window messages that a dialog box with a private window class does not process.", "DeferWindowPos": "Updates the specified multiple-window \u00ef\u00bf\u00bd position structure for the specified window.", "DefFrameProcA": "Provides default processing for any window messages that the window procedure of a multiple-document interface frame window does not process.", "DefFrameProcW": "Provides default processing for any window messages that the window procedure of a multiple-document interface frame window does not process.", "DefMDIChildProcA": "Provides default processing for any window message that the window procedure of a multiple-document interface child window does not process.", "DefMDIChildProcW": "Provides default processing for any window message that the window procedure of a multiple-document interface child window does not process.", "DefRawInputProc": "Verifies that the size of the RAWINPUTHEADER structure is correct.", "DefWindowProcA": "Calls the default window procedure to provide default processing for any window messages that an application does not process.", "DefWindowProcW": "Calls the default window procedure to provide default processing for any window messages that an application does not process.", "DeleteMenu": "Deletes an item from the specified menu.", "DeregisterShellHookWindow": "Unregisters a specified Shell window that is registered to receive Shell hook messages.", "DestroyAcceleratorTable": "Destroys an accelerator table.", "DestroyCaret": "Destroys the caret's current shape, frees the caret from the window, and removes the caret from the screen.", "DestroyCursor": "Destroys a cursor and frees any memory the cursor occupied.", "DestroyIcon": "Destroys an icon and frees any memory the icon occupied.", "DestroyMenu": "Destroys the specified menu and frees any memory that the menu occupies.", "DestroySyntheticPointerDevice": "Destroys the specified pointer injection device.", "DestroyWindow": "Destroys the specified window.", "DialogBoxA": "Creates a modal dialog box from a dialog box template resource.", "DialogBoxIndirectA": "Creates a modal dialog box from a dialog box template in memory.", "DialogBoxIndirectParamA": "Creates a modal dialog box from a dialog box template in memory.", "DialogBoxIndirectParamW": "Creates a modal dialog box from a dialog box template in memory.", "DialogBoxIndirectW": "Creates a modal dialog box from a dialog box template in memory.", "DialogBoxParamA": "Creates a modal dialog box from a dialog box template resource.", "DialogBoxParamW": "Creates a modal dialog box from a dialog box template resource.", "DialogBoxW": "Creates a modal dialog box from a dialog box template resource.", "DisableProcessWindowsGhosting": "Disables the window ghosting feature for the calling GUI process.", "DispatchMessage": "Dispatches a message to a window procedure.", "DispatchMessageA": "Dispatches a message to a window procedure.", "DispatchMessageW": "Dispatches a message to a window procedure.", "DisplayConfigGetDeviceInfo": "The DisplayConfigGetDeviceInfo function retrieves display configuration information about the device.", "DisplayConfigSetDeviceInfo": "The DisplayConfigSetDeviceInfo function sets the properties of a target.", "DlgDirListA": "Replaces the contents of a list box with the names of the subdirectories and files in a specified directory.", "DlgDirListComboBoxA": "Replaces the contents of a combo box with the names of the subdirectories and files in a specified directory.", "DlgDirListComboBoxW": "Replaces the contents of a combo box with the names of the subdirectories and files in a specified directory.", "DlgDirListW": "Replaces the contents of a list box with the names of the subdirectories and files in a specified directory.", "DlgDirSelectComboBoxExA": "Retrieves the current selection from a combo box filled by using the DlgDirListComboBox function.", "DlgDirSelectComboBoxExW": "Retrieves the current selection from a combo box filled by using the DlgDirListComboBox function.", "DlgDirSelectExA": "Retrieves the current selection from a single-selection list box.", "DlgDirSelectExW": "Retrieves the current selection from a single-selection list box.", "DragDetect": "Captures the mouse and tracks its movement until the user releases the left button, presses the ESC key, or moves the mouse outside the drag rectangle around the specified point.", "DrawAnimatedRects": "Animates the caption of a window to indicate the opening of an icon or the minimizing or maximizing of a window.", "DrawCaption": "The DrawCaption function draws a window caption.", "DrawEdge": "The DrawEdge function draws one or more edges of rectangle.", "DrawFocusRect": "The DrawFocusRect function draws a rectangle in the style used to indicate that the rectangle has the focus.", "DrawFrameControl": "The DrawFrameControl function draws a frame control of the specified type and style.", "DrawIcon": "Draws an icon or cursor into the specified device context.", "DrawIconEx": "Draws an icon or cursor into the specified device context, performing the specified raster operations, and stretching or compressing the icon or cursor as specified.", "DrawMenuBar": "Redraws the menu bar of the specified window.", "DrawStateA": "The DrawState function displays an image and applies a visual effect to indicate a state, such as a disabled or default state.", "DrawStateW": "The DrawState function displays an image and applies a visual effect to indicate a state, such as a disabled or default state.", "DrawText": "The DrawText function draws formatted text in the specified rectangle.", "DrawTextA": "The DrawText function draws formatted text in the specified rectangle.", "DrawTextExA": "The DrawTextEx function draws formatted text in the specified rectangle.", "DrawTextExW": "The DrawTextEx function draws formatted text in the specified rectangle.", "DrawTextW": "The DrawText function draws formatted text in the specified rectangle.", "EmptyClipboard": "Empties the clipboard and frees handles to data in the clipboard.", "EnableMenuItem": "Enables, disables, or grays the specified menu item.", "EnableMouseInPointer": "Enables the mouse to act as a pointer input device and send WM_POINTER messages.", "EnableNonClientDpiScaling": "In high-DPI displays, enables automatic display scaling of the non-client area portions of the specified top-level window.", "EnableScrollBar": "The EnableScrollBar function enables or disables one or both scroll bar arrows.", "EnableWindow": "Enables or disables mouse and keyboard input to the specified window or control.", "EndDeferWindowPos": "Simultaneously updates the position and size of one or more windows in a single screen-refreshing cycle.", "EndDialog": "Destroys a modal dialog box, causing the system to end any processing for the dialog box.", "EndMenu": "Ends the calling thread's active menu.", "EndPaint": "The EndPaint function marks the end of painting in the specified window.", "EndTask": "Forcibly closes the specified window.", "EnumChildWindows": "Enumerates the child windows that belong to the specified parent window by passing the handle to each child window, in turn, to an application-defined callback function.", "EnumClipboardFormats": "Enumerates the data formats currently available on the clipboard.", "EnumDesktopsA": "Enumerates all desktops associated with the specified window station of the calling process.", "EnumDesktopsW": "Enumerates all desktops associated with the specified window station of the calling process.", "EnumDesktopWindows": "Enumerates all top-level windows associated with the specified desktop.", "EnumDisplayDevicesA": "The EnumDisplayDevices function lets you obtain information about the display devices in the current session.", "EnumDisplayDevicesW": "The EnumDisplayDevices function lets you obtain information about the display devices in the current session.", "EnumDisplayMonitors": "The EnumDisplayMonitors function enumerates display monitors counts only the display monitors.", "EnumDisplaySettingsA": "The EnumDisplaySettings function retrieves information about one of the graphics modes for a display device.", "EnumDisplaySettingsExA": "The EnumDisplaySettingsEx function retrieves information about one of the graphics modes for a display device.", "EnumDisplaySettingsExW": "The EnumDisplaySettingsEx function retrieves information about one of the graphics modes for a display device.", "EnumDisplaySettingsW": "The EnumDisplaySettings function retrieves information about one of the graphics modes for a display device.", "EnumPropsA": "Enumerates all entries in the property list of a window by passing them, one by one, to the specified callback function.", "EnumPropsExA": "Enumerates all entries in the property list of a window by passing them, one by one, to the specified callback function.", "EnumPropsExW": "Enumerates all entries in the property list of a window by passing them, one by one, to the specified callback function.", "EnumPropsW": "Enumerates all entries in the property list of a window by passing them, one by one, to the specified callback function.", "EnumThreadWindows": "Enumerates all nonchild windows associated with a thread by passing the handle to each window, in turn, to an application-defined callback function.", "EnumWindows": "Enumerates all top-level windows on the screen by passing the handle to each window, in turn, to an application-defined callback function.", "EnumWindowStationsA": "Enumerates all window stations in the current session.", "EnumWindowStationsW": "Enumerates all window stations in the current session.", "EqualRect": "The EqualRect function determines whether the two specified rectangles are equal by comparing the coordinates of their upper-left and lower-right corners.", "EvaluateProximityToPolygon": "Returns the score of a polygon as the probable touch target and an adjusted touch point within the polygon.", "EvaluateProximityToRect": "Returns the score of a rectangle as the probable touch target, compared to all other rectangles that intersect the touch contact area, and an adjusted touch point within the rectangle.", "ExcludeUpdateRgn": "The ExcludeUpdateRgn function prevents drawing within invalid areas of a window by excluding an updated region in the window from a clipping region.", "ExitWindows": "Calls the ExitWindowsEx function to log off the interactive user.", "ExitWindowsEx": "Logs off the interactive user, shuts down the system, or shuts down and restarts the system.", "FillRect": "The FillRect function fills a rectangle by using the specified brush.", "FindWindowA": "Retrieves a handle to the top-level window whose class name and window name match the specified strings.", "FindWindowExA": "Retrieves a handle to a window whose class name and window name match the specified strings.", "FindWindowExW": "Retrieves a handle to a window whose class name and window name match the specified strings.", "FindWindowW": "Retrieves a handle to the top-level window whose class name and window name match the specified strings.", "FlashWindow": "Flashes the specified window one time.", "FlashWindowEx": "Flashes the specified window.", "FrameRect": "The FrameRect function draws a border around the specified rectangle by using the specified brush.", "GET_APPCOMMAND_LPARAM": "Retrieves the application command from the specified LPARAM value.", "GET_DEVICE_LPARAM": "Retrieves the input device type from the specified LPARAM value.", "GET_FLAGS_LPARAM": "Retrieves the state of certain virtual keys from the specified LPARAM value.", "GET_KEYSTATE_LPARAM": "Retrieves the state of certain virtual keys from the specified LPARAM value.", "GET_KEYSTATE_WPARAM": "Retrieves the state of certain virtual keys from the specified WPARAM value.", "GET_NCHITTEST_WPARAM": "Retrieves the hit-test value from the specified WPARAM value.", "GET_POINTERID_WPARAM": "Retrieves the pointer ID using the specified value.", "GET_RAWINPUT_CODE_WPARAM": "Retrieves the input code from wParam in WM_INPUT.", "GET_WHEEL_DELTA_WPARAM": "Retrieves the wheel-delta value from the specified WPARAM value.", "GET_XBUTTON_WPARAM": "Retrieves the state of certain buttons from the specified WPARAM value.", "GetActiveWindow": "Retrieves the window handle to the active window attached to the calling thread's message queue.", "GetAltTabInfoA": "Retrieves status information for the specified window if it is the application-switching window.", "GetAltTabInfoW": "Retrieves status information for the specified window if it is the application-switching window.", "GetAncestor": "Retrieves the handle to the ancestor of the specified window.", "GetAsyncKeyState": "Determines whether a key is up or down at the time the function is called, and whether the key was pressed after a previous call to GetAsyncKeyState.", "GetAutoRotationState": "Retrieves an AR_STATE value containing the state of screen auto-rotation for the system, for example whether auto-rotation is supported, and whether it is enabled by the user.", "GetAwarenessFromDpiAwarenessContext": "Retrieves the DPI_AWARENESS value from a DPI_AWARENESS_CONTEXT.", "GetCapture": "Retrieves a handle to the window that has captured the mouse.", "GetCaretBlinkTime": "Retrieves the time required to invert the caret's pixels.", "GetCaretPos": "Copies the caret's position to the specified POINT structure.", "GetCIMSSM": "Retrieves the source of the input message.", "GetClassInfoA": "Retrieves information about a window class.", "GetClassInfoExA": "Retrieves information about a window class, including a handle to the small icon associated with the window class.", "GetClassInfoExW": "Retrieves information about a window class, including a handle to the small icon associated with the window class.", "GetClassInfoW": "Retrieves information about a window class.", "GetClassLongA": "Retrieves the specified 32-bit value from the WNDCLASSEX structure associated with the specified window.", "GetClassLongPtrA": "Retrieves the specified value from the WNDCLASSEX structure associated with the specified window.", "GetClassLongPtrW": "Retrieves the specified value from the WNDCLASSEX structure associated with the specified window.", "GetClassLongW": "Retrieves the specified 32-bit value from the WNDCLASSEX structure associated with the specified window.", "GetClassName": "Retrieves the name of the class to which the specified window belongs.", "GetClassNameA": "Retrieves the name of the class to which the specified window belongs.", "GetClassNameW": "Retrieves the name of the class to which the specified window belongs.", "GetClassWord": "Retrieves the 16-bit value at the specified offset into the extra class memory for the window class to which the specified window belongs.", "GetClientRect": "Retrieves the coordinates of a window's client area.", "GetClipboardData": "Retrieves data from the clipboard in a specified format.", "GetClipboardFormatNameA": "Retrieves from the clipboard the name of the specified registered format.", "GetClipboardFormatNameW": "Retrieves from the clipboard the name of the specified registered format.", "GetClipboardOwner": "Retrieves the window handle of the current owner of the clipboard.", "GetClipboardSequenceNumber": "Retrieves the clipboard sequence number for the current window station.", "GetClipboardViewer": "Retrieves the handle to the first window in the clipboard viewer chain.", "GetClipCursor": "Retrieves the screen coordinates of the rectangular area to which the cursor is confined.", "GetComboBoxInfo": "Retrieves information about the specified combo box.", "GetCurrentInputMessageSource": "Retrieves the source of the input message.", "GetCursor": "Retrieves a handle to the current cursor.", "GetCursorInfo": "Retrieves information about the global cursor.", "GetCursorPos": "Retrieves the position of the mouse cursor, in screen coordinates.", "GetDC": "The GetDC function retrieves a handle to a device context for the client area of a specified window or for the entire screen.", "GetDCEx": "The GetDCEx function retrieves a handle to a device context for the client area of a specified window or for the entire screen.", "GetDesktopWindow": "Retrieves a handle to the desktop window.", "GetDialogBaseUnits": "Retrieves the system's dialog base units, which are the average width and height of characters in the system font.", "GetDialogControlDpiChangeBehavior": "Retrieves and per-monitor DPI scaling behavior overrides of a child window in a dialog.", "GetDialogDpiChangeBehavior": "Returns the flags that might have been set on a given dialog by an earlier call to SetDialogDpiChangeBehavior.", "GetDisplayAutoRotationPreferences": "Retrieves the screen auto-rotation preferences for the current process.", "GetDisplayAutoRotationPreferencesByProcessId": "Retrieves the screen auto-rotation preferences for the process indicated by the dwProcessId parameter.", "GetDisplayConfigBufferSizes": "The GetDisplayConfigBufferSizes function retrieves the size of the buffers that are required to call the QueryDisplayConfig function.", "GetDlgCtrlID": "Retrieves the identifier of the specified control.", "GetDlgItem": "Retrieves a handle to a control in the specified dialog box.", "GetDlgItemInt": "Translates the text of a specified control in a dialog box into an integer value.", "GetDlgItemTextA": "Retrieves the title or text associated with a control in a dialog box.", "GetDlgItemTextW": "Retrieves the title or text associated with a control in a dialog box.", "GetDoubleClickTime": "Retrieves the current double-click time for the mouse.", "GetDpiForSystem": "Returns the system DPI.", "GetDpiForWindow": "Returns the dots per inch value for the associated window.", "GetDpiFromDpiAwarenessContext": "Retrieves the DPI from a given DPI_AWARENESS_CONTEXT handle.", "GetFocus": "Retrieves the handle to the window that has the keyboard focus, if the window is attached to the calling thread's message queue.", "GetForegroundWindow": "Retrieves a handle to the foreground window.", "GetGestureConfig": "Retrieves the configuration for which Windows Touch gesture messages are sent from a window.", "GetGestureExtraArgs": "Retrieves additional information about a gesture from its GESTUREINFO handle.", "GetGestureInfo": "Retrieves a GESTUREINFO structure given a handle to the gesture information.", "GetGuiResources": "Retrieves the count of handles to graphical user interface objects in use by the specified process.", "GetGUIThreadInfo": "Retrieves information about the active window or a specified GUI thread.", "GetIconInfo": "Retrieves information about the specified icon or cursor.", "GetIconInfoExA": "Retrieves information about the specified icon or cursor.", "GetIconInfoExW": "Retrieves information about the specified icon or cursor.", "GetInputState": "Determines whether there are mouse-button or keyboard messages in the calling thread's message queue.", "GetKBCodePage": "Retrieves the current code page.", "GetKeyboardLayout": "Retrieves the active input locale identifier.", "GetKeyboardLayoutList": "Retrieves the input locale identifiers corresponding to the current set of input locales in the system.", "GetKeyboardLayoutNameA": "Retrieves the name of the active input locale identifier for the system.", "GetKeyboardLayoutNameW": "Retrieves the name of the active input locale identifier for the system.", "GetKeyboardState": "Copies the status of the 256 virtual keys to the specified buffer.", "GetKeyboardType": "Retrieves information about the current keyboard.", "GetKeyNameTextA": "Retrieves a string that represents the name of a key.", "GetKeyNameTextW": "Retrieves a string that represents the name of a key.", "GetKeyState": "Retrieves the status of the specified virtual key.", "GetLastActivePopup": "Determines which pop-up window owned by the specified window was most recently active.", "GetLastInputInfo": "Retrieves the time of the last input event.", "GetLayeredWindowAttributes": "Retrieves the opacity and transparency color key of a layered window.", "GetListBoxInfo": "Retrieves the number of items per column in a specified list box.", "GetMenu": "Retrieves a handle to the menu assigned to the specified window.", "GetMenuBarInfo": "Retrieves information about the specified menu bar.", "GetMenuCheckMarkDimensions": "Retrieves the dimensions of the default check-mark bitmap.", "GetMenuContextHelpId": "Retrieves the Help context identifier associated with the specified menu.", "GetMenuDefaultItem": "Determines the default menu item on the specified menu.", "GetMenuInfo": "Retrieves information about a specified menu.", "GetMenuItemCount": "Determines the number of items in the specified menu.", "GetMenuItemID": "Retrieves the menu item identifier of a menu item located at the specified position in a menu.", "GetMenuItemInfoA": "Retrieves information about a menu item.", "GetMenuItemInfoW": "Retrieves information about a menu item.", "GetMenuItemRect": "Retrieves the bounding rectangle for the specified menu item.", "GetMenuState": "Retrieves the menu flags associated with the specified menu item.", "GetMenuStringA": "Copies the text string of the specified menu item into the specified buffer.", "GetMenuStringW": "Copies the text string of the specified menu item into the specified buffer.", "GetMessage": "Retrieves a message from the calling thread's message queue.", "GetMessageA": "Retrieves a message from the calling thread's message queue.", "GetMessageExtraInfo": "Retrieves the extra message information for the current thread.", "GetMessagePos": "Retrieves the cursor position for the last message retrieved by the GetMessage function.", "GetMessageTime": "Retrieves the message time for the last message retrieved by the GetMessage function.", "GetMessageW": "Retrieves a message from the calling thread's message queue.", "GetMonitorInfoA": "The GetMonitorInfo function retrieves information about a display monitor.", "GetMonitorInfoW": "The GetMonitorInfo function retrieves information about a display monitor.", "GetMouseMovePointsEx": "Retrieves a history of up to 64 previous coordinates of the mouse or pen.", "GetNextDlgGroupItem": "Retrieves a handle to the first control in a group of controls that precedes the specified control in a dialog box.", "GetNextDlgTabItem": "Retrieves a handle to the first control that has the WS_TABSTOP style that precedes the specified control.", "GetNextWindow": "Retrieves a handle to the next or previous window in the Z-Order.", "GetOpenClipboardWindow": "Retrieves the handle to the window that currently has the clipboard open.", "GetParent": "Retrieves a handle to the specified window's parent or owner.", "GetPhysicalCursorPos": "Retrieves the position of the cursor in physical coordinates.", "GetPointerCursorId": "Retrieves the cursor identifier associated with the specified pointer.", "GetPointerDevice": "Gets information about the pointer device.", "GetPointerDeviceCursors": "Gets the cursor IDs that are mapped to the cursors associated with a pointer device.", "GetPointerDeviceProperties": "Gets device properties that aren't included in the POINTER_DEVICE_INFO structure.", "GetPointerDeviceRects": "Gets the x and y range for the pointer device for the display that the pointer device is mapped to.", "GetPointerDevices": "Gets information about the pointer devices attached to the system.", "GetPointerFrameInfo": "Gets the entire frame of information for the specified pointers associated with the current message.", "GetPointerFrameInfoHistory": "Gets the entire frame of information for the specified pointers associated with the current message.", "GetPointerFramePenInfo": "Gets the entire frame of pen-based information for the specified pointers associated with the current message.", "GetPointerFramePenInfoHistory": "Gets the entire frame of pen-based information associated with the current message.", "GetPointerFrameTouchInfo": "Gets the entire frame of touch-based information for the specified pointers associated with the current message.", "GetPointerFrameTouchInfoHistory": "Gets the entire frame of touch-based information associated with the current message.", "GetPointerInfo": "Gets the information for the specified pointer associated with the current message.", "GetPointerInfoHistory": "Gets the information associated with the individual inputs, if any, that were coalesced into the current message for the specified pointer.", "GetPointerInputTransform": "Gets one or more transforms for the pointer information coordinates associated with the current message.", "GetPointerPenInfo": "Gets the pen-based information for the specified pointer associated with the current message.", "GetPointerPenInfoHistory": "Gets the pen-based information associated with the individual inputs, if any, that were coalesced into the current message for the specified pointer.", "GetPointerTouchInfo": "Gets the touch-based information for the specified pointer associated with the current message.", "GetPointerTouchInfoHistory": "Gets the touch-based information associated with the individual inputs, if any, that were coalesced into the current message for the specified pointer.", "GetPointerType": "Retrieves the pointer type for a specified pointer.", "GetPriorityClipboardFormat": "Retrieves the first available clipboard format in the specified list.", "GetProcessDefaultLayout": "Retrieves the default layout that is used when windows are created with no parent or owner.", "GetProcessWindowStation": "Retrieves a handle to the current window station for the calling process.", "GetPropA": "Retrieves a data handle from the property list of the specified window.", "GetPropW": "Retrieves a data handle from the property list of the specified window.", "GetQueueStatus": "Retrieves the type of messages found in the calling thread's message queue.", "GetRawInputBuffer": "Performs a buffered read of the raw input data.", "GetRawInputData": "Retrieves the raw input from the specified device.", "GetRawInputDeviceInfoA": "Retrieves information about the raw input device.", "GetRawInputDeviceInfoW": "Retrieves information about the raw input device.", "GetRawInputDeviceList": "Enumerates the raw input devices attached to the system.", "GetRawPointerDeviceData": "Gets the raw input data from the pointer device.", "GetRegisteredRawInputDevices": "Retrieves the information about the raw input devices for the current application.", "GetScrollBarInfo": "The GetScrollBarInfo function retrieves information about the specified scroll bar.", "GetScrollInfo": "The GetScrollInfo function retrieves the parameters of a scroll bar, including the minimum and maximum scrolling positions, the page size, and the position of the scroll box.", "GetScrollPos": "The GetScrollPos function retrieves the current position of the scroll box in the specified scroll bar.", "GetScrollRange": "The GetScrollRange function retrieves the current minimum and maximum scroll box positions for the specified scroll bar.", "GetShellWindow": "Retrieves a handle to the Shell's desktop window.", "GetSubMenu": "Retrieves a handle to the drop-down menu or submenu activated by the specified menu item.", "GetSysColor": "Retrieves the current color of the specified display element.", "GetSysColorBrush": "The GetSysColorBrush function retrieves a handle identifying a logical brush that corresponds to the specified color index.", "GetSystemDpiForProcess": "Retrieves the system DPI associated with a given process.", "GetSystemMenu": "Enables the application to access the window menu for copying and modifying.", "GetSystemMetrics": "Retrieves the specified system metric or system configuration setting.", "GetSystemMetricsForDpi": "Retrieves the specified system metric or system configuration setting taking into account a provided DPI.", "GetTabbedTextExtentA": "The GetTabbedTextExtent function computes the width and height of a character string.", "GetTabbedTextExtentW": "The GetTabbedTextExtent function computes the width and height of a character string.", "GetThreadDesktop": "Retrieves a handle to the desktop assigned to the specified thread.", "GetThreadDpiAwarenessContext": "Gets the DPI_AWARENESS_CONTEXT for the current thread.", "GetThreadDpiHostingBehavior": "Retrieves the DPI_HOSTING_BEHAVIOR from the current thread.", "GetTitleBarInfo": "Retrieves information about the specified title bar.", "GetTopWindow": "Examines the Z order of the child windows associated with the specified parent window and retrieves a handle to the child window at the top of the Z order.", "GetTouchInputInfo": "Retrieves detailed information about touch inputs associated with a particular touch input handle.", "GetUnpredictedMessagePos": "Gets pointer data before it has gone through touch prediction processing.", "GetUpdatedClipboardFormats": "Retrieves the currently supported clipboard formats.", "GetUpdateRect": "The GetUpdateRect function retrieves the coordinates of the smallest rectangle that completely encloses the update region of the specified window.", "GetUpdateRgn": "The GetUpdateRgn function retrieves the update region of a window by copying it into the specified region.", "GetUserObjectInformationA": "Retrieves information about the specified window station or desktop object.", "GetUserObjectInformationW": "Retrieves information about the specified window station or desktop object.", "GetUserObjectSecurity": "Retrieves security information for the specified user object.", "GetWindow": "Retrieves a handle to a window that has the specified relationship to the specified window.", "GetWindowContextHelpId": "Retrieves the Help context identifier, if any, associated with the specified window.", "GetWindowDC": "The GetWindowDC function retrieves the device context for the entire window, including title bar, menus, and scroll bars.", "GetWindowDisplayAffinity": "Retrieves the current display affinity setting, from any process, for a given window.", "GetWindowDpiAwarenessContext": "Returns the DPI_AWARENESS_CONTEXT associated with a window.", "GetWindowDpiHostingBehavior": "Returns the DPI_HOSTING_BEHAVIOR of the specified window.", "GetWindowFeedbackSetting": "Retrieves the feedback configuration for a window.", "GetWindowInfo": "Retrieves information about the specified window.", "GetWindowLongA": "Retrieves information about the specified window.", "GetWindowLongPtrA": "Retrieves information about the specified window.", "GetWindowLongPtrW": "Retrieves information about the specified window.", "GetWindowLongW": "Retrieves information about the specified window.", "GetWindowModuleFileNameA": "Retrieves the full path and file name of the module associated with the specified window handle.", "GetWindowModuleFileNameW": "Retrieves the full path and file name of the module associated with the specified window handle.", "GetWindowPlacement": "Retrieves the show state and the restored, minimized, and maximized positions of the specified window.", "GetWindowRect": "Retrieves the dimensions of the bounding rectangle of the specified window.", "GetWindowRgn": "The GetWindowRgn function obtains a copy of the window region of a window.", "GetWindowRgnBox": "The GetWindowRgnBox function retrieves the dimensions of the tightest bounding rectangle for the window region of a window.", "GetWindowTextA": "Copies the text of the specified window's title bar into a buffer.", "GetWindowTextLengthA": "Retrieves the length, in characters, of the specified window's title bar text.", "GetWindowTextLengthW": "Retrieves the length, in characters, of the specified window's title bar text.", "GetWindowTextW": "Copies the text of the specified window's title bar into a buffer.", "GetWindowThreadProcessId": "Retrieves the identifier of the thread that created the specified window and, optionally, the identifier of the process that created the window.", "GID_ROTATE_ANGLE_FROM_ARGUMENT": "The GID_ROTATE_ANGLE_FROM_ARGUMENT macro is used to interpret the GID_ROTATE ullArgument value when receiving the value in the WM_GESTURE structure.", "GID_ROTATE_ANGLE_TO_ARGUMENT": "Converts a radian value to an argument for rotation gesture messages.", "GrayStringA": "The GrayString function draws gray text at the specified location.", "GrayStringW": "The GrayString function draws gray text at the specified location.", "HAS_POINTER_CONFIDENCE_WPARAM": "Checks whether the specified pointer message is considered intentional rather than accidental.", "HideCaret": "Removes the caret from the screen.", "HiliteMenuItem": "Adds or removes highlighting from an item in a menu bar.", "InflateRect": "The InflateRect function increases or decreases the width and height of the specified rectangle.", "InitializeTouchInjection": "Configures the touch injection context for the calling application and initializes the maximum number of simultaneous contacts that the app can inject.", "InjectSyntheticPointerInput": "Simulates pointer input.", "InjectTouchInput": "Simulates touch input.", "InSendMessage": "Determines whether the current window procedure is processing a message that was sent from another thread by a call to the SendMessage function.", "InSendMessageEx": "Determines whether the current window procedure is processing a message that was sent from another thread.", "InsertMenuA": "Inserts a new menu item into a menu, moving other items down the menu.", "InsertMenuItemA": "Inserts a new menu item at the specified position in a menu.", "InsertMenuItemW": "Inserts a new menu item at the specified position in a menu.", "InsertMenuW": "Inserts a new menu item into a menu, moving other items down the menu.", "InternalGetWindowText": "Copies the text of the specified window's title bar into a buffer.", "IntersectRect": "The IntersectRect function calculates the intersection of two source rectangles and places the coordinates of the intersection rectangle into the destination rectangle.", "InvalidateRect": "The InvalidateRect function adds a rectangle to the specified window's update region.", "InvalidateRgn": "The InvalidateRgn function invalidates the client area within the specified region by adding it to the current update region of a window.", "InvertRect": "The InvertRect function inverts a rectangle in a window by performing a logical NOT operation on the color values for each pixel in the rectangle's interior.", "IS_INTRESOURCE": "Determines whether a value is an integer identifier for a resource.", "IS_POINTER_CANCELED_WPARAM": "Checks whether the specified pointer input ended abruptly, or was invalid, indicating the interaction was not completed.", "IS_POINTER_FIFTHBUTTON_WPARAM": "Checks whether the specified pointer took fifth action.", "IS_POINTER_FIRSTBUTTON_WPARAM": "Checks whether the specified pointer took first action.", "IS_POINTER_FLAG_SET_WPARAM": "Checks whether a pointer macro sets the specified flag.", "IS_POINTER_FOURTHBUTTON_WPARAM": "Checks whether the specified pointer took fourth action.", "IS_POINTER_INCONTACT_WPARAM": "Checks whether the specified pointer is in contact.", "IS_POINTER_INRANGE_WPARAM": "Checks whether the specified pointer is in range.", "IS_POINTER_NEW_WPARAM": "Checks whether the specified pointer is a new pointer.", "IS_POINTER_SECONDBUTTON_WPARAM": "Checks whether the specified pointer took second action.", "IS_POINTER_THIRDBUTTON_WPARAM": "Checks whether the specified pointer took third action.", "IsCharAlphaA": "Determines whether a character is an alphabetical character.", "IsCharAlphaNumericA": "Determines whether a character is either an alphabetical or a numeric character.", "IsCharAlphaNumericW": "Determines whether a character is either an alphabetical or a numeric character.", "IsCharAlphaW": "Determines whether a character is an alphabetical character.", "IsCharLowerA": "Determines whether a character is lowercase.", "IsCharLowerW": "", "IsCharUpperA": "Determines whether a character is uppercase.", "IsCharUpperW": "Determines whether a character is uppercase.", "IsChild": "Determines whether a window is a child window or descendant window of a specified parent window.", "IsClipboardFormatAvailable": "Determines whether the clipboard contains data in the specified format.", "IsDialogMessageA": "Determines whether a message is intended for the specified dialog box and, if it is, processes the message.", "IsDialogMessageW": "Determines whether a message is intended for the specified dialog box and, if it is, processes the message.", "IsDlgButtonChecked": "The IsDlgButtonChecked function determines whether a button control is checked or whether a three-state button control is checked, unchecked, or indeterminate.", "IsGUIThread": "Determines whether the calling thread is already a GUI thread.", "IsHungAppWindow": "Determines whether the system considers that a specified application is not responding.", "IsIconic": "Determines whether the specified window is minimized.", "IsImmersiveProcess": "Determines whether the process belongs to a Windows Store app.", "IsMenu": "Determines whether a handle is a menu handle.", "IsMouseInPointerEnabled": "Indicates whether EnableMouseInPointer is set for the mouse to act as a pointer input device and send WM_POINTER messages.", "IsProcessDPIAware": "IsProcessDPIAware may be altered or unavailable.", "IsRectEmpty": "The IsRectEmpty function determines whether the specified rectangle is empty.", "IsTouchWindow": "Checks whether a specified window is touch-capable and, optionally, retrieves the modifier flags set for the window's touch capability.", "IsValidDpiAwarenessContext": "Determines if a specified DPI_AWARENESS_CONTEXT is valid and supported by the current system.", "IsWindow": "Determines whether the specified window handle identifies an existing window.", "IsWindowEnabled": "Determines whether the specified window is enabled for mouse and keyboard input.", "IsWindowUnicode": "Determines whether the specified window is a native Unicode window.", "IsWindowVisible": "Determines the visibility state of the specified window.", "IsWinEventHookInstalled": "Determines whether there is an installed WinEvent hook that might be notified of a specified event.", "IsWow64Message": "Determines whether the last message read from the current thread's queue originated from a WOW64 process.", "IsZoomed": "Determines whether a window is maximized.", "keybd_event": "Synthesizes a keystroke.", "KillTimer": "Destroys the specified timer.", "LoadAcceleratorsA": "Loads the specified accelerator table.", "LoadAcceleratorsW": "Loads the specified accelerator table.", "LoadBitmapA": "The LoadBitmap function loads the specified bitmap resource from a module's executable file.", "LoadBitmapW": "The LoadBitmap function loads the specified bitmap resource from a module's executable file.", "LoadCursorA": "Loads the specified cursor resource from the executable file associated with an application instance.", "LoadCursorFromFileA": "Creates a cursor based on data contained in a file.", "LoadCursorFromFileW": "Creates a cursor based on data contained in a file.", "LoadCursorW": "Loads the specified cursor resource from the executable file associated with an application instance.", "LoadIconA": "Loads the specified icon resource from the executable file associated with an application instance.", "LoadIconW": "Loads the specified icon resource from the executable file associated with an application instance.", "LoadImageA": "Loads an icon, cursor, animated cursor, or bitmap.", "LoadImageW": "Loads an icon, cursor, animated cursor, or bitmap.", "LoadKeyboardLayoutA": "Loads a new input locale identifier into the system.", "LoadKeyboardLayoutW": "Loads a new input locale identifier into the system.", "LoadMenuA": "Loads the specified menu resource from the executable file associated with an application instance.", "LoadMenuIndirectA": "Loads the specified menu template in memory.", "LoadMenuIndirectW": "Loads the specified menu template in memory.", "LoadMenuW": "Loads the specified menu resource from the executable file associated with an application instance.", "LoadStringA": "Loads a string resource from the executable file associated with a specified module, copies the string into a buffer, and appends a terminating null character.", "LoadStringW": "Loads a string resource from the executable file associated with a specified module, copies the string into a buffer, and appends a terminating null character.", "LockSetForegroundWindow": "The foreground process can call the LockSetForegroundWindow function to disable calls to the SetForegroundWindow function.", "LockWindowUpdate": "The LockWindowUpdate function disables or enables drawing in the specified window.", "LockWorkStation": "Locks the workstation's display.", "LogicalToPhysicalPoint": "Converts the logical coordinates of a point in a window to physical coordinates.", "LogicalToPhysicalPointForPerMonitorDPI": "Converts a point in a window from logical coordinates into physical coordinates, regardless of the dots per inch awareness of the caller.", "LookupIconIdFromDirectory": "Searches through icon or cursor data for the icon or cursor that best fits the current display device.", "LookupIconIdFromDirectoryEx": "Searches through icon or cursor data for the icon or cursor that best fits the current display device.", "MAKEINTRESOURCEA": "Converts an integer value to a resource type compatible with the resource-management functions.", "MAKEINTRESOURCEW": "Converts an integer value to a resource type compatible with the resource-management functions.", "MAKELPARAM": "Creates a value for use as an lParam parameter in a message.", "MAKELRESULT": "Creates a value for use as a return value from a window procedure.", "MAKEWPARAM": "Creates a value for use as a wParam parameter in a message.", "MapDialogRect": "Converts the specified dialog box units to screen units.", "MapVirtualKeyA": "Translates a virtual-key code into a scan code or character value, or translates a scan code into a virtual-key code.", "MapVirtualKeyExA": "Translates a virtual-key code into a scan code or character value, or translates a scan code into a virtual-key code.", "MapVirtualKeyExW": "Translates a virtual-key code into a scan code or character value, or translates a scan code into a virtual-key code.", "MapVirtualKeyW": "Translates a virtual-key code into a scan code or character value, or translates a scan code into a virtual-key code.", "MapWindowPoints": "The MapWindowPoints function converts a set of points from a coordinate space relative to one window to a coordinate space relative to another window.", "MenuItemFromPoint": "Determines which menu item, if any, is at the specified location.", "MessageBeep": "Plays a waveform sound.", "MessageBox": "Displays a modal dialog box that contains a system icon, a set of buttons, and a brief application-specific message, such as status or error information.", "MessageBoxA": "Displays a modal dialog box that contains a system icon, a set of buttons, and a brief application-specific message, such as status or error information.", "MessageBoxExA": "Creates, displays, and operates a message box.", "MessageBoxExW": "Creates, displays, and operates a message box.", "MessageBoxIndirectA": "Creates, displays, and operates a message box.", "MessageBoxIndirectW": "Creates, displays, and operates a message box.", "MessageBoxW": "Displays a modal dialog box that contains a system icon, a set of buttons, and a brief application-specific message, such as status or error information.", "ModifyMenuA": "Changes an existing menu item.", "ModifyMenuW": "Changes an existing menu item.", "MonitorFromPoint": "The MonitorFromPoint function retrieves a handle to the display monitor that contains a specified point.", "MonitorFromRect": "The MonitorFromRect function retrieves a handle to the display monitor that has the largest area of intersection with a specified rectangle.", "MonitorFromWindow": "The MonitorFromWindow function retrieves a handle to the display monitor that has the largest area of intersection with the bounding rectangle of a specified window.", "mouse_event": "The mouse_event function synthesizes mouse motion and button clicks.", "MoveWindow": "Changes the position and dimensions of the specified window.", "MsgWaitForMultipleObjects": "Waits until one or all of the specified objects are in the signaled state or the time-out interval elapses.", "MsgWaitForMultipleObjectsEx": "Waits until one or all of the specified objects are in the signaled state, an I / O completion routine or asynchronous procedure call is queued to the thread, or the time-out interval elapses.", "NEXTRAWINPUTBLOCK": "Retrieves the location of the next structure in an array of RAWINPUT structures.", "NotifyWinEvent": "Signals the system that a predefined event occurred.", "OemKeyScan": "Maps OEMASCII codes 0 through 0x0FF into the OEM scan codes and shift states.", "OemToCharA": "Translates a string from the OEM-defined character set into either an ANSI or a wide-character string.", "OemToCharBuffA": "Translates a specified number of characters in a string from the OEM-defined character set into either an ANSI or a wide-character string.", "OemToCharBuffW": "Translates a specified number of characters in a string from the OEM-defined character set into either an ANSI or a wide-character string.", "OemToCharW": "Translates a string from the OEM-defined character set into either an ANSI or a wide-character string.", "OffsetRect": "The OffsetRect function moves the specified rectangle by the specified offsets.", "OpenClipboard": "Opens the clipboard for examination and prevents other applications from modifying the clipboard content.", "OpenDesktopA": "Opens the specified desktop object.", "OpenDesktopW": "Opens the specified desktop object.", "OpenIcon": "Restores a minimized window to its previous size and position; it then activates the window.", "OpenInputDesktop": "Opens the desktop that receives user input.", "OpenWindowStationA": "Opens the specified window station.", "OpenWindowStationW": "Opens the specified window station.", "PackTouchHitTestingProximityEvaluation": "Returns the proximity evaluation score and the adjusted touch-point coordinates as a packed value for the WM_TOUCHHITTESTING callback.", "PaintDesktop": "The PaintDesktop function fills the clipping region in the specified device context with the desktop pattern or wallpaper.", "PeekMessageA": "Dispatches incoming sent messages, checks the thread message queue for a posted message, and retrieves the message.", "PeekMessageW": "Dispatches incoming sent messages, checks the thread message queue for a posted message, and retrieves the message.", "PhysicalToLogicalPoint": "Converts the physical coordinates of a point in a window to logical coordinates.", "PhysicalToLogicalPointForPerMonitorDPI": "Converts a point in a window from physical coordinates into logical coordinates, regardless of the dots per inch awareness of the caller.", "POINTSTOPOINT": "The POINTSTOPOINT macro copies the contents of a POINTS structure into a POINT structure.", "POINTTOPOINTS": "The POINTTOPOINTS macro converts a POINT structure to a POINTS structure.", "PostMessageA": "Places a message in the message queue associated with the thread that created the specified window and returns without waiting for the thread to process the message.", "PostMessageW": "Places a message in the message queue associated with the thread that created the specified window and returns without waiting for the thread to process the message.", "PostQuitMessage": "Indicates to the system that a thread has made a request to terminate.", "PostThreadMessageA": "Posts a message to the message queue of the specified thread.", "PostThreadMessageW": "Posts a message to the message queue of the specified thread.", "PrintWindow": "The PrintWindow function copies a visual window into the specified device context, typically a printer DC.", "PrivateExtractIconsA": "Creates an array of handles to icons that are extracted from a specified file.", "PrivateExtractIconsW": "Creates an array of handles to icons that are extracted from a specified file.", "PtInRect": "The PtInRect function determines whether the specified point lies within the specified rectangle.", "QueryDisplayConfig": "The QueryDisplayConfig function retrieves information about all possible display paths for all display devices, or views, in the current setting.", "RealChildWindowFromPoint": "Retrieves a handle to the child window at the specified point.", "RealGetWindowClassA": "Retrieves a string that specifies the window type.", "RealGetWindowClassW": "Retrieves a string that specifies the window type.", "RedrawWindow": "The RedrawWindow function updates the specified rectangle or region in a window's client area.", "RegisterClassA": "Registers a window class for subsequent use in calls to the CreateWindow or CreateWindowEx function.", "RegisterClassExA": "Registers a window class for subsequent use in calls to the CreateWindow or CreateWindowEx function.", "RegisterClassExW": "Registers a window class for subsequent use in calls to the CreateWindow or CreateWindowEx function.", "RegisterClassW": "Registers a window class for subsequent use in calls to the CreateWindow or CreateWindowEx function.", "RegisterClipboardFormatA": "Registers a new clipboard format.", "RegisterClipboardFormatW": "Registers a new clipboard format.", "RegisterDeviceNotificationA": "Registers the device or type of device for which a window will receive notifications.", "RegisterDeviceNotificationW": "Registers the device or type of device for which a window will receive notifications.", "RegisterHotKey": "Defines a system-wide hot key.", "RegisterPointerDeviceNotifications": "Registers a window to process the WM_POINTERDEVICECHANGE, WM_POINTERDEVICEINRANGE, and WM_POINTERDEVICEOUTOFRANGE pointer device notifications.", "RegisterPointerInputTarget": "Allows the caller to register a target window to which all pointer input of the specified type is redirected.", "RegisterPointerInputTargetEx": "RegisterPointerInputTargetEx may be altered or unavailable.", "RegisterPowerSettingNotification": "Registers the application to receive power setting notifications for the specific power setting event.", "RegisterRawInputDevices": "Registers the devices that supply the raw input data.", "RegisterShellHookWindow": "Registers a specified Shell window to receive certain messages for events or notifications that are useful to Shell applications.", "RegisterSuspendResumeNotification": "Registers to receive notification when the system is suspended or resumed.", "RegisterTouchHitTestingWindow": "Registers a window to process the WM_TOUCHHITTESTING notification.", "RegisterTouchWindow": "Registers a window as being touch-capable.", "RegisterWindowMessageA": "Defines a new window message that is guaranteed to be unique throughout the system.", "RegisterWindowMessageW": "Defines a new window message that is guaranteed to be unique throughout the system.", "ReleaseCapture": "Releases the mouse capture from a window in the current thread and restores normal mouse input processing.", "ReleaseDC": "The ReleaseDC function releases a device context, freeing it for use by other applications.", "RemoveClipboardFormatListener": "Removes the given window from the system-maintained clipboard format listener list.", "RemoveMenu": "Deletes a menu item or detaches a submenu from the specified menu.", "RemovePropA": "Removes an entry from the property list of the specified window.", "RemovePropW": "Removes an entry from the property list of the specified window.", "ReplyMessage": "Replies to a message sent from another thread by the SendMessage function.", "ScreenToClient": "The ScreenToClient function converts the screen coordinates of a specified point on the screen to client-area coordinates.", "ScrollDC": "The ScrollDC function scrolls a rectangle of bits horizontally and vertically.", "ScrollWindow": "The ScrollWindow function scrolls the contents of the specified window's client area.", "ScrollWindowEx": "The ScrollWindowEx function scrolls the contents of the specified window's client area.", "SendDlgItemMessageA": "Sends a message to the specified control in a dialog box.", "SendDlgItemMessageW": "Sends a message to the specified control in a dialog box.", "SendInput": "Synthesizes keystrokes, mouse motions, and button clicks.", "SendMessage": "Sends the specified message to a window or windows.", "SendMessageA": "Sends the specified message to a window or windows.", "SendMessageCallbackA": "Sends the specified message to a window or windows.", "SendMessageCallbackW": "Sends the specified message to a window or windows.", "SendMessageTimeoutA": "Sends the specified message to one or more windows.", "SendMessageTimeoutW": "Sends the specified message to one or more windows.", "SendMessageW": "Sends the specified message to a window or windows.", "SendNotifyMessageA": "Sends the specified message to a window or windows.", "SendNotifyMessageW": "Sends the specified message to a window or windows.", "SetActiveWindow": "Activates a window.", "SetCapture": "Sets the mouse capture to the specified window belonging to the current thread.", "SetCaretBlinkTime": "Sets the caret blink time to the specified number of milliseconds.", "SetCaretPos": "Moves the caret to the specified coordinates.", "SetClassLongA": "Replaces the specified 32-bit value at the specified offset into the extra class memory or the WNDCLASSEX structure for the class to which the specified window belongs.", "SetClassLongPtrA": "Replaces the specified value at the specified offset in the extra class memory or the WNDCLASSEX structure for the class to which the specified window belongs.", "SetClassLongPtrW": "Replaces the specified value at the specified offset in the extra class memory or the WNDCLASSEX structure for the class to which the specified window belongs.", "SetClassLongW": "Replaces the specified 32-bit value at the specified offset into the extra class memory or the WNDCLASSEX structure for the class to which the specified window belongs.", "SetClassWord": "Replaces the 16-bit value at the specified offset into the extra class memory for the window class to which the specified window belongs.", "SetClipboardData": "Places data on the clipboard in a specified clipboard format.", "SetClipboardViewer": "Adds the specified window to the chain of clipboard viewers.", "SetCoalescableTimer": "Creates a timer with the specified time-out value and coalescing tolerance delay.", "SetCursor": "Sets the cursor shape.", "SetCursorPos": "Moves the cursor to the specified screen coordinates.", "SetDialogControlDpiChangeBehavior": "Overrides the default per-monitor DPI scaling behavior of a child window in a dialog.", "SetDialogDpiChangeBehavior": "Dialogs in Per-Monitor v2 contexts are automatically DPI scaled.", "SetDisplayAutoRotationPreferences": "Sets the screen auto-rotation preferences for the current process.", "SetDisplayConfig": "The SetDisplayConfig function modifies the display topology, source, and target modes by exclusively enabling the specified paths in the current session.", "SetDlgItemInt": "Sets the text of a control in a dialog box to the string representation of a specified integer value.", "SetDlgItemTextA": "Sets the title or text of a control in a dialog box.", "SetDlgItemTextW": "Sets the title or text of a control in a dialog box.", "SetDoubleClickTime": "Sets the double-click time for the mouse.", "SetFocus": "Sets the keyboard focus to the specified window.", "SetForegroundWindow": "Brings the thread that created the specified window into the foreground and activates the window.", "SetGestureConfig": "Configures the messages that are sent from a window for Windows Touch gestures.", "SetKeyboardState": "Changes made to this table do not affect keyboard input to any other thread.", "SetLastErrorEx": "Sets the last-error code.", "SetLayeredWindowAttributes": "Sets the opacity and transparency color key of a layered window.", "SetMenu": "Assigns a new menu to the specified window.", "SetMenuContextHelpId": "Associates a Help context identifier with a menu.", "SetMenuDefaultItem": "Sets the default menu item for the specified menu.", "SetMenuInfo": "Sets information for a specified menu.", "SetMenuItemBitmaps": "Associates the specified bitmap with a menu item.", "SetMenuItemInfoA": "Changes information about a menu item.", "SetMenuItemInfoW": "Changes information about a menu item.", "SetMessageExtraInfo": "Sets the extra message information for the current thread.", "SetParent": "Changes the parent window of the specified child window.", "SetPhysicalCursorPos": "Sets the position of the cursor in physical coordinates.", "SetProcessDefaultLayout": "Changes the default layout when windows are created with no parent or owner only for the currently running process.", "SetProcessDPIAware": "SetProcessDPIAware may be altered or unavailable.", "SetProcessDpiAwarenessContext": "Sets the current process to a specified dots per inch awareness context.", "SetProcessRestrictionExemption": "Exempts the calling process from restrictions preventing desktop processes from interacting with the Windows Store app environment.", "SetProcessWindowStation": "Assigns the specified window station to the calling process.", "SetPropA": "Adds a new entry or changes an existing entry in the property list of the specified window.", "SetPropW": "Adds a new entry or changes an existing entry in the property list of the specified window.", "SetRect": "The SetRect function sets the coordinates of the specified rectangle.", "SetRectEmpty": "The SetRectEmpty function creates an empty rectangle in which all coordinates are set to zero.", "SetScrollInfo": "The SetScrollInfo function sets the parameters of a scroll bar, including the minimum and maximum scrolling positions, the page size, and the position of the scroll box.", "SetScrollPos": "The SetScrollPos function sets the position of the scroll box in the specified scroll bar and, if requested, redraws the scroll bar to reflect the new position of the scroll box.", "SetScrollRange": "The SetScrollRange function sets the minimum and maximum scroll box positions for the specified scroll bar.", "SetSysColors": "Sets the colors for the specified display elements.", "SetSystemCursor": "Enables an application to customize the system cursors.", "SetThreadCursorCreationScaling": "Sets the DPI scale for which the cursors being created on this thread are intended.", "SetThreadDesktop": "Assigns the specified desktop to the calling thread.", "SetThreadDpiAwarenessContext": "Set the DPI awareness for the current thread to the provided value.", "SetThreadDpiHostingBehavior": "Sets the thread's DPI_HOSTING_BEHAVIOR.", "SetTimer": "Creates a timer with the specified time-out value.", "SetUserObjectInformationA": "Sets information about the specified window station or desktop object.", "SetUserObjectInformationW": "Sets information about the specified window station or desktop object.", "SetUserObjectSecurity": "Sets the security of a user object.", "SetWindowContextHelpId": "Associates a Help context identifier with the specified window.", "SetWindowDisplayAffinity": "Stores the display affinity setting in kernel mode on the hWnd associated with the window.", "SetWindowFeedbackSetting": "Sets the feedback configuration for a window.", "SetWindowLongA": "Changes an attribute of the specified window.", "SetWindowLongPtrA": "Changes an attribute of the specified window.", "SetWindowLongPtrW": "Changes an attribute of the specified window.", "SetWindowLongW": "Changes an attribute of the specified window.", "SetWindowPlacement": "Sets the show state and the restored, minimized, and maximized positions of the specified window.", "SetWindowPos": "Changes the size, position, and Z order of a child, pop-up, or top-level window.", "SetWindowRgn": "The SetWindowRgn function sets the window region of a window.", "SetWindowsHookExA": "Installs an application-defined hook procedure into a hook chain.", "SetWindowsHookExW": "Installs an application-defined hook procedure into a hook chain.", "SetWindowTextA": "Changes the text of the specified window's title bar.", "SetWindowTextW": "Changes the text of the specified window's title bar.", "SetWinEventHook": "Sets an event hook function for a range of events.", "ShowCaret": "Makes the caret visible on the screen at the caret's current position.", "ShowCursor": "Displays or hides the cursor.", "ShowOwnedPopups": "Shows or hides all pop-up windows owned by the specified window.", "ShowScrollBar": "The ShowScrollBar function shows or hides the specified scroll bar.", "ShowWindow": "Sets the specified window's show state.", "ShowWindowAsync": "Sets the show state of a window without waiting for the operation to complete.", "ShutdownBlockReasonCreate": "Indicates that the system cannot be shut down and sets a reason string to be displayed to the user if system shutdown is initiated.", "ShutdownBlockReasonDestroy": "Indicates that the system can be shut down and frees the reason string.", "ShutdownBlockReasonQuery": "Retrieves the reason string set by the ShutdownBlockReasonCreate function.", "SkipPointerFrameMessages": "Determines which pointer input frame generated the most recently retrieved message for the specified pointer and discards any queued pointer input messages generated from the same pointer input frame.", "SoundSentry": "Triggers a visual signal to indicate that a sound is playing.", "SubtractRect": "The SubtractRect function determines the coordinates of a rectangle formed by subtracting one rectangle from another.", "SwapMouseButton": "Reverses or restores the meaning of the left and right mouse buttons.", "SwitchDesktop": "Makes the specified desktop visible and activates it.", "SwitchToThisWindow": "Switches focus to the specified window and brings it to the foreground.", "SystemParametersInfoA": "Retrieves or sets the value of one of the system-wide parameters.", "SystemParametersInfoForDpi": "Retrieves the value of one of the system-wide parameters, taking into account the provided DPI value.", "SystemParametersInfoW": "Retrieves or sets the value of one of the system-wide parameters.", "TabbedTextOutA": "The TabbedTextOut function writes a character string at a specified location, expanding tabs to the values specified in an array of tab-stop positions.", "TabbedTextOutW": "The TabbedTextOut function writes a character string at a specified location, expanding tabs to the values specified in an array of tab-stop positions.", "TileWindows": "Tiles the specified child windows of the specified parent window.", "ToAscii": "Translates the specified virtual-key code and keyboard state to the corresponding character or characters.", "ToAsciiEx": "Translates the specified virtual-key code and keyboard state to the corresponding character or characters.", "TOUCH_COORD_TO_PIXEL": "Converts touch coordinates to pixels.", "ToUnicode": "Translates the specified virtual-key code and keyboard state to the corresponding Unicode character or characters.", "ToUnicodeEx": "Translates the specified virtual-key code and keyboard state to the corresponding Unicode character or characters.", "TrackMouseEvent": "Posts messages when the mouse pointer leaves a window or hovers over a window for a specified amount of time.", "TrackPopupMenu": "Displays a shortcut menu at the specified location and tracks the selection of items on the menu.", "TrackPopupMenuEx": "Displays a shortcut menu at the specified location and tracks the selection of items on the shortcut menu.", "TranslateAcceleratorA": "Processes accelerator keys for menu commands.", "TranslateAcceleratorW": "Processes accelerator keys for menu commands.", "TranslateMDISysAccel": "Processes accelerator keystrokes for window menu commands of the multiple-document interface child windows associated with the specified MDI client window.", "TranslateMessage": "Translates virtual-key messages into character messages.", "UnhookWindowsHookEx": "Removes a hook procedure installed in a hook chain by the SetWindowsHookEx function.", "UnhookWinEvent": "Removes an event hook function created by a previous call to SetWinEventHook.", "UnionRect": "The UnionRect function creates the union of two rectangles.", "UnloadKeyboardLayout": "Unloads an input locale identifier.", "UnregisterClassA": "Unregisters a window class, freeing the memory required for the class.", "UnregisterClassW": "Unregisters a window class, freeing the memory required for the class.", "UnregisterDeviceNotification": "Closes the specified device notification handle.", "UnregisterHotKey": "Frees a hot key previously registered by the calling thread.", "UnregisterPointerInputTarget": "Allows the caller to unregister a target window to which all pointer input of the specified type is redirected.", "UnregisterPointerInputTargetEx": "UnregisterPointerInputTargetEx may be altered or unavailable.", "UnregisterPowerSettingNotification": "Unregisters the power setting notification.", "UnregisterSuspendResumeNotification": "Cancels a registration to receive notification when the system is suspended or resumed.", "UnregisterTouchWindow": "Registers a window as no longer being touch-capable.", "UpdateLayeredWindow": "Updates the position, size, shape, content, and translucency of a layered window.", "UpdateWindow": "The UpdateWindow function updates the client area of the specified window by sending a WM_PAINT message to the window if the window's update region is not empty.", "UserHandleGrantAccess": "Grants or denies access to a handle to a User object to a job that has a user-interface restriction.", "ValidateRect": "The ValidateRect function validates the client area within a rectangle by removing the rectangle from the update region of the specified window.", "ValidateRgn": "The ValidateRgn function validates the client area within a region by removing the region from the current update region of the specified window.", "VkKeyScanA": "Translates a character to the corresponding virtual-key code and shift state for the current keyboard.", "VkKeyScanExA": "Translates a character to the corresponding virtual-key code and shift state.", "VkKeyScanExW": "Translates a character to the corresponding virtual-key code and shift state.", "VkKeyScanW": "Translates a character to the corresponding virtual-key code and shift state for the current keyboard.", "WaitForInputIdle": "Waits until the specified process has finished processing its initial input and is waiting for user input with no input pending, or until the time-out interval has elapsed.", "WaitMessage": "Yields control to other threads when a thread has no other messages in its message queue.", "WindowFromDC": "The WindowFromDC function returns a handle to the window associated with the specified display device context.", "WindowFromPhysicalPoint": "Retrieves a handle to the window that contains the specified physical point.", "WindowFromPoint": "Retrieves a handle to the window that contains the specified point.", "WinHelpA": "Launches Windows Help and passes additional data that indicates the nature of the help requested by the application.", "WinHelpW": "Launches Windows Help and passes additional data that indicates the nature of the help requested by the application.", "wsprintfA": "Writes formatted data to the specified buffer.", "wsprintfW": "Writes formatted data to the specified buffer.", "wvsprintfA": "Writes formatted data to the specified buffer using a pointer to a list of arguments.", "wvsprintfW": "Writes formatted data to the specified buffer using a pointer to a list of arguments."}