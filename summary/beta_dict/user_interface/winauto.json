{"accDoDefaultAction": "The IAccessible::accDoDefaultAction method performs the specified object's default action.", "AccessibleChildren": "Retrieves the child ID or IDispatch of each child within an accessible container object.", "AccessibleObjectFromEvent": "Retrieves the address of the IAccessible interface for the object that generated the event that is currently being processed by the client's event hook function.", "AccessibleObjectFromID": "The AccessibleObjectFromID method retrieves an IAccessibleinterface pointer for the interface associated with the given object ID.", "AccessibleObjectFromPoint": "Retrieves the address of the IAccessible interface pointer for the object displayed at a specified point on the screen.", "AccessibleObjectFromWindow": "Retrieves the address of the specified interface for the object associated with the specified window.", "accHitTest": "The IAccessible::accHitTest method retrieves the child element or child object that is displayed at a specific point on the screen.", "accLocation": "All visual objects must support this method.", "accNavigate": "The IAccessible::accNavigate method traverses to another UI element within a container and retrieves the object.", "AccNotifyTouchInteraction": "Allows an assistive technology as a result of a touch gesture from the user.", "accSelect": "All objects that support selection or receive the keyboard focus must support this method.", "AccSetRunningUtilityState": "Sets system values that indicate whether an assistive technology application's current state affects functionality that is typically provided by the system.", "AcquireObjectIdRange": "Acquires a range of object IDs from the control host and marks them as reserved by a specific windowless control.", "AddActiveTextPositionChangedEventHandler": "Registers a method that handles when the active text position changes.", "AddAutomationEvent": "Raises a Microsoft UI Automation event.", "AddAutomationEventHandler": "Registers a method that handles Microsoft UI Automation events.", "AddAutomationPropertyChangedEvent": "Raises a property-changed event.", "AddChangesEventHandler": "Registers a method that handles change events.", "AddEventHandlerGroup": "Registers a collection of event handler methods specified with the CreateEventHandlerGroup.", "AddFocusChangedEventHandler": "Note\u00c2 \u00a0 \u00c2 \u00a0 Before implementing an event handler, you should be familiar with the threading issues described in Understanding Threading Issues.", "AddNotificationEventHandler": "Registers a method that handles notification events.", "AddPattern": "Adds a control pattern to the cache request.", "AddProperty": "Adds a property to the cache request.", "AddPropertyChangedEventHandler": "Registers a method that handles a property-changed event.", "AddPropertyChangedEventHandlerNativeArray": "Registers a method that handles a native array of property-changed events.", "AddStructureChangedEvent": "Raises an event to notify clients that the structure of the UI Automation tree has changed.", "AddStructureChangedEventHandler": "Registers a method that handles structure-changed events.", "AddTextEditTextChangedEventHandler": "Registers a method that handles programmatic text-edit events.", "AddToSelection": "Adds the text range to the collection of selected text ranges in a control that supports multiple, disjoint spans of selected text.", "AdviseEventAdded": "Notifies the Microsoft UI Automation provider when a UI Automation client begins listening for a specific event, including a property-changed event.", "AdviseEventRemoved": "Notifies the Microsoft UI Automation provider when a UI Automation client stops listening for a specific event, including a property-changed event.", "BuildUpdatedCache": "Retrieves a new UI Automation element with an updated cache.", "CallMethod": "Client wrapper implements methods by calling this CallMethod function, specifying the parameters as an array of pointers.", "Cancel": "Causes the Microsoft UI Automation provider to stop listening for mouse or keyboard input.", "CheckNotSupported": "Checks a provided VARIANT to see if it contains the Not Supported identifier.", "ClearHmenuProps": "This method wraps ClearProps, and provides a convenient entry point for callers who are annotating HMENU-based accessible elements.", "ClearHwndProps": "This method wraps SetPropValue, SetPropServer, and ClearProps, and provides a convenient entry point for callers who are annotating HWND-based accessible elements.", "ClearProps": "Servers use ClearProps to restore default values to properties of accessible elements that they had previously annotated.", "ClearTable": "Removes all entries from the proxy factory table.", "Clone": "Retrieves a new IUIAutomationTextRange identical to the original and inheriting all properties of the original.", "Close": "Closes the window.", "CoCreateLocally": "Clients call ICoCreateLocally::CoCreateLocally to create a helper object in the same context as the server object.", "Collapse": "Hides all child nodes, controls, or content of the element.", "Compare": "Retrieves a value that specifies whether this text range has the same endpoints as another text range.", "CompareElements": "Compares two UI Automation elements to determine whether they represent the same underlying UI element.", "CompareEndpoints": "Retrieves a value that specifies whether the start or end endpoint of this text range is the same as the start or end endpoint of another text range.", "CompareRuntimeIds": "Compares two integer arrays containing run-time identifiers to determine whether their content is the same and they belong to the same UI element.", "ComposeHmenuIdentityString": "Callers use ComposeHmenuIdentityString to retrieve an identity string for an HMENU-based accessible element.", "ComposeHwndIdentityString": "Callers use ComposeHwndIdentityString to retrieve an identity string.", "ConvertReturnedElement": "Retrieves the IAccessibleEx interface of an element returned as a property value.", "ConvertValueToString": "Clients call the IAccDictionary::ConvertValueToString method to convert a value to a localized string.", "CreateAndCondition": "Creates a condition that selects elements that match both of two conditions.", "CreateAndConditionFromArray": "Creates a condition that selects elements based on multiple conditions, all of which must be true.", "CreateAndConditionFromNativeArray": "Creates a condition that selects elements from a native array, based on multiple conditions that must all be true.", "CreateCacheRequest": "Creates a cache request.", "CreateClientWrapper": "Creates an object that enables a client application to interact with a custom control pattern.", "CreateEventHandlerGroup": "Registers one or more event listeners in a single method call.", "CreateFalseCondition": "Creates a condition that is always false.", "CreateNotCondition": "Creates a condition that is the negative of a specified condition.", "CreateOrCondition": "Creates a combination of two conditions where a match exists if either of the conditions is true.", "CreateOrConditionFromArray": "Creates a combination of two or more conditions where a match exists if any of the conditions is true.", "CreateOrConditionFromNativeArray": "Creates a combination of two or more conditions where a match exists if any one of the conditions is true.", "CreatePropertyCondition": "Creates a condition that selects elements that have a property with the specified value.", "CreatePropertyConditionEx": "Creates a condition that selects elements that have a property with the specified value, using optional flags.", "CreateProvider": "Creates a proxy object that provides Microsoft UI Automation support for a UI element.", "CreateProxyFactoryEntry": "Creates a new instance of a proxy factory object.", "CreateStdAccessibleObject": "Creates an accessible object with the methods and properties of the specified type of system-provided user interface element.", "CreateStdAccessibleProxyA": "Creates an accessible object that has the properties and methods of the specified class of system-provided user interface element.", "CreateStdAccessibleProxyW": "Creates an accessible object that has the properties and methods of the specified class of system-provided user interface element.", "CreateTreeWalker": "Retrieves a tree walker object that can be used to traverse the Microsoft UI Automation tree.", "CreateTrueCondition": "Retrieves a predefined condition that selects all elements.", "DecomposeHmenuIdentityString": "Use this method to determine the HMENU, object ID, and child ID for the accessible element identified by the identity string.", "DecomposeHwndIdentityString": "Use this method to determine the HWND, object ID, and child ID for the accessible element identified by the identity string.", "Dispatch": "Dispatches a method or property getter to a custom control pattern provider.", "DockPattern_SetDockPosition": "Docks the UI Automation element at the requested dockPosition within a docking container.", "DoDefaultAction": "Performs the Microsoft Active Accessibility default action for the element.", "ElementFromHandle": "Retrieves a UI Automation element for the specified window.", "ElementFromHandleBuildCache": "Retrieves a UI Automation element for the specified window, prefetches the requested properties and control patterns, and stores the prefetched items in the cache.", "ElementFromIAccessible": "Retrieves a UI Automation element for the specified accessible object from a Microsoft Active Accessibility server.", "ElementFromIAccessibleBuildCache": "Retrieves a UI Automation element for the specified accessible object from a Microsoft Active Accessibility server, prefetches the requested properties and control patterns, and stores the prefetched items in the cache.", "ElementFromPoint": "Retrieves the UI Automation element at the specified point on the desktop.", "ElementFromPointBuildCache": "Retrieves the UI Automation element at the specified point on the desktop, prefetches the requested properties and control patterns, and stores the prefetched items in the cache.", "ElementProviderFromPoint": "Retrieves the provider of the element that is at the specified point in this fragment.", "Expand": "Displays all child nodes, controls, or content of the element.", "ExpandCollapsePattern_Collapse": "Hides all descendant nodes, controls, or content of the UI Automation element.", "ExpandCollapsePattern_Expand": "Expands a control on the screen so that it shows more information.", "ExpandToEnclosingUnit": "The range is expanded if it is smaller than the specified unit, or shortened if it is longer than the specified unit.", "FindAll": "Returns all UI Automation elements that satisfy the specified condition.", "FindAllBuildCache": "Returns all UI Automation elements that satisfy the specified condition, prefetches the requested properties and control patterns, and stores the prefetched items in the cache.", "FindAllWithOptions": "Find all matching elements in the specified order.", "FindAllWithOptionsBuildCache": "Finds all matching elements in the specified order, but also caches their properties and patterns.", "FindAttribute": "Retrieves a text range subset that has the specified text attribute value.", "FindFirst": "Retrieves the first child or descendant element that matches the specified condition.", "FindFirstBuildCache": "Retrieves the first child or descendant element that matches the specified condition, prefetches the requested properties and control patterns, and stores the prefetched items in the cache.", "FindFirstWithOptions": "Finds the first matching element in the specified order.", "FindFirstWithOptionsBuildCache": "Finds the first matching element in the specified order, but also caches its properties and pattern.", "FindItemByProperty": "Retrieves an element within a containing element, based on a specified property value.", "FindText": "Retrieves a text range subset that contains the specified text.", "get_accChild": "The IAccessible::get_accChild method retrieves an IDispatch for the specified child, if one exists.", "get_accChildCount": "The IAccessible::get_accChildCount method retrieves the number of children that belong to this object.", "get_accDefaultAction": "The IAccessible::get_accDefaultAction method retrieves a string that indicates the object's default action.", "get_accDescription": "The IAccessible::get_accDescription method retrieves a string that describes the visual appearance of the specified object.", "get_accFocus": "The IAccessible::get_accFocus method retrieves the object that has the keyboard focus.", "get_accHelp": "The IAccessible::get_accHelp method retrieves the Help property string of an object.", "get_accHelpTopic": "The IAccessible::get_accHelpTopic method retrieves the full path of the WinHelp file that is associated with the specified object; it also retrieves the identifier of the appropriate topic within that file.", "get_accKeyboardShortcut": "The IAccessible::get_accKeyboardShortcut method retrieves the specified object's shortcut key or access key, also known as the mnemonic.", "get_accName": "The IAccessible::get_accName method retrieves the name of the specified object.", "get_accParent": "The IAccessible::get_accParent method retrieves the IDispatch of the object's parent.", "get_accRole": "The IAccessible::get_accRole method retrieves information that describes the role of the specified object.", "get_accSelection": "All objects that support selection must support this property.", "get_accState": "The IAccessible::get_accState method retrieves the current state of the specified object.", "get_accValue": "The IAccessible::get_accValue method retrieves the value of the specified object.", "get_AllowSubstringMatch": "Sets or retrieves a value that specifies whether the proxy allows substring matching.", "get_AnnotationTypeId": "The annotation type identifier of this annotation.", "get_AnnotationTypeName": "The name of this annotation type.", "get_Author": "The name of the annotation author.", "get_AutomationElementMode": "Indicates whether returned elements contain full references to the underlying UI, or only cached information.", "get_AutoSetFocus": "Specifies whether calls to UI Automation control pattern methods automatically set focus to the target element.", "get_BooleanValue": "Retrieves the value of the condition:_either TRUE or FALSE.", "get_BoundingRectangle": "Specifies the bounding rectangle of this element.", "get_CachedAcceleratorKey": "Retrieves the cached accelerator key for the element.", "get_CachedAccessKey": "Retrieves the cached access key character for the element.", "get_CachedAnnotationObjects": "Returns the cached list of annotation objects associated with this element, such as comment, header, footer, and so on.", "get_CachedAnnotationTypeId": "Retrieves a cached value that identifies this annotation's type.", "get_CachedAnnotationTypeName": "Retrieves the cached localized name of this annotation's type.", "get_CachedAnnotationTypes": "Returns the cached list of annotation types associated with this element, such as comment, header, footer, and so on.", "get_CachedAriaProperties": "Retrieves the cached Accessible Rich Internet Applications properties of the element.", "get_CachedAriaRole": "Retrieves the cached Accessible Rich Internet Applications role of the element.", "get_CachedAuthor": "Retrieves the cached name of the annotation author.", "get_CachedAutomationId": "Retrieves the cached Microsoft UI Automation identifier of the element.", "get_CachedBoundingRectangle": "Retrieves the cached coordinates of the rectangle that completely encloses the element.", "get_CachedCanMaximize": "Retrieves a cached value that indicates whether the window can be maximized.", "get_CachedCanMinimize": "Retrieves a cached value that indicates whether the window can be minimized.", "get_CachedCanMove": "Retrieves a cached value that indicates whether the element can be moved.", "get_CachedCanResize": "Retrieves a cached value that indicates whether the element can be resized.", "get_CachedCanRotate": "Retrieves a cached value that indicates whether the element can be rotated.", "get_CachedCanSelectMultiple": "Retrieves a cached value that indicates whether more than one item in the container can be selected at one time.", "get_CachedCanZoom": "Retrieves a cached value that indicates whether the control supports zooming of its viewport.", "get_CachedChildId": "Retrieves the cached Microsoft Active Accessibility child identifier for the element.", "get_CachedClassName": "Retrieves the cached class name of the element.", "get_CachedColumn": "Retrieves the cached zero-based index of the column that contains the grid item.", "get_CachedColumnCount": "Retrieves the cached number of columns in the grid.", "get_CachedColumnSpan": "Retrieves the cached number of columns spanned by the grid item.", "get_CachedContainingGrid": "Retrieves the cached element that contains the grid item.", "get_CachedControllerFor": "Retrieves a cached array of UI Automation elements for which this element serves as the controller.", "get_CachedControlType": "Retrieves a cached value that indicates the control type of the element.", "get_CachedCulture": "Retrieves a cached value that indicates the culture associated with the element.", "get_CachedCurrentSelectedItem": "Gets a cached IUIAutomationElement object representing the currently selected item.", "get_CachedCurrentView": "Retrieves the cached control-specific identifier of the current view of the control.", "get_CachedDateTime": "Retrieves the cached date and time that this annotation was created.", "get_CachedDefaultAction": "Retrieves the Microsoft Active Accessibility cached default action for the element.", "get_CachedDescribedBy": "Retrieves a cached array of elements that describe this element.", "get_CachedDescription": "Retrieves the cached Microsoft Active Accessibility description of the element.", "get_CachedDockPosition": "Retrieves the cached dock position of this element within its docking container.", "get_CachedDropEffect": "Retrieves a cached localized string that indicates what happens when the user drops this element as part of a drag-and-drop operation.", "get_CachedDropEffects": "Retrieves a cached array of localized strings that enumerate the full set of effects that can happen when the user drops this element as part of a drag-and-drop operation.", "get_CachedDropTargetEffect": "Retrieves a cached localized string that describes what happens when the user drops the grabbed element on this drop target.", "get_CachedDropTargetEffects": "Retrieves a cached array of localized strings that enumerate the full set of effects that can happen when the user drops a grabbed element on this drop target as part of a drag-and-drop operation.", "get_CachedExpandCollapseState": "Retrieves a cached value that indicates the state, expanded or collapsed, of the element.", "get_CachedExtendedProperties": "Retrieves a cached localized string that contains the list of extended properties for an element in a document.", "get_CachedFillColor": "Retrieves the cached fill color of an element in a document.", "get_CachedFillPatternColor": "Retrieves the cached color of the pattern used to fill an element in a document.", "get_CachedFirstSelectedItem": "Gets a cached IUIAutomationElement object representing the first item in a group of selected items.", "get_CachedFlowsFrom": "Retrieves a cached array of elements that indicate the reading order before the current element.", "get_CachedFlowsTo": "Retrieves a cached array of elements that indicate the reading order after the current element.", "get_CachedFormula": "Retrieves the cached formula for this cell.", "get_CachedFrameworkId": "Retrieves the cached name of the underlying UI framework associated with the element.", "get_CachedFullDescription": "Gets the cached full description of the automation element.", "get_CachedHasKeyboardFocus": "A cached value that indicates whether the element has keyboard focus.", "get_CachedHeadingLevel": "Gets the cached heading level of the automation element.", "get_CachedHelp": "Retrieves the cached Microsoft Active Accessibility help string for the element.", "get_CachedHelpText": "Retrieves the cached help text for the element.", "get_CachedHorizontallyScrollable": "Retrieves a cached value that indicates whether the element can scroll horizontally.", "get_CachedHorizontalScrollPercent": "Retrieves the cached horizontal scroll position.", "get_CachedHorizontalViewSize": "Retrieves the cached horizontal size of the viewable region of a scrollable element.", "get_CachedIsContentElement": "A cached value that indicates whether the element is a content element.", "get_CachedIsControlElement": "Retrieves a cached value that indicates whether the element is a control element.", "get_CachedIsDataValidForForm": "Retrieves a cached value that indicates whether the element contains valid data for the form.", "get_CachedIsDialog": "Retrieves the cached is dialog window indicator for the element.", "get_CachedIsEnabled": "Retrieves a cached value that indicates whether the element is enabled.", "get_CachedIsGrabbed": "Retrieves a cached value that indicates whether this element has been grabbed as part of a drag-and-drop operation.", "get_CachedIsKeyboardFocusable": "Retrieves a cached value that indicates whether the element can accept keyboard focus.", "get_CachedIsModal": "Retrieves a cached value that indicates whether the window is modal.", "get_CachedIsOffscreen": "Retrieves a cached value that indicates whether the element is off-screen.", "get_CachedIsPassword": "Retrieves a cached value that indicates whether the element contains a disguised password.", "get_CachedIsPeripheral": "Retrieves the cached peripheral UI indicator for the element.", "get_CachedIsReadOnly": "Retrieves a cached value that indicates whether the value of the element is read-only.", "get_CachedIsRequiredForForm": "Retrieves a cached value that indicates whether the element is required to be filled out on a form.", "get_CachedIsSelected": "A cached value that indicates whether this item is selected.", "get_CachedIsSelectionRequired": "Retrieves a cached value that indicates whether at least one item must be selected at all times.", "get_CachedIsTopmost": "Retrieves a cached value that indicates whether the window is the topmost element in the z-order.", "get_CachedItemCount": "Gets a cached integer value indicating the number of selected items.", "get_CachedItemStatus": "Retrieves a cached description of the status of an item within an element.", "get_CachedItemType": "Retrieves a cached string that describes the type of item represented by the element.", "get_CachedKeyboardShortcut": "Retrieves the cached Microsoft Active Accessibility keyboard shortcut property for the element.", "get_CachedLabeledBy": "Retrieves the cached element that contains the text label for this element.", "get_CachedLandmarkType": "Gets the cached landmark type ID for the automation element.", "get_CachedLargeChange": "Retrieves, from the cache, the value that is added to or subtracted from the value of the control when a large change is made, such as when the PAGE DOWN key is pressed.", "get_CachedLastSelectedItem": "Gets a cached IUIAutomationElement object representing the last item in a group of selected items.", "get_CachedLevel": "Returns the cached 1-based integer for the level for the element.", "get_CachedLiveSetting": "Retrieves a cached value that indicates the type of notifications, if any, that the element sends when the content of the element changes.", "get_CachedLocalizedControlType": "Retrieves the cached localized description of the control type of the element.", "get_CachedLocalizedLandmarkType": "Gets a string containing the cached localized landmark type for the automation element.", "get_CachedMaximum": "Retrieves the cached maximum value of the control.", "get_CachedMinimum": "Retrieves the cached minimum value of the control.", "get_CachedName": "Retrieves the cached Microsoft Active Accessibility name property of the element.", "get_CachedNativeWindowHandle": "Retrieves the cached window handle of the element.", "get_CachedOptimizeForVisualContent": "Retrieves a cached value that indicates whether the provider exposes only elements that are visible.", "get_CachedOrientation": "Retrieves a cached value that indicates the orientation of the element.", "get_CachedPositionInSet": "Returns the cached 1-based integer for the ordinal position in the set for the element.", "get_CachedProcessId": "Retrieves the cached ID of the process that hosts the element.", "get_CachedProviderDescription": "Retrieves a cached description of the provider for this element.", "get_CachedRole": "Retrieves the cached Microsoft Active Accessibility role of the element.", "get_CachedRow": "Retrieves the cached zero-based index of the row that contains the item.", "get_CachedRowCount": "Retrieves the cached number of rows in the grid.", "get_CachedRowOrColumnMajor": "Retrieves the cached primary direction of traversal for the table.", "get_CachedRowSpan": "Retrieves the cached number of rows spanned by a grid item.", "get_CachedSelectionContainer": "Retrieves the cached element that supports IUIAutomationSelectionPattern and acts as the container for this item.", "get_CachedShape": "Retrieves the cached shape of an element in a document.", "get_CachedSizeOfSet": "Returns the cached 1-based integer for the size of the set where the element is located.", "get_CachedSmallChange": "Retrieves, from the cache, the value that is added to or subtracted from the value of the control when a small change is made, such as when an arrow key is pressed.", "get_CachedState": "Retrieves the cached Microsoft Active Accessibility state identifier for the element.", "get_CachedStyleId": "Retrieves the cached identifier of the visual style associated with an element in a document.", "get_CachedStyleName": "Retrieves the cached name of the visual style associated with an element in a document.", "get_CachedTarget": "Retrieves the cached element that is being annotated.", "get_CachedToggleState": "Retrieves the cached state of the control.", "get_CachedValue": "Retrieves the cached value of the element.", "get_CachedVerticallyScrollable": "Retrieves a cached value that indicates whether the element can scroll vertically.", "get_CachedVerticalScrollPercent": "Retrieves the cached vertical scroll position.", "get_CachedVerticalViewSize": "Retrieves the cached vertical size of the viewable region of a scrollable element.", "get_CachedWindowInteractionState": "Retrieves a cached value that indicates the current state of the window for the purposes of user interaction.", "get_CachedWindowVisualState": "Retrieves a cached value that indicates the visual state of the window; that is, whether it is in the normal, maximized, or minimized state.", "get_CachedZoomLevel": "Retrieves the cached zoom level of the control's viewport.", "get_CachedZoomMaximum": "Retrieves the cached maximum zoom level of the control's viewport.", "get_CachedZoomMinimum": "Retrieves the cached minimum zoom level of the control's viewport.", "get_CanCheckBaseClass": "Sets or retrieves a value that specifies whether the base class can be checked when searching for a proxy factory.", "get_CanMaximize": "Indicates whether the window can be maximized.", "get_CanMinimize": "Indicates whether the window can be minimized.", "get_CanMove": "Indicates whether the control can be moved.", "get_CanResize": "Indicates whether the control can be resized.", "get_CanRotate": "Indicates whether the control can be rotated.", "get_CanSelectMultiple": "Indicates whether the Microsoft UI Automation provider allows more than one child element to be selected concurrently.", "get_CanZoom": "Indicates whether the control supports zooming of its viewport.", "get_ChildCount": "Retrieves the number of conditions that make up this \"or\" condition.", "get_ChildId": "Specifies the child identifier of this element.", "get_ClassName": "Sets or retrieves the name of the window class served by the proxy factory.", "get_CoalesceEvents": "Gets or sets whether an accessible technology client receives all events, or a subset where duplicate events are detected and filtered.", "get_Column": "Specifies the ordinal number of the column that contains this cell or item.", "get_ColumnCount": "Specifies the total number of columns in the grid.", "get_ColumnSpan": "Specifies the number of columns spanned by this cell or item.", "get_Condition": "Retrieves the condition that defines the view of the UI Automation tree.", "get_ConnectionRecoveryBehavior": "Indicates whether an accessible technology client adjusts provider request timeouts when the provider is non-responsive.", "get_ConnectionTimeout": "Specifies the length of time that UI Automation will wait for a provider to respond to a client request for an automation element.", "get_ContainingGrid": "Specifies the UI Automation provider that implements IGridProvider and represents the container of this cell or item.", "get_ContentViewCondition": "Retrieves a predefined IUIAutomationCondition interface that selects content elements.", "get_ContentViewWalker": "Retrieves an IUIAutomationTreeWalker interface used to discover content elements.", "get_ControlViewCondition": "Retrieves a predefined IUIAutomationCondition interface that selects control elements.", "get_ControlViewWalker": "Retrieves an IUIAutomationTreeWalker interface used to discover control elements.", "get_Count": "Retrieves the number of entries in the proxy factory table.", "get_CurrentAcceleratorKey": "Retrieves the accelerator key for the element.", "get_CurrentAccessKey": "Retrieves the access key character for the element.", "get_CurrentAnnotationObjects": "Returns the current list of annotation objects associated with this element, such as comment, header, footer, and so on.", "get_CurrentAnnotationTypeId": "Retrieves a value that identifies the annotation's type.", "get_CurrentAnnotationTypeName": "Retrieves the localized name of this annotation's type.", "get_CurrentAnnotationTypes": "Returns the current list of annotation types associated with this element, such as comment, header, footer, and so on.", "get_CurrentAriaProperties": "Retrieves the Accessible Rich Internet Applications properties of the element.", "get_CurrentAriaRole": "Retrieves the Accessible Rich Internet Applications role of the element.", "get_CurrentAuthor": "Retrieves the name of the annotation author.", "get_CurrentAutomationId": "Retrieves the Microsoft UI Automation identifier of the element.", "get_CurrentBoundingRectangle": "Retrieves the coordinates of the rectangle that completely encloses the element.", "get_CurrentCanMaximize": "Indicates whether the window can be maximized.", "get_CurrentCanMinimize": "Indicates whether the window can be minimized.", "get_CurrentCanMove": "Indicates whether the element can be moved.", "get_CurrentCanResize": "Indicates whether the element can be resized.", "get_CurrentCanRotate": "Indicates whether the element can be rotated.", "get_CurrentCanSelectMultiple": "Indicates whether more than one item in the container can be selected at one time.", "get_CurrentCanZoom": "Indicates whether the control supports zooming of its viewport.", "get_CurrentChildId": "Retrieves the Microsoft Active Accessibility child identifier for the element.", "get_CurrentClassName": "Retrieves the class name of the element.", "get_CurrentColumn": "Retrieves the zero-based index of the column that contains the item.", "get_CurrentColumnCount": "The number of columns in the grid.", "get_CurrentColumnSpan": "Retrieves the number of columns spanned by the grid item.", "get_CurrentContainingGrid": "Retrieves the element that contains the grid item.", "get_CurrentControllerFor": "Retrieves an array of elements for which this element serves as the controller.", "get_CurrentControlType": "Retrieves the control type of the element.", "get_CurrentCulture": "Retrieves the culture identifier for the element.", "get_CurrentCurrentSelectedItem": "Gets an IUIAutomationElement object representing the currently selected item.", "get_CurrentCurrentView": "Retrieves the control-specific identifier of the current view of the control.", "get_CurrentDateTime": "Retrieves the date and time that this annotation was created.", "get_CurrentDefaultAction": "Retrieves the Microsoft Active Accessibility current default action for the element.", "get_CurrentDescribedBy": "Retrieves an array of elements that describe this element.", "get_CurrentDescription": "Retrieves the Microsoft Active Accessibility description of the element.", "get_CurrentDockPosition": "Retrieves the dock position of this element within its docking container.", "get_CurrentDropEffect": "Retrieves a localized string that indicates what happens when the user drops this element as part of a drag-drop operation.", "get_CurrentDropEffects": "Retrieves an array of localized strings that enumerate the full set of effects that can happen when this element as part of a drag-and-drop operation.", "get_CurrentDropTargetEffect": "Retrieves a localized string that describes what happens when the user drops the grabbed element on this drop target.", "get_CurrentDropTargetEffects": "Retrieves an array of localized strings that enumerate the full set of effects that can happen when the user drops a grabbed element on this drop target as part of a drag-and-drop operation.", "get_CurrentExpandCollapseState": "Retrieves a value that indicates the state, expanded or collapsed, of the element.", "get_CurrentExtendedProperties": "Retrieves a localized string that contains the list of extended properties for an element in a document.", "get_CurrentFillColor": "Retrieves the fill color of an element in a document.", "get_CurrentFillPatternColor": "Retrieves the color of the pattern used to fill an element in a document.", "get_CurrentFirstSelectedItem": "Gets an IUIAutomationElement object representing the first item in a group of selected items.", "get_CurrentFlowsFrom": "Retrieves an array of elements that indicates the reading order before the current element.", "get_CurrentFlowsTo": "Retrieves an array of elements that indicates the reading order after the current element.", "get_CurrentFormula": "Retrieves the formula for this cell.", "get_CurrentFrameworkId": "Retrieves the name of the underlying UI framework.", "get_CurrentFullDescription": "Gets the current full description of the automation element.", "get_CurrentHasKeyboardFocus": "Indicates whether the element has keyboard focus.", "get_CurrentHeadingLevel": "Gets the current heading level of the automation element.", "get_CurrentHelp": "Retrieves the Microsoft Active Accessibility help string for the element.", "get_CurrentHelpText": "Retrieves the help text for the element.", "get_CurrentHorizontallyScrollable": "Indicates whether the element can scroll horizontally.", "get_CurrentHorizontalScrollPercent": "Retrieves the horizontal scroll position.", "get_CurrentHorizontalViewSize": "Retrieves the horizontal size of the viewable region of a scrollable element.", "get_CurrentIsContentElement": "Indicates whether the element is a content element.", "get_CurrentIsControlElement": "Indicates whether the element is a control element.", "get_CurrentIsDataValidForForm": "Indicates whether the element contains valid data for a form.", "get_CurrentIsDialog": "Retrieves the current is dialog window indicator for the element.", "get_CurrentIsEnabled": "Indicates whether the element is enabled.", "get_CurrentIsGrabbed": "Indicates whether the user has grabbed this element as part of a drag-and-drop operation.", "get_CurrentIsKeyboardFocusable": "Indicates whether the element can accept keyboard focus.", "get_CurrentIsModal": "Indicates whether the window is modal.", "get_CurrentIsOffscreen": "Indicates whether the element is off-screen.", "get_CurrentIsPassword": "Indicates whether the element contains a disguised password.", "get_CurrentIsPeripheral": "Retrieves the current peripheral UI indicator for the element.", "get_CurrentIsReadOnly": "Indicates whether the value of the element is read-only.", "get_CurrentIsRequiredForForm": "Indicates whether the element is required to be filled out on a form.", "get_CurrentIsSelected": "Indicates whether this item is selected.", "get_CurrentIsSelectionRequired": "Indicates whether at least one item must be selected at all times.", "get_CurrentIsTopmost": "Indicates whether the window is the topmost element in the z-order.", "get_CurrentItemCount": "Gets an integer value indicating the number of selected items.", "get_CurrentItemStatus": "Retrieves the description of the status of an item in an element.", "get_CurrentItemType": "Retrieves a description of the type of UI item represented by the element.", "get_CurrentKeyboardShortcut": "Retrieves the Microsoft Active Accessibility keyboard shortcut property for the element.", "get_CurrentLabeledBy": "Retrieves the element that contains the text label for this element.", "get_CurrentLandmarkType": "Gets the current landmark type ID for the automation element.", "get_CurrentLargeChange": "Retrieves the value that is added to or subtracted from the value of the control when a large change is made, such as when the PAGE DOWN key is pressed.", "get_CurrentLastSelectedItem": "Gets an IUIAutomationElement object representing the last item in a group of selected items.", "get_CurrentLevel": "Returns the current 1-based integer for the level for the element.", "get_CurrentLiveSetting": "Indicates the type of notifications, if any, that the element sends when the content of the element changes.", "get_CurrentLocalizedControlType": "Retrieves a localized description of the control type of the element.", "get_CurrentLocalizedLandmarkType": "Gets a string containing the current localized landmark type for the automation element.", "get_CurrentMaximum": "Retrieves the maximum value of the control.", "get_CurrentMinimum": "Retrieves the minimum value of the control.", "get_CurrentName": "Retrieves the Microsoft Active Accessibility name property of the element.", "get_CurrentNativeWindowHandle": "Retrieves the window handle of the element.", "get_CurrentOptimizeForVisualContent": "Indicates whether the provider exposes only elements that are visible.", "get_CurrentOrientation": "Retrieves a value that indicates the orientation of the element.", "get_CurrentPositionInSet": "Returns the current 1-based integer for the ordinal position in the set for the element.", "get_CurrentProcessId": "Retrieves the identifier of the process that hosts the element.", "get_CurrentProviderDescription": "Retrieves a description of the provider for this element.", "get_CurrentRole": "Retrieves the Microsoft Active Accessibility role identifier of the element.", "get_CurrentRow": "Retrieves the zero-based index of the row that contains the grid item.", "get_CurrentRowCount": "Retrieves the number of rows in the grid.", "get_CurrentRowOrColumnMajor": "Retrieves the primary direction of traversal for the table.", "get_CurrentRowSpan": "Retrieves the number of rows spanned by the grid item.", "get_CurrentSelectedItem": "Gets the currently selected item.", "get_CurrentSelectionContainer": "Retrieves the element that supports IUIAutomationSelectionPattern and acts as the container for this item.", "get_CurrentShape": "Retrieves the shape of an element in a document.", "get_CurrentSizeOfSet": "Returns the current 1-based integer for the size of the set where the element is located.", "get_CurrentSmallChange": "Retrieves the value that is added to or subtracted from the value of the control when a small change is made, such as when an arrow key is pressed.", "get_CurrentState": "Retrieves the Microsoft Active Accessibility state identifier for the element.", "get_CurrentStyleId": "Retrieves the identifier of the visual style associated with an element in a document.", "get_CurrentStyleName": "Retrieves the name of the visual style associated with an element in a document.", "get_CurrentTarget": "Retrieves the element that is being annotated.", "get_CurrentToggleState": "Retrieves the state of the control.", "get_CurrentValue": "Retrieves the value of the element.", "get_CurrentVerticallyScrollable": "Indicates whether the element can scroll vertically.", "get_CurrentVerticalScrollPercent": "Retrieves the vertical scroll position.", "get_CurrentVerticalViewSize": "Retrieves the vertical size of the viewable region of a scrollable element.", "get_CurrentView": "Identifies the current view that the control is using to display information or child controls.", "get_CurrentWindowInteractionState": "Retrieves the current state of the window for the purposes of user interaction.", "get_CurrentWindowVisualState": "Retrieves the visual state of the window; that is, whether it is in the normal, maximized, or minimized state.", "get_CurrentZoomLevel": "Retrieves the zoom level of the control's viewport.", "get_CurrentZoomMaximum": "Retrieves the maximum zoom level of the control's viewport.", "get_CurrentZoomMinimum": "Retrieves the minimum zoom level of the control's viewport.", "get_DateTime": "The date and time when this annotation was created.", "get_DefaultAction": "Contains a description of the default action for this element.", "get_Description": "Contains the description of this element.", "get_DockPosition": "Indicates the current docking position of this element.", "get_DocumentRange": "Retrieves a text range that encloses the main text of a document.", "get_DropEffect": "Retrieves a localized string that indicates what happens when this element is dropped as part of a drag-drop operation.", "get_DropEffects": "Retrieves an array of localized strings that enumerate the full set of effects that can happen when this element is dropped as part of a drag-and-drop operation.", "get_DropTargetEffect": "Retrieves a localized string that describes the effect that happens when the user drops the grabbed element on this drop target.", "get_DropTargetEffects": "Retrieves an array of localized strings that enumerate the full set of effects that can happen when the user drops a grabbed element on this drop target as part of a drag-and-drop operation.", "get_ExpandCollapseState": "Indicates the state, expanded or collapsed, of the control.", "get_ExtendedProperties": "Contains additional properties that are not included in this control pattern, but that provide information about the document content that might be useful to the user.", "get_FillColor": "Specifies the fill color of an element in a document.", "get_FillPatternColor": "Specifies the color of the pattern used to fill an element in a document.", "get_FillPatternStyle": "Specifies the fill pattern style of an element in a document.", "get_FirstSelectedItem": "Gets the first item in a group of selected items.", "get_Formula": "Specifies the formula for this spreadsheet cell.", "get_FragmentRoot": "Specifies the root node of the fragment.", "get_Help": "Specifies a string that contains help information for this element.", "get_HorizontallyScrollable": "Indicates whether the control can scroll horizontally.", "get_HorizontalScrollPercent": "Specifies the horizontal scroll position.", "get_HorizontalViewSize": "Specifies the horizontal size of the viewable region.", "get_HostRawElementProvider": "Specifies the host provider for this element.", "get_ImageName": "Sets or retrieves the name of the image of the proxy factory.", "get_IsGrabbed": "Indicates whether the element has been grabbed as part of a drag-and-drop operation.", "get_IsModal": "Indicates whether the window is modal.", "get_IsReadOnly": "Indicates whether the value of a control is read-only.", "get_IsSelected": "Indicates whether an item is selected.", "get_IsSelectionRequired": "Indicates whether the Microsoft UI Automation provider requires at least one child element to be selected.", "get_IsTopmost": "Indicates whether the window is the topmost element in the z-order.", "get_ItemCount": "Gets the number of selected items.", "get_KeyboardShortcut": "Specifies the keyboard shortcut for this element.", "get_LargeChange": "Specifies the value that is added to or subtracted from the IRangeValueProvider::Value property when a large change is made, such as when the PAGE DOWN key is pressed.", "get_LastSelectedItem": "Gets the last item in a group of selected items.", "get_Length": "Retrieves the number of text ranges in the collection.", "get_Maximum": "Specifies the maximum range value supported by the control.", "get_Minimum": "Specifies the minimum range value supported by the control.", "get_Name": "Specifies the name of this element.", "get_NeedsAdviseEvents": "Sets or retrieves a value that specifies whether the proxy must be notified when an application has registered for events.", "get_PropertyConditionFlags": "Retrieves a set of flags that specify how the condition is applied.", "get_PropertyId": "Retrieves the identifier of the property on which this condition is based.", "get_PropertyValue": "Retrieves the property value that must be matched for the condition to be true.", "get_ProviderOptions": "Specifies the type of Microsoft UI Automation provider; for example, whether it is a client-side or server-side provider.", "get_ProxyFactory": "Retrieves the proxy factory associated with this entry.", "get_ProxyFactoryId": "Retrieves the identifier of the proxy factory.", "get_ProxyFactoryMapping": "Retrieves an object that represents the mapping of Window classnames and associated data to individual proxy factories.", "get_RawViewCondition": "Retrieves a predefined IUIAutomationCondition interface that selects all UI elements in an unfiltered view.", "get_RawViewWalker": "Retrieves a tree walker object used to traverse an unfiltered view of the Microsoft UI Automation tree.", "get_ReservedMixedAttributeValue": "Retrieves a static token object representing a text attribute that is a mixed attribute.", "get_ReservedNotSupportedValue": "Retrieves a static token object representing a property or text attribute that is not supported.", "get_Role": "Specifies the role identifier of this element.", "get_Row": "Specifies the ordinal number of the row that contains this cell or item.", "get_RowCount": "Specifies the total number of rows in the grid.", "get_RowOrColumnMajor": "Specifies the primary direction of traversal for the table.", "get_RowSpan": "Specifies the number of rows spanned by this cell or item.", "get_SelectionContainer": "Specifies the provider that implements ISelectionProvider and acts as the container for the calling object.", "get_Shape": "Specifies the shape of an element in a document.", "get_SmallChange": "Specifies the value that is added to or subtracted from the IRangeValueProvider::Value property when a small change is made, such as when an arrow key is pressed.", "get_State": "Specifies the state of this element.", "get_StyleId": "Identifies the visual style of an element in a document.", "get_StyleName": "Specifies the name of the visual style of an element in a document.", "get_SupportedTextSelection": "Retrieves a value that specifies the type of text selection that is supported by the control.", "get_Target": "The UI Automation element that is being annotated.", "get_TextContainer": "Retrieves this element's nearest ancestor element that supports the Text control pattern.", "get_TextRange": "Retrieves a text range that encloses this child element.", "get_ToggleState": "Specifies the toggle state of the control.", "get_TransactionTimeout": "Specifies the length of time that UI Automation will wait for a provider to respond to a client request for information about an automation element.", "get_TreeFilter": "Specifies the view of the UI Automation element tree that is used when caching.", "get_TreeScope": "Specifies the scope of caching.", "get_Value": "The value of the control.", "get_VerticallyScrollable": "Indicates whether the control can scroll vertically.", "get_VerticalScrollPercent": "Specifies the vertical scroll position.", "get_VerticalViewSize": "Specifies the vertical size of the viewable region.", "get_WindowInteractionState": "Specifies the current state of the window for the purposes of user interaction.", "get_WindowVisualState": "Specifies the visual state of the window; that is, whether the window is normal, minimized, or maximized.", "get_ZoomLevel": "Retrieves the current zoom level of the element.", "get_ZoomMaximum": "Retrieves the maximum zoom level of the element.", "get_ZoomMinimum": "Retrieves the minimum zoom level of the element.", "GetActiveComposition": "Returns the active composition.", "GetAdjacentFragment": "Retrieves a fragment pointer for a fragment that is adjacent to the windowless Microsoft ActiveX control owned by this control site.", "GetAnnotationObjects": "Retrieves an array of objects that represent the annotations associated with this spreadsheet cell.", "GetAnnotationTypes": "Retrieves an array of annotation type identifiers indicating the types of annotations that are associated with this spreadsheet cell.", "GetAttributeValue": "Retrieves the value of the specified text attribute across the entire text range.", "GetAttributeValues": "Returns all of the requested text attribute values for a text range in a single cross - process call.", "GetBoundingRectangles": "Retrieves a collection of bounding rectangles for each fully or partially visible line of text in a text range.", "GetBuildVersion": "Clients call IVersionInfo::GetBuildVersion to retrieve build information for a specified component.", "GetCachedAnnotationObjects": "Retrieves a cached array of elements representing the annotations associated with this spreadsheet cell.", "GetCachedAnnotationTypes": "Retrieves a cached array of annotation type identifiers indicating the types of annotations that are associated with this spreadsheet cell.", "GetCachedChildren": "Retrieves the cached child elements of this UI Automation element.", "GetCachedColumnHeaderItems": "Retrieves the cached column headers associated with a table item or cell.", "GetCachedColumnHeaders": "Retrieves a cached collection of UI Automation elements representing all the column headers in a table.", "GetCachedGrabbedItems": "Retrieves a cached collection of elements that represent the full set of items that the user is dragging as part of a drag operation.", "GetCachedParent": "Retrieves from the cache the parent of this UI Automation element.", "GetCachedPattern": "Retrieves from the cache the IUnknown interface of the specified control pattern of this UI Automation element.", "GetCachedPatternAs": "Retrieves the control pattern interface of the specified pattern from the cache of this UI Automation element.", "GetCachedPropertyValue": "Retrieves a property value from the cache for this UI Automation element.", "GetCachedPropertyValueEx": "Retrieves a property value from the cache for this UI Automation element, optionally ignoring any default value.", "GetCachedRowHeaderItems": "Retrieves the cached row headers associated with a table item or cell.", "GetCachedRowHeaders": "Retrieves a cached collection of UI Automation elements representing all the row headers in a table.", "GetCachedSelection": "Retrieves the cached selected elements in the container.", "GetCachedSupportedViews": "Retrieves a collection of control-specific view identifiers from the cache.", "GetCaretRange": "Retrieves a zero-length text range at the location of the caret that belongs to the text-based control.", "GetChild": "Retrieves the condition of which this condition is the negative.", "GetChildren": "Retrieves a collection of all embedded objects that fall within the text range.", "GetChildrenAsNativeArray": "Retrieves the conditions that make up this \"or\" condition, as an ordinary array.", "GetChildrenBuildCache": "Returns the children and supplied properties and patterns for elements in a text range in a single cross - process call.", "GetClickablePoint": "Retrieves a point on the element that can be clicked.", "GetColumnHeaderItems": "Retrieves a collection of Microsoft UI Automation provider representing all the column headers associated with a table item or cell.", "GetColumnHeaders": "Gets a collection of Microsoft UI Automation providers that represents all the column headers in a table.", "GetComponentDescription": "Clients call this method to retrieve a description of the component.", "GetConversionTarget": "Returns the current conversion target range.", "GetCurrentAnnotationObjects": "Retrieves an array of elements representing the annotations associated with this spreadsheet cell.", "GetCurrentAnnotationTypes": "Retrieves an array of annotation type identifiers indicating the types of annotations that are associated with this spreadsheet cell.", "GetCurrentColumnHeaderItems": "Retrieves the column headers associated with a table item or cell.", "GetCurrentColumnHeaders": "Retrieves a collection of UI Automation elements representing all the column headers in a table.", "GetCurrentGrabbedItems": "Retrieves a collection of elements that represent the full set of items that the user is dragging as part of a drag operation.", "GetCurrentMetadataValue": "Gets metadata from the UI Automation element that indicates how the information should be interpreted.", "GetCurrentPattern": "Retrieves the IUnknown interface of the specified control pattern on this UI Automation element.", "GetCurrentPatternAs": "Retrieves the control pattern interface of the specified pattern on this UI Automation element.", "GetCurrentPropertyValue": "Retrieves the current value of a property for this UI Automation element.", "GetCurrentPropertyValueEx": "Retrieves a property value for this UI Automation element, optionally ignoring any default value.", "GetCurrentRowHeaderItems": "Retrieves the row headers associated with a table item or cell.", "GetCurrentRowHeaders": "Retrieves a collection of UI Automation elements representing all the row headers in a table.", "GetCurrentSelection": "Retrieves the selected elements in the container.", "GetCurrentSupportedViews": "Retrieves a collection of control-specific view identifiers.", "GetDocuments": "Clients call IAccClientDocMgr::GetDocuments to get a list of all documents that have been registered with the Microsoft Active Accessibility run time.", "GetElement": "Retrieves a text range from the collection.", "GetEmbeddedAccessibles": "Retrieves the IAccessible interface pointers of the windowless Microsoft ActiveX controls that are hosted by this provider.", "GetEmbeddedFragmentRoots": "Retrieves an array of root fragments that are embedded in the Microsoft UI Automation tree rooted at the current element.", "GetEnclosingElement": "Returns the innermost UI Automation element that encloses the text range.", "GetEnclosingElementBuildCache": "Gets the enclosing element and supplied properties and patterns for an element in a text range in a single cross - process call.", "GetEntry": "Retrieves an entry from the proxy factory table.", "GetFirstChildElement": "Retrieves the first child element of the specified UI Automation element.", "GetFirstChildElementBuildCache": "Retrieves the first child element of the specified UI Automation element, and caches properties and control patterns.", "GetFocus": "Retrieves the element in this fragment that has the input focus.", "GetFocused": "Clients call the IAccClientDocMgr::GetFocused method to access a pointer for the document that has focus.", "GetFocusedElement": "Retrieves the UI Automation element that has the input focus.", "GetFocusedElementBuildCache": "Retrieves the UI Automation element that has the input focus, prefetches the requested properties and control patterns, and stores the prefetched items in the cache.", "GetGrabbedItems": "Retrieves the collection of elements that are being dragged as part of a drag operation.", "GetIAccessible": "Retrieves an IAccessible object that corresponds to the Microsoft UI Automation element.", "GetIAccessiblePair": "Retrieves the IAccessible interface and child ID for this item.", "GetIdentityString": "Retrieves a string of bytes that uniquely identifies an accessible element.", "GetImplementationID": "Clients call IVersionInfo::GetImplementationID to retrieve a unique identifier for the component.", "GetInstanceDescription": "Note\u00c2 \u00a0 \u00c2 \u00a0 Active Accessibility Text Services is deprecated.", "GetItem": "Retrieves a UI Automation element representing an item in the grid.", "GetItemByName": "Retrieves a UI Automation element that represents the spreadsheet cell that has the specified name.", "GetLastChildElement": "Retrieves the last child element of the specified UI Automation element.", "GetLastChildElementBuildCache": "Retrieves the last child element of the specified UI Automation element, and caches properties and control patterns.", "GetLocalizedString": "Clients call the IAccDictionary::GetLocalizedString method to get localized strings for all system properties and their values.", "GetMetadataValue": "Gets metadata from the UI Automation element that indicates how the information should be interpreted.", "GetMnemonicString": "Note\u00c2 \u00a0 \u00c2 \u00a0 Active Accessibility Text Services is deprecated.", "GetNextSiblingElement": "Retrieves the next sibling element of the specified UI Automation element.", "GetNextSiblingElementBuildCache": "Retrieves the next sibling element of the specified UI Automation element, and caches properties and control patterns.", "GetObjectForChild": "Retrieves an IAccessibleEx interface representing the specified child of this element.", "GetObjectIdForProvider": "Retrieves the object ID associated with a contained windowless Microsoft ActiveX control that implements Microsoft UI Automation.", "GetOleaccVersionInfo": "Retrieves the version number and build number of the Microsoft Active Accessibility file Oleacc.dll.", "GetOverrideProviderForHwnd": "Gets a UI Automation provider for the specified element.", "GetParentAccessible": "Retrieves an IAccessible pointer for the parent of a windowless Microsoft ActiveX control in the accessibility tree.", "GetParentElement": "Retrieves the parent element of the specified UI Automation element.", "GetParentElementBuildCache": "Retrieves the parent element of the specified UI Automation element, and caches properties and control patterns.", "GetParentTerm": "Clients call the IAccDictionary::GetParentTerm method to navigate through the object hierarchy tree.", "GetPatternProgrammaticName": "Retrieves the registered programmatic name of a control pattern.", "GetPatternProvider": "Retrieves a pointer to an object that provides support for a control pattern on a Microsoft UI Automation element.", "GetPreviousSiblingElement": "Retrieves the previous sibling element of the specified UI Automation element.", "GetPreviousSiblingElementBuildCache": "Retrieves the previous sibling element of the specified UI Automation element, and caches properties and control patterns.", "GetProperty": "The client wrapper object implements the IUIAutomation::get_CurrentX and IUIAutomationElement::get_CachedX methods by calling this function, specifying the property by index.", "GetPropertyProgrammaticName": "Retrieves the registered programmatic name of a property.", "GetPropertyValue": "Retrieves the value of a property supported by the Microsoft UI Automation provider.", "GetPropValue": "Retrieves a property value for an accessible element.", "GetRoleTextA": "Retrieves the localized string that describes the object's role for the specified role value.", "GetRoleTextW": "Retrieves the localized string that describes the object's role for the specified role value.", "GetRootElement": "Retrieves the UI Automation element that represents the desktop.", "GetRootElementBuildCache": "Retrieves the UI Automation element that represents the desktop, prefetches the requested properties and control patterns, and stores the prefetched items in the cache.", "GetRowHeaderItems": "Retrieves a collection of Microsoft UI Automation provider representing all the row headers associated with a table item or cell.", "GetRowHeaders": "Gets a collection of Microsoft UI Automation providers that represents all the row headers in a table.", "GetRuntimeId": "Retrieves the unique identifier assigned to the UI element.", "GetRuntimeIdPrefix": "Retrieves a Microsoft UI Automation runtime ID that is unique to the windowless Microsoft ActiveX control site.", "GetSelection": "Retrieves a collection of text ranges that represents the currently selected text in a text-based control.", "GetStateTextA": "Retrieves a localized string that describes an object's state for a single predefined state bit flag.", "GetStateTextW": "Retrieves a localized string that describes an object's state for a single predefined state bit flag.", "GetSubcomponentCount": "Clients call IVersionInfo::GetSubcomponentCount to determine the number of subcomponents for which version information is returned.", "GetSupportedViews": "Retrieves a collection of control-specific view identifiers.", "GetTable": "Retrieves all entries in the proxy factory table.", "GetText": "Returns the plain text of the text range.", "GetUnderlyingObjectModel": "Retrieves an interface used to access the underlying object model of the provider.", "GetViewName": "Retrieves the name of a control-specific view.", "GetVisibleRanges": "Retrieves an array of disjoint text ranges from a text-based control where each text range represents a contiguous span of visible text.", "GetWinEventsForAutomationEvent": "If an element represented by this proxy raises one the listed WinEvents, the proxy handles it.", "GridPattern_GetItem": "Gets the node for an item in a grid.", "HandleActiveTextPositionChangedEvent": "Handles a Microsoft UI Automation active text position change event.", "HandleAutomationEvent": "Handles a Microsoft UI Automation event.", "HandleChangesEvent": "Handles one or more Microsoft UI Automation change events.", "HandleFocusChangedEvent": "Handles the event raised when the keyboard focus moves to a different UI Automation element.", "HandleNotificationEvent": "Handles a Microsoft UI Automation notification event.", "HandlePropertyChangedEvent": "Handles a Microsoft UI Automation property-changed event.", "HandleStructureChangedEvent": "Handles an event that is raised when the Microsoft UI Automation tree structure has changed.", "HandleTextEditTextChangedEvent": "Handles an event that is raised when a Microsoft UI Automation provider for a text-edit control reports a programmatic text change.", "InsertEntries": "Inserts entries into the table of proxy factories.", "InsertEntry": "Insert an entry into the table of proxy factories.", "IntNativeArrayToSafeArray": "Converts an array of integers to a SAFEARRAY.", "IntSafeArrayToNativeArray": "Converts a SAFEARRAY of integers to an array.", "Invoke": "Invokes the action of a control, such as a button click.", "InvokePattern_Invoke": "Sends a request to activate a control and initiate its single, unambiguous action.", "IsWinEventHookInstalled": "Determines whether there is an installed WinEvent hook that might be notified of a specified event.", "ItemContainerPattern_FindItemByProperty": "Retrieves a node within a containing node, based on a specified property value.", "LegacyIAccessiblePattern_DoDefaultAction": "Performs the Microsoft Active Accessibility default action for the element.", "LegacyIAccessiblePattern_GetIAccessible": "Retrieves an IAccessible object that corresponds to the UI Automation element.", "LegacyIAccessiblePattern_Select": "Performs a Microsoft Active Accessibility selection.", "LegacyIAccessiblePattern_SetValue": "Sets the Microsoft Active Accessibility value property for the node.", "LocalInit": "Note\u00c2 \u00a0 \u00c2 \u00a0 Active Accessibility Text Services is deprecated.", "LookupByHWND": "Clients call IAccClientDocMgr::LookupByHWND to get a document by providing the HWND for the document.", "LookupByPoint": "Clients call IAccClientDocMgr::LookupByPoint to get a document object from a point within the document.", "LookupMnemonicTerm": "Clients call the IAccDictionary::LookupMnemonicTerm method to find the property for a given mnemonic string.", "LresultFromObject": "Returns a reference, similar to a handle, to the specified object.", "Move": "Moves the UI Automation element.", "MoveEndpointByRange": "Moves one endpoint of the current text range to the specified endpoint of a second text range.", "MoveEndpointByUnit": "Moves one endpoint of the text range the specified number of text units within the document range.", "MultipleViewPattern_GetViewName": "Retrieves the name of a control-specific view.", "MultipleViewPattern_SetCurrentView": "Sets a control to a different layout.", "Navigate": "Gets the next element in the specified direction within the logical UI tree.", "NewDocument": "The adapter creates a wrapped document and registers it with the store, so clients can access information about the text in the document.", "NormalizeElement": "Retrieves the ancestor element nearest to the specified Microsoft UI Automation element in the tree view.", "NormalizeElementBuildCache": "Retrieves the ancestor element nearest to the specified Microsoft UI Automation element in the tree view, prefetches the requested properties and control patterns, and stores the prefetched items in the cache.", "NotifyWinEvent": "If any client applications have registered a hook function for the event, the system calls the client's hook function.", "ObjectFromLresult": "Retrieves a requested interface pointer for an accessible object based on a previously generated object reference.", "OnDocumentFocus": "Applications that use Text Services Framework call IAccServerDocMgr::OnDocumentFocus to notify the Microsoft Active Accessibility run time when a document gets or loses focus.", "PollForPotentialSupportedPatterns": "Retrieves the control patterns that might be supported on a UI Automation element.", "PollForPotentialSupportedProperties": "Retrieves the properties that might be supported on a UI Automation element.", "put_accName": "Client applications should use a control - specific workaround, such as the SetWindowText function.", "put_accValue": "The IAccessible::put_accValue method sets the value of the specified object.", "put_AllowSubstringMatch": "Sets or retrieves a value that specifies whether the proxy allows substring matching.", "put_AutomationElementMode": "Indicates whether returned elements contain full references to the underlying UI, or only cached information.", "put_AutoSetFocus": "Specifies whether calls to UI Automation control pattern methods automatically set focus to the target element.", "put_CanCheckBaseClass": "Sets or retrieves a value that specifies whether the base class can be checked when searching for a proxy factory.", "put_ClassName": "Sets or retrieves the name of the window class served by the proxy factory.", "put_CoalesceEvents": "Gets or sets whether an accessible technology client receives all events, or a subset where duplicate events are detected and filtered.", "put_ConnectionRecoveryBehavior": "Indicates whether an accessible technology client adjusts provider request timeouts when the provider is non-responsive.", "put_ConnectionTimeout": "Specifies the length of time that UI Automation will wait for a provider to respond to a client request for an automation element.", "put_ImageName": "Sets or retrieves the name of the image of the proxy factory.", "put_NeedsAdviseEvents": "Sets or retrieves a value that specifies whether the proxy must be notified when an application has registered for events.", "put_TransactionTimeout": "Specifies the length of time that UI Automation will wait for a provider to respond to a client request for information about an automation element.", "put_TreeFilter": "Specifies the view of the UI Automation element tree that is used when caching.", "put_TreeScope": "Specifies the scope of caching.", "QueryObjectIdRanges": "Retrieves the object ID ranges that a particular windowless Microsoft ActiveX control has reserved.", "RangeFromAnnotation": "Retrieves a text range containing the text that is the target of the annotation associated with the specified annotation element.", "RangeFromChild": "Retrieves a text range enclosing a child element such as an image, hyperlink, Microsoft Excel spreadsheet, or other embedded object.", "RangeFromPoint": "Retrieves the degenerate text range nearest to the specified screen coordinates.", "RangeValuePattern_SetValue": "Sets the value of a control that has a numerical range.", "Realize": "Creates a full UI Automation element for a virtualized item.", "RectToVariant": "Creates a VARIANT that contains the coordinates of a rectangle.", "RegisterEvent": "Registers a third-party Microsoft UI Automation event.", "RegisterPattern": "Registers a third-party control pattern.", "RegisterPointerInputTarget": "Allows the caller to register a target window to which all pointer input of the specified type is redirected.", "RegisterPointerInputTargetEx": "RegisterPointerInputTargetEx may be altered or unavailable.", "RegisterProperty": "Registers a third-party property.", "ReleaseObjectIdRange": "Releases an object ID range that was acquired by a previous call to the IAccessibleWindowlessSite::AcquireObjectIdRange method.", "RemoveActiveTextPositionChangedEventHandler": "Removes an active text position changed event handler.", "RemoveAllEventHandlers": "Removes all registered Microsoft UI Automation event handlers.", "RemoveAutomationEventHandler": "Removes the specified UI Automation event handler.", "RemoveChangesEventHandler": "Removes a changes event handler.", "RemoveEntry": "Removes an entry from the table of proxy factories.", "RemoveEventHandlerGroup": "Asynchronously removes the specified UI Automation event handler group.", "RemoveFocusChangedEventHandler": "Removes a focus-changed event handler.", "RemoveFromSelection": "Removes the text range from an existing collection of selected text in a text container that supports multiple, disjoint selections.", "RemoveNotificationEventHandler": "Removes a notification event handler.", "RemovePropertyChangedEventHandler": "Removes a property-changed event handler.", "RemoveStructureChangedEventHandler": "Removes a structure-changed event handler.", "RemoveTextEditTextChangedEventHandler": "Removes a programmatic text-edit event handler.", "Resize": "Resizes the UI Automation element.", "RespondToWinEvent": "Handles a WinEvent.", "RestoreDefaultTable": "Restores the default table of proxy factories.", "RevokeDocument": "Server applications call the IAccServerDocMgr::RevokeDocument method to notify the Microsoft Active Accessibility run time that a document is no longer available.", "Rotate": "Rotates the UI Automation element.", "SafeArrayToRectNativeArray": "Converts a SAFEARRAY containing rectangle coordinates to an array of type RECT.", "Scroll": "Scrolls the visible region of the content area horizontally and vertically.", "ScrollIntoView": "Causes the text control to scroll until the text range is visible in the viewport.", "ScrollItemPattern_ScrollIntoView": "Scrolls the content area of a container object in order to display the UI Automation element within the visible region of the container.", "ScrollPattern_Scroll": "Scrolls the currently visible region of the content area the specified ScrollAmount, horizontally, vertically, or both.", "ScrollPattern_SetScrollPercent": "Scrolls a container to a specific position horizontally, vertically, or both.", "Select": "Selects the span of text that corresponds to this text range, and removes any previous selection.", "SelectionItemPattern_AddToSelection": "Adds an unselected element to a selection in a control.", "SelectionItemPattern_RemoveFromSelection": "Removes an element from the selection in a selection container.", "SelectionItemPattern_Select": "Selects an element in a selection container.", "SetCurrentView": "Sets the view of the control.", "SetDockPosition": "Sets the dock position of this element.", "SetFocus": "Sets the keyboard focus to this UI Automation element.", "SetHmenuProp": "This method wraps SetPropValue, providing a convenient entry point for callers who are annotating HMENU - based accessible elements.", "SetHmenuPropServer": "This method wraps SetPropServer, providing a convenient entry point for callers who are annotating HMENU-based accessible elements.", "SetHmenuPropStr": "This method wraps SetPropValue, providing a more convenient entry point for callers who are annotating HMENU-based accessible elements.", "SetHwndProp": "This method wraps SetPropValue, providing a convenient entry point for callers who are annotating HWND - based accessible elements.", "SetHwndPropServer": "This method wraps SetPropServer, providing a convenient entry point for callers who are annotating HWND-based accessible elements.", "SetHwndPropStr": "This method wraps SetPropValue, providing a more convenient entry point for callers who are annotating HWND-based accessible elements.", "SetPropServer": "Servers use SetPropServer to specify a callback object to be used to annotate an array of properties for the accessible element.", "SetPropValue": "Use SetPropValue to identify the accessible element to be annotated, specify the property to be annotated, and provide a new value for that property.", "SetScrollPercent": "Sets the horizontal and vertical scroll positions as a percentage of the total content area within the UI Automation element.", "SetTable": "Sets the table of proxy factories.", "SetValue": "Sets the value of the element.", "SetVisualState": "For example, minimizes or maximizes it.", "SetWindowVisualState": "Minimizes, maximizes, or restores the window.", "SetWinEventHook": "Sets an event hook function for a range of events.", "SetWinEventsForAutomationEvent": "Maps Microsoft UI Automation events to WinEvents.", "ShowContextMenu": "Programmatically invokes a context menu on the target text range.", "StartListening": "Causes the Microsoft UI Automation provider to start listening for mouse or keyboard input.", "SynchronizedInputPattern_Cancel": "Causes the UI Automation provider to stop listening for mouse or keyboard input.", "SynchronizedInputPattern_StartListening": "Causes the UI Automation provider to start listening for mouse or keyboard input.", "TextPattern_get_DocumentRange": "Gets the text range for the entire document.", "TextPattern_get_SupportedTextSelection": "Ascertains whether the text container's contents can be selected and deselected.", "TextPattern_GetSelection": "Gets the current range of selected text from a text container supporting the text pattern.", "TextPattern_GetVisibleRanges": "Retrieves an array of disjoint text ranges from a text container where each text range begins with the first partially visible line through to the end of the last partially visible line.", "TextPattern_RangeFromChild": "Gets the text range that a given node spans.", "TextPattern_RangeFromPoint": "Retrieves the degenerate text range nearest to the specified screen coordinates.", "TextRange_AddToSelection": "Adds to the existing collection of highlighted text in a text container that supports multiple, disjoint selections by highlighting supplementary text corresponding to the calling text range Start and End endpoints.", "TextRange_Clone": "Copies a text range.", "TextRange_Compare": "Compares two text ranges.", "TextRange_CompareEndpoints": "Returns a value indicating whether two text ranges have identical endpoints.", "TextRange_ExpandToEnclosingUnit": "Expands the text range to a larger or smaller unit such as Character, Word, Line, or Page.", "TextRange_FindAttribute": "Searches in a specified direction for the first piece of text supporting a specified text attribute.", "TextRange_FindText": "Returns the first text range in the specified direction that contains the text the client is searching for.", "TextRange_GetAttributeValue": "Gets the value of a text attribute for a text range.", "TextRange_GetBoundingRectangles": "Retrieves the minimum number of bounding rectangles that can enclose the range, one rectangle per line.", "TextRange_GetChildren": "Returns all UI Automation elements contained within the specified text range.", "TextRange_GetEnclosingElement": "Returns the node for the next smallest provider that covers the range.", "TextRange_GetText": "Returns the text in a text range, up to a specified number of characters.", "TextRange_Move": "Moves the text range the specified number of units requested by the client.", "TextRange_MoveEndpointByRange": "Moves an endpoint of one range to the endpoint of another range.", "TextRange_MoveEndpointByUnit": "Moves an endpoint of the range the specified number of units.", "TextRange_RemoveFromSelection": "Removes the selected text, corresponding to the calling text range TextPatternRangeEndpoint_Start and TextPatternRangeEndpoint_End endpoints, from an existing collection of selected text in a text container that supports multiple, disjoint selections.", "TextRange_ScrollIntoView": "Scrolls the text so the specified range is visible in the viewport.", "TextRange_Select": "Selects a text range.", "Toggle": "Cycles through the toggle states of the control.", "TogglePattern_Toggle": "Toggles a control to its next supported state.", "TransformPattern_Move": "Moves an element to a specified location on the screen.", "TransformPattern_Resize": "Resizes an element on the screen.", "TransformPattern_Rotate": "Rotates an element on the screen.", "UiaAddEvent": "Adds a listener for events on a node in the UI Automation tree.", "UiaClientsAreListening": "Gets a value that indicates whether any client application is subscribed to Microsoft UI Automation events.", "UiaDisconnectAllProviders": "Releases all Microsoft UI Automation resources that are held by all providers associated with the calling process.", "UiaDisconnectProvider": "Releases all references that a particular provider holds to Microsoft UI Automation objects.", "UiaEventAddWindow": "Adds a window to the event listener.", "UiaEventCallback": "A client-implemented function that is called by UI Automation when an event is raised that the client has subscribed to.", "UiaEventRemoveWindow": "Removes a window from the event listener.", "UiaFind": "Retrieves one or more UI Automation nodes that match the search criteria.", "UiaGetErrorDescription": "Gets an error string so that it can be passed to the client.", "UiaGetPatternProvider": "Retrieves a control pattern.", "UiaGetPropertyValue": "Retrieves the value of a UI Automation property.", "UiaGetReservedMixedAttributeValue": "Retrieves a reserved value indicating that the value of a Microsoft UI Automation text attribute varies within a text range.", "UiaGetReservedNotSupportedValue": "Retrieves a reserved value indicating that a Microsoft UI Automation property or a text attribute is not supported.", "UiaGetRootNode": "Retrieves the root UI Automation node.", "UiaGetRuntimeId": "Retrieves the runtime identifier of a UI Automation node.", "UiaGetUpdatedCache": "Updates the cache of property values and control patterns.", "UiaHasServerSideProvider": "Ascertains whether a window has a Microsoft UI Automation provider implementation.", "UiaHostProviderFromHwnd": "Gets the host provider for a window.", "UiaHPatternObjectFromVariant": "Gets a control pattern object from a VARIANT type.", "UiaHTextRangeFromVariant": "Gets a text range from a VARIANT type.", "UiaHUiaNodeFromVariant": "Gets an HUIANODE from a VARIANT type.", "UiaIAccessibleFromProvider": "Retrieves an IAccessible implementation that provides Microsoft Active Accessibility data on behalf of a Microsoft UI Automation provider.", "UiaLookupId": "Gets the integer identifier that can be used in methods that require a PROPERTYID, PATTERNID, CONTROLTYPEID, TEXTATTRIBUTEID, or EVENTID.", "UiaNavigate": "Navigates in the UI Automation tree, optionally retrieving cached information.", "UiaNodeFromFocus": "Retrieves the UI Automation node for the UI element that currently has input focus.", "UiaNodeFromHandle": "Retrieves the UI Automation node associated with a window.", "UiaNodeFromPoint": "Retrieves the UI Automation node for the element at the specified point.", "UiaNodeFromProvider": "Retrieves the UI Automation node for a raw element provider.", "UiaNodeRelease": "Deletes a node from memory.", "UiaPatternRelease": "Deletes an allocated pattern object from memory.", "UiaProviderCallback": "An application-defined function that is called by UI Automation to obtain a client-side provider for an element.", "UiaProviderForNonClient": "Gets the provider for the entire non-client area of a window, or for a control in the non-client area of a window.", "UiaProviderFromIAccessible": "Creates a Microsoft UI Automation provider based on the specified Microsoft Active Accessibility object.", "UiaRaiseActiveTextPositionChangedEvent": "Called by a provider to notify the Microsoft UI Automation core that a text control has programmatically changed text.", "UiaRaiseAsyncContentLoadedEvent": "Called by a provider to notify the Microsoft UI Automation core that content is being loaded asynchronously.", "UiaRaiseAutomationEvent": "Notifies listeners of an event.", "UiaRaiseAutomationPropertyChangedEvent": "Called by providers to notify the Microsoft UI Automation core that an element property has changed.", "UiaRaiseChangesEvent": "Called by providers to notify the Microsoft UI Automation core that a change has occurred.", "UiaRaiseNotificationEvent": "Called by providers to initiate a notification event.", "UiaRaiseStructureChangedEvent": "Called by a provider to notify the Microsoft UI Automation core that the tree structure has changed.", "UiaRaiseTextEditTextChangedEvent": "Called by a provider to notify the Microsoft UI Automation core that a text control has programmatically changed text.", "UiaRectIsEmpty": "Gets a Boolean value that specifies whether a rectangle has all its coordinates set to 0.", "UiaRectSetEmpty": "Sets the elements of a UiaRect structure to 0.", "UiaRegisterProviderCallback": "Registers the application-defined method that is called by UI Automation to obtain a provider for an element.", "UiaRemoveEvent": "Removes a listener for events on a node in the UI Automation tree.", "UiaReturnRawElementProvider": "Gets an interface to the UI Automation provider for a window.", "UiaSetFocus": "Sets the input focus to the specified element in the UI.", "UiaTextRangeRelease": "Deletes an allocated text range object from memory.", "UnhookWinEvent": "Removes an event hook function created by a previous call to SetWinEventHook.", "UnregisterPointerInputTarget": "Allows the caller to unregister a target window to which all pointer input of the specified type is redirected.", "UnregisterPointerInputTargetEx": "UnregisterPointerInputTargetEx may be altered or unavailable.", "ValuePattern_SetValue": "Sets the text value of an element.", "VariantToRect": "Converts a VARIANT containing rectangle coordinates to a RECT.", "VirtualizedItemPattern_Realize": "Makes the virtual item fully accessible as a UI Automation element.", "WaitForInputIdle": "Causes the calling code to block for the specified time or until the associated process enters an idle state, whichever completes first.", "WindowFromAccessibleObject": "Retrieves the window handle that corresponds to a particular instance of an IAccessible interface.", "WindowPattern_Close": "Closes an open window.", "WindowPattern_SetWindowVisualState": "Sets the visual state of a window; for example, to maximize a window.", "WindowPattern_WaitForInputIdle": "Causes the calling code to block for the specified time or until the associated process enters an idle state, whichever completes first.", "WINEVENTPROC": "An application-defined callback function that the system calls in response to events generated by an accessible object.", "Zoom": "Zooms the viewport of the control.", "ZoomByUnit": "Zooms the viewport of the control by the specified unit."}