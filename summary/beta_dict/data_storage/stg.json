{"BeginMonitor": "The BeginMonitor method is used to begin monitoring when a loading operation is started.", "Clone": "Creates an enumerator that contains the same enumeration state as the current STATPROPSTG structure enumerator.", "Commit": "Saves changes made to a property storage object to the parent storage object.", "CopyTo": "Copies a specified number of bytes from the current seek pointer in the stream to the current seek pointer in another stream.", "Create": "Creates and opens a new property set in the property set storage object.", "CreateILockBytesOnHGlobal": "Creates a byte array object that uses an HGLOBAL memory handle to store the bytes intended for in-memory storage of a compound file.", "CreateStorage": "Creates and opens a new storage object nested within this storage object with the specified name in the specified access mode.", "CreateStream": "Creates and opens a stream object with the specified name contained in this storage object.", "CreateStreamOnHGlobal": "Creates a stream object that uses an HGLOBAL memory handle to store the stream contents.", "Delete": "The Delete method deletes one of the property sets contained in the property set storage object.", "DeleteMultiple": "The DeleteMultiple method deletes as many of the indicated properties as exist in this property set.", "DeletePropertyNames": "The DeletePropertyNames method deletes specified string names from the current property set.", "DestroyElement": "Removes the specified storage or stream from this storage object.", "EndMonitor": "The EndMonitor method ends monitoring of a compound file.", "Enum": "The Enum method creates an enumerator object designed to enumerate data of type STATPROPSTG, which contains information on the current property set.", "EnumElements": "The EnumElements method retrieves a pointer to an enumerator object that can be used to enumerate the storage and stream objects contained within this storage object.", "FillAppend": "The FillAppend method writes a new block of bytes to the end of a byte array.", "FillAt": "The FillAt method writes a new block of data to a specified location in the byte array.", "Flush": "The Flush method ensures that any internal buffers maintained by the ILockBytes implementation are written out to the underlying physical storage.", "FmtIdToPropStgName": "Converts a property set format identifier to its storage or stream name.", "FreePropVariantArray": "The FreePropVariantArray function calls PropVariantClear on each of the PROPVARIANT structures in the rgvars array to make the value zero for each of the members of the array.", "GetConvertStg": "The GetConvertStg function returns the current value of the convert bit for the specified storage object.", "GetHGlobalFromILockBytes": "The GetHGlobalFromILockBytes function retrieves a global memory handle to a byte array object created using the CreateILockBytesOnHGlobal function.", "GetHGlobalFromStream": "The GetHGlobalFromStream function retrieves the global memory handle to a stream that was created through a call to the CreateStreamOnHGlobal function.", "HaveWriteAccess": "The HaveWriteAccess method indicates whether the write lock has been taken.", "LayoutScript": "The LayoutScript method provides explicit directions for reordering the storages, streams, and controls in a compound file to match the order in which they are accessed during the download.", "LockRegion": "The LockRegion method restricts access to a specified range of bytes in the stream.", "MoveElementTo": "The MoveElementTo method copies or moves a substorage or stream from this storage object to another storage object.", "Next": "Retrieves a specified number of STATPROPSTG structures, that follow subsequently in the enumeration sequence.", "OleConvertIStorageToOLESTREAM": "The OleConvertIStorageToOLESTREAM function converts the specified storage object from OLE 2 structured storage to the OLE 1 storage object model but does not include the presentation data.", "OleConvertIStorageToOLESTREAMEx": "The OleConvertIStorageToOLESTREAMEx function converts the specified storage object from OLE 2 structured storage to the OLE 1 storage object model, including the presentation data.", "OleConvertOLESTREAMToIStorage": "Converts the specified object from the OLE 1 storage model to an OLE 2 structured storage object without specifying presentation data.", "OleConvertOLESTREAMToIStorageEx": "The OleConvertOLESTREAMToIStorageEx function converts the specified object from the OLE 1 storage model to an OLE 2 structured storage object including presentation data.", "Open": "Opens a property set contained in the property set storage object.", "OpenStorage": "Opens an existing storage object with the specified name in the specified access mode.", "OpenStream": "Opens an existing stream object within this storage object in the specified access mode.", "PropStgNameToFmtId": "Converts a property set storage or stream name to its format identifier.", "PropVariantClear": "Frees all elements that can be freed in a given PROPVARIANT structure.", "PropVariantCopy": "The PropVariantCopy function copies the contents of one PROPVARIANT structure to another.", "PropVariantInit": "The PropVariantInit function initializes a PROPVARIANT structure.", "Read": "Reads a specified number of bytes from the stream object into memory, starting at the current seek pointer.", "ReadAt": "The ReadAt method reads a specified number of bytes starting at a specified offset from the beginning of the byte array object.", "ReadClassStg": "The ReadClassStg function reads the CLSID previously written to a storage object with the WriteClassStg function.", "ReadClassStm": "Reads the CLSID previously written to a stream object with the WriteClassStm function.", "ReadFmtUserTypeStg": "The ReadFmtUserTypeStg function returns the clipboard format and user type previously saved with the WriteFmtUserTypeStg function.", "ReadMultiple": "Reads specified properties from the current property set.", "ReadPropertyNames": "Retrieves any existing string names for the specified property IDs.", "ReLayoutDocfile": "The ReLayoutDocfile method rewrites the compound file, using the layout script obtained through monitoring, or provided through explicit layout scripting, to create a new compound file.", "ReLayoutDocfileOnILockBytes": "Is not implemented.", "ReleaseWriteAccess": "The ReleaseWriteAccess method releases the write lock previously obtained.", "RenameElement": "The RenameElement method renames the specified substorage or stream in this storage object.", "Reset": "Resets the enumeration sequence to the beginning of the STATPROPSTG structure array.", "Revert": "The Revert method discards all changes to the named property set since it was last opened or discards changes that were last committed to the property set.", "Seek": "Changes the seek pointer to a new location.", "SetClass": "The SetClass method assigns a new CLSID to the current property storage object, and persistently stores the CLSID with the object.", "SetConvertStg": "The SetConvertStg function sets the convert bit in a storage object to indicate that the object is to be converted to a new class when it is opened.", "SetElementTimes": "The SetElementTimes method sets the modification, access, and creation times of the specified storage element, if the underlying file system supports this method.", "SetFillSize": "The SetFillSize method sets the expected size of the byte array.", "SetSize": "Changes the size of the stream object.", "SetStateBits": "The SetStateBits method stores up to 32 bits of state information in this storage object.", "SetTimes": "The SetTimes method sets the modification, access, and creation times of this property set, if supported by the implementation.", "Skip": "Skips the specified number of STATPROPSTG structures in the enumeration sequence.", "Stat": "The Stat method retrieves information about the current open property set.", "StgConvertPropertyToVariant": "Converts a SERIALIZEDPROPERTYVALUE data type to a PROPVARIANT data type.", "StgConvertVariantToProperty": "Converts a PROPVARIANT data type to a SERIALIZEDPROPERTYVALUE data type.", "StgCreateDocfile": "Creates a new compound file storage object using the COM-provided compound file implementation for the IStorage interface.", "StgCreateDocfileOnILockBytes": "Creates and opens a new compound file storage object on top of a byte-array object provided by the caller.", "StgCreatePropSetStg": "Creates a property set storage object from a specified storage object.", "StgCreatePropStg": "Creates and opens a property set in a specified storage or stream object.", "StgCreateStorageEx": "Creates a new storage object using a provided implementation for the IStorage or IPropertySetStorage interfaces.", "StgDeserializePropVariant": "The StgDeserializePropVariant function converts a SERIALIZEDPROPERTYVALUE data type to a PROPVARIANT data type.", "StgGetIFillLockBytesOnFile": "Opens a wrapper object on a temporary file.", "StgGetIFillLockBytesOnILockBytes": "Creates a new wrapper object on a byte array object provided by the caller.", "StgIsStorageFile": "The StgIsStorageFile function indicates whether a particular disk file contains a storage object.", "StgIsStorageILockBytes": "The StgIsStorageILockBytes function indicates whether the specified byte array contains a storage object.", "StgOpenAsyncDocfileOnIFillLockBytes": "Opens an existing root asynchronous storage object on a byte-array wrapper object provided by the caller.", "StgOpenLayoutDocfile": "Opens a compound file on an ILockBytes implementation that is capable of monitoring sector data.", "StgOpenPropStg": "Opens a specified property set in a specified storage or stream object.", "StgOpenStorage": "Opens an existing root storage object in the file system.", "StgOpenStorageEx": "Opens an existing root storage object in the file system.", "StgOpenStorageOnILockBytes": "The StgOpenStorageOnILockBytes function opens an existing storage object that does not reside in a disk file, but instead has an underlying byte array provided by the caller.", "StgPropertyLengthAsVariant": "The StgPropertyLengthAsVariant function examines a SERIALIZEDPROPERTYVALUE and returns the amount of memory that this property would occupy as a PROPVARIANT.", "StgSerializePropVariant": "The StgSerializePropVariant function converts a PROPVARIANT data type to a SERIALIZEDPROPERTYVALUE data type.", "StgSetTimes": "The StgSetTimes function sets the creation, access, and modification times of the indicated file, if supported by the underlying file system.", "SwitchToFile": "The SwitchToFile method copies the current file associated with the storage object to a new file.", "Terminate": "The Terminate method informs the byte array that the download has been terminated, either successfully or unsuccessfully.", "UnlockRegion": "The UnlockRegion method removes the access restriction on a range of bytes previously restricted with IStream::LockRegion.", "WaitForWriteAccess": "The WaitForWriteAccess method obtains exclusive write access to a storage object.", "Write": "Writes a specified number of bytes into the stream object starting at the current seek pointer.", "WriteAt": "The WriteAt method writes the specified number of bytes starting at a specified offset from the beginning of the byte array.", "WriteClassStg": "The WriteClassStg function stores the specified class identifier in a storage object.", "WriteClassStm": "The WriteClassStm function stores the specified CLSID in the stream.", "WriteFmtUserTypeStg": "The WriteFmtUserTypeStg function writes a clipboard format and user type to the storage object.", "WriteMultiple": "Writes a specified group of properties to the current property set.", "WritePropertyNames": "Assigns string IPropertyStoragenames to a specified array of property IDs in the current property set."}