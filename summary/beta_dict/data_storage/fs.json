{"AccessNtmsLibraryDoor": "The AccessNtmsLibraryDoor function unlocks the door of the specified library.", "Add": "Adds an IDiskQuotaUser pointer to the batch list.", "AddLogContainer": "Adds a container to the physical log that is associated with the log handle if the calling process has write access to the.blf file and the ability to create files in the target directory of the container.", "AddLogContainerSet": "Adds multiple log containers to the physical log that is associated with the log handle if the calling process has access to the log handle.", "AddNtmsMediaType": "The AddNtmsMediaType function adds the specified media type to the specified library if there is not currently a relation in the library object.", "AddUserName": "Adds a new quota entry on the volume for the specified user.", "AddUserSid": "Adds a new quota entry on the volume for the specified user.", "AddUsersToEncryptedFile": "Adds user keys to the specified encrypted file.", "AdvanceLogBase": "Advances the base log sequence number of a log stream to the specified LSN.", "AlignReservedLog": "Calculates the sector-aligned reservation size for a set of reserved records.", "AllocateNtmsMedia": "The AllocateNtmsMedia function allocates a piece of available media.", "AllocReservedLog": "Allocates sector-aligned space for a set of reserved records.", "AreFileApisANSI": "Determines whether the file I/O functions are using the ANSI or OEM character set code page.", "BeginNtmsDeviceChangeDetection": "The BeginNtmsDeviceChangeDetection function allows the application to begin a device change detection session.", "BuildIoRingCancelRequest": "Attempts to cancel a previously submitted I/O ring operation.", "BuildIoRingReadFile": "Performs an asynchronous read from a file using an I/O ring.", "BuildIoRingRegisterBuffers": "Registers an array of buffers with the system for future I/O ring operations.", "BuildIoRingRegisterFileHandles": "Registers an array of file handles with the system for future I/O ring operations.", "CancelIo": "Cancels all pending input and output operations that are issued by the calling thread for the specified file.", "CancelIoEx": "Marks any outstanding I / O operations for the specified file handle.", "CancelNtmsLibraryRequest": "The CancelNtmsLibraryRequest function cancels outstanding RSM requests, such as calls to the CleanNtmsDrive function.", "CancelNtmsOperatorRequest": "The CancelNtmsOperatorRequest function cancels the specified RSM operator request.", "CancelSynchronousIo": "Marks pending synchronous I/O operations that are issued by the specified thread as canceled.", "ChangeNtmsMediaType": "The ChangeNtmsMediaType function moves the specified PMID to the specified target media pool and sets the PMID's media type identifier to the media type of the target media pool.", "CheckNameLegalDOS8Dot3A": "Determines whether the specified name can be used to create a file on a FAT file system.", "CheckNameLegalDOS8Dot3W": "Determines whether the specified name can be used to create a file on a FAT file system.", "CLAIMMEDIALABEL": "The ClaimMediaLabel callback function determines whether a specified media label was created by the media's associated application.", "CleanNtmsDrive": "The CleanNtmsDrive function queues a cleaning request for the specified drive for cleaning.", "ClfsLsnEqual": "Determines whether two LSNs from the same stream are equal.", "ClfsLsnGreater": "Determines whether one LSN is greater than another LSN.", "ClfsLsnLess": "Determines whether one LSN is less than another LSN.", "ClfsLsnNull": "Determines whether a specified LSN is equal to the smallest possible LSN, which is CLFS_LSN_NULL.", "Clone": "Creates another enumerator of user quota entries that contains the same enumeration state as the current one.", "CloseAndResetLogFile": "Resets the log file and then shuts the log.", "CloseEncryptedFileRaw": "Closes an encrypted file after a backup or restore operation, and frees associated system resources.", "CloseIoRing": "Closes an HIORING handle that was previously opened with a call to CreateIoRing.", "CloseNtmsNotification": "The CloseNtmsNotification function closes the specified open notification channel.", "CloseNtmsSession": "The CloseNtmsSession function closes the specified RSM session.", "CommitComplete": "Indicates that a resource manager.", "CommitEnlistment": "Commits the transaction associated with this enlistment handle.", "CommitTransaction": "Requests that the specified transaction be committed.", "CommitTransactionAsync": "Requests that the specified transaction be committed.", "CopyFile": "Copies an existing file to a new file.", "CopyFile2": "Copies an existing file to a new file, notifying the application of its progress through a callback function.", "CopyFileA": "Copies an existing file to a new file.", "CopyFileExA": "Copies an existing file to a new file, notifying the application of its progress through a callback function.", "CopyFileExW": "Copies an existing file to a new file, notifying the application of its progress through a callback function.", "CopyFileFromAppW": "Copies an existing file to a new file.", "CopyFileTransactedA": "Copies an existing file to a new file as a transacted operation, notifying the application of its progress through a callback function.", "CopyFileTransactedW": "Copies an existing file to a new file as a transacted operation, notifying the application of its progress through a callback function.", "CopyFileW": "Copies an existing file to a new file.", "CreateDirectory": "Creates a new directory.", "CreateDirectoryA": "Creates a new directory.", "CreateDirectoryExA": "Creates a new directory with the attributes of a specified template directory.", "CreateDirectoryExW": "Creates a new directory with the attributes of a specified template directory.", "CreateDirectoryFromAppW": "Creates a new directory.", "CreateDirectoryTransactedA": "Creates a new directory as a transacted operation, with the attributes of a specified template directory.", "CreateDirectoryTransactedW": "Creates a new directory as a transacted operation, with the attributes of a specified template directory.", "CreateDirectoryW": "Creates a new directory.", "CreateEnlistment": "Creates an enlistment, sets its initial state, and opens a handle to the enlistment with the specified access.", "CreateEnumUsers": "Creates an enumerator object for enumerating quota users on the volume.", "CreateFile2": "Creates or opens a file or I/O device.", "CreateFile2FromAppW": "Creates or opens a file or I / O device.", "CreateFileA": "Creates or opens a file or I / O device.", "CreateFileFromAppW": "Creates or opens a file or I / O device.", "CreateFileTransactedA": "Creates or opens a file, file stream, or directory as a transacted operation.", "CreateFileTransactedW": "Creates or opens a file, file stream, or directory as a transacted operation.", "CreateFileW": "Creates or opens a file or I / O device.", "CreateHardLinkA": "Establishes a hard link between an existing file and a new file.", "CreateHardLinkTransactedA": "Establishes a hard link between an existing file and a new file as a transacted operation.", "CreateHardLinkTransactedW": "Establishes a hard link between an existing file and a new file as a transacted operation.", "CreateHardLinkW": "Establishes a hard link between an existing file and a new file.", "CreateIoCompletionPort": "Creates an input/output completion port and associates it with a specified file handle, or creates an I/O completion port that is not yet associated with a file handle, allowing association at a later time.", "CreateIoRing": "Creates a new instance of an I/O ring submission/completion queue pair and returns a handle for referencing the I/O ring.", "CreateLogContainerScanContext": "Creates a scan context to use with ScanLogContainers to enumerate all log containers that are associated with a log, and performs the first scan.", "CreateLogFile": "Creates or opens a log.", "CreateLogMarshallingArea": "Creates a marshaling area for a log, and when successful it returns a marshaling context.", "CreateNtmsMediaA": "The CreateNtmsMedia function creates a PMID and side for a new piece of offline media.", "CreateNtmsMediaPool": "The CreateNtmsMediaPool function creates a new application media pool.", "CreateNtmsMediaPoolA": "The CreateNtmsMediaPool function creates a new application media pool.", "CreateNtmsMediaPoolW": "The CreateNtmsMediaPool function creates a new application media pool.", "CreateNtmsMediaW": "The CreateNtmsMedia function creates a PMID and side for a new piece of offline media.", "CreateResourceManager": "Creates a new resource manager.", "CreateSymbolicLinkA": "Creates a symbolic link.", "CreateSymbolicLinkTransactedA": "Creates a symbolic link as a transacted operation.", "CreateSymbolicLinkTransactedW": "Creates a symbolic link as a transacted operation.", "CreateSymbolicLinkW": "Creates a symbolic link.", "CreateTransaction": "Creates a new transaction object.", "CreateTransactionManager": "Creates a new transaction manager object and returns a handle with the specified access.", "CreateUserBatch": "Creates a batching object for optimizing updates to the quota settings of multiple users simultaneously.", "DeallocateNtmsMedia": "The DeallocateNtmsMedia function deallocates the side associated with the specified logical media.", "DecommissionNtmsMedia": "The DecommissionNtmsMedia function moves a side from the Available state to the Decommissioned state.", "DecryptFileA": "Decrypts an encrypted file or directory.", "DecryptFileW": "Decrypts an encrypted file or directory.", "DefineDosDeviceA": "Defines, redefines, or deletes MS-DOS device names.", "DefineDosDeviceW": "Defines, redefines, or deletes MS-DOS device names.", "DeleteFile": "Deletes an existing file.", "DeleteFileA": "Deletes an existing file.", "DeleteFileFromAppW": "Deletes an existing file.", "DeleteFileTransactedA": "Deletes an existing file as a transacted operation.", "DeleteFileTransactedW": "Deletes an existing file as a transacted operation.", "DeleteFileW": "Deletes an existing file.", "DeleteLogByHandle": "Marks the specified log for deletion.", "DeleteLogFile": "Marks a log for deletion.", "DeleteLogMarshallingArea": "Deletes a marshaling area that is created by a successful call to CreateLogMarshallingArea.", "DeleteNtmsDrive": "The DeleteNtmsDrive function deletes a drive from the RSM database.", "DeleteNtmsLibrary": "The DeleteNtmsLibrary function deletes a library, and all the devices contained in the library, from the RSM database.", "DeleteNtmsMedia": "The DeleteNtmsMedia function deletes a physical piece of offline media from RSM by removing all references to the specified media from the database.", "DeleteNtmsMediaPool": "The DeleteNtmsMediaPool function deletes the specified application media pool.", "DeleteNtmsMediaType": "The DeleteNtmsMediaType function deletes the specified media type relation from the specified library, provided that the library does not contain any physical media objects of the specified media type.", "DeleteNtmsRequests": "The DeleteNtmsRequests function deletes a request or a list of requests from the RSM database.", "DeleteUser": "Removes a user entry from the volume quota information file.", "DeleteVolumeMountPointA": "Deletes a drive letter or mounted folder.", "DeleteVolumeMountPointW": "Deletes a drive letter or mounted folder.", "DeregisterManageableLogClient": "Deregisters a client with the log manager.", "DisableNtmsObject": "The DisableNtmsObject function disables the specified RSM object.", "DismountNtmsDrive": "The DismountNtmsDrive function queues a command to move the media in the specified drive to its storage slot.", "DismountNtmsMedia": "The DismountNtmsMedia function queues a command to move the specified media in a drive to its storage.", "DumpLogRecords": "Scans a specified log; filters log records based on record type; and places the records in an output file stream that the caller opens.", "DuplicateEncryptionInfoFile": "Copies the EFS metadata from one file or directory to another.", "EjectDiskFromSADriveA": "The EjectDiskFromSADrive function ejects the media that is in a standalone removable drive.", "EjectDiskFromSADriveW": "The EjectDiskFromSADrive function ejects the media that is in a standalone removable drive.", "EjectNtmsCleaner": "The EjectNtmsCleaner function ejects the cleaning cartridge from the currently reserved cleaner slot.", "EjectNtmsMedia": "The EjectNtmsMedia function ejects the specified medium from the port of the current library.", "EnableNtmsObject": "The EnableNtmsObject function enables the specified object.", "EncryptFileA": "Encrypts a file or directory.", "EncryptFileW": "Encrypts a file or directory.", "EncryptionDisable": "Disables or enables encryption of the specified directory and the files in it.", "EndNtmsDeviceChangeDetection": "The EndNtmsDeviceChangeDetection function ends device change detection for any target devices specified using the SetNtmsDeviceChangeDetection function and closes the change detection handle.", "EnumerateNtmsObject": "The EnumerateNtmsObject function enumerates the RSM objects contained in the lpContainerId parameter.", "ExportNtmsDatabase": "The ExportNtmsDatabase function creates a consistent set of database files in the RSM database directory.", "FileEncryptionStatusA": "Retrieves the encryption status of the specified file.", "FileEncryptionStatusW": "Retrieves the encryption status of the specified file.", "FindClose": "Closes a file search handle opened by the FindFirstFile, FindFirstFileEx, FindFirstFileNameW, FindFirstFileNameTransactedW, FindFirstFileTransacted, FindFirstStreamTransactedW, or FindFirstStreamW functions.", "FindCloseChangeNotification": "Stops change notification handle monitoring.", "FindFirstChangeNotificationA": "Creates a change notification handle and sets up initial change notification filter conditions.", "FindFirstChangeNotificationW": "Creates a change notification handle and sets up initial change notification filter conditions.", "FindFirstFileA": "Searches a directory for a file or subdirectory with a name that matches a specific name.", "FindFirstFileExA": "Searches a directory for a file or subdirectory with a name and attributes that match those specified.", "FindFirstFileExFromAppW": "Searches a directory for a file or subdirectory with a name and attributes that match those specified.", "FindFirstFileExW": "Searches a directory for a file or subdirectory with a name and attributes that match those specified.", "FindFirstFileNameTransactedW": "Creates an enumeration of all the hard links to the specified file as a transacted operation.", "FindFirstFileNameW": "Creates an enumeration of all the hard links to the specified file.", "FindFirstFileTransactedA": "Searches a directory for a file or subdirectory with a name that matches a specific name as a transacted operation.", "FindFirstFileTransactedW": "Searches a directory for a file or subdirectory with a name that matches a specific name as a transacted operation.", "FindFirstFileW": "Searches a directory for a file or subdirectory with a name that matches a specific name.", "FindFirstStreamTransactedW": "Enumerates the first stream in the specified file or directory as a transacted operation.", "FindFirstStreamW": "Enumerates the first stream with a ::$DATA stream type in the specified file or directory.", "FindFirstVolumeA": "Retrieves the name of a volume on a computer.", "FindFirstVolumeMountPointA": "Retrieves the name of a mounted folder on the specified volume.", "FindFirstVolumeMountPointW": "Retrieves the name of a mounted folder on the specified volume.", "FindFirstVolumeW": "Retrieves the name of a volume on a computer.", "FindNextChangeNotification": "Requests that the operating system signal a change notification handle the next time it detects an appropriate change.", "FindNextFileA": "Continues a file search from a previous call to the FindFirstFile, FindFirstFileEx, or FindFirstFileTransacted functions.", "FindNextFileNameW": "Continues enumerating the hard links to a file using the handle returned by a successful call to the FindFirstFileNameW function.", "FindNextFileW": "Continues a file search from a previous call to the FindFirstFile, FindFirstFileEx, or FindFirstFileTransacted functions.", "FindNextStreamW": "Continues a stream search started by a previous call to the FindFirstStreamW function.", "FindNextVolumeA": "Continues a volume search started by a call to the FindFirstVolume function.", "FindNextVolumeMountPointA": "Continues a mounted folder search started by a call to the FindFirstVolumeMountPoint function.", "FindNextVolumeMountPointW": "Continues a mounted folder search started by a call to the FindFirstVolumeMountPoint function.", "FindNextVolumeW": "Continues a volume search started by a call to the FindFirstVolume function.", "FindUserName": "Locates a specific entry in the volume quota information.", "FindUserSid": "Locates a specific user entry in the volume quota information.", "FindVolumeClose": "Closes the specified volume search handle.", "FindVolumeMountPointClose": "Closes the specified mounted folder search handle.", "FlushLogBuffers": "Forces all records appended to this marshaling area to be flushed to disk.", "FlushLogToLsn": "Forces all records appended to this marshaling area up to the record with the specified log sequence number to be flushed to the disk.", "FlushToDisk": "Writes user object changes to disk in a single call to the underlying file system.", "FreeEncryptionCertificateHashList": "Frees a certificate hash list.", "FreeReservedLog": "Reduces the number of reserved log records in a marshaling area made by calling ReserveAndAppendLog, ReserveAndAppendLogAligned, or AllocReservedLog.", "GetAccountStatus": "Retrieves the status of the user object's account.", "GetBinaryTypeA": "Determines whether a file is an executable file, and if so, which subsystem runs the executable file.", "GetBinaryTypeW": "Determines whether a file is an executable file, and if so, which subsystem runs the executable file.", "GetCompressedFileSizeA": "Retrieves the actual number of bytes of disk storage used to store a specified file.", "GetCompressedFileSizeTransactedA": "Retrieves the actual number of bytes of disk storage used to store a specified file as a transacted operation.", "GetCompressedFileSizeTransactedW": "Retrieves the actual number of bytes of disk storage used to store a specified file as a transacted operation.", "GetCompressedFileSizeW": "Retrieves the actual number of bytes of disk storage used to store a specified file.", "GetCurrentClockTransactionManager": "Obtains a virtual clock value from a transaction manager.", "GetCurrentDirectory": "Retrieves the current directory for the current process.", "GetDefaultQuotaLimit": "Retrieves the default quota limit for the volume.", "GetDefaultQuotaLimitText": "Retrieves the default quota limit for the volume.", "GetDefaultQuotaThreshold": "Retrieves the default quota warning threshold for the volume.", "GetDefaultQuotaThresholdText": "Retrieves the default warning threshold for the volume.", "GetDiskFreeSpaceA": "Retrieves information about the specified disk, including the amount of free space on the disk.", "GetDiskFreeSpaceExA": "Retrieves information about the amount of space that is available on a disk volume, which is the total amount of space, the total amount of free space, and the total amount of free space available to the user that is associated with the calling thread.", "GetDiskFreeSpaceExW": "Retrieves information about the amount of space that is available on a disk volume, which is the total amount of space, the total amount of free space, and the total amount of free space available to the user that is associated with the calling thread.", "GetDiskFreeSpaceW": "Retrieves information about the specified disk, including the amount of free space on the disk.", "GetDriveTypeA": "Determines whether a disk drive is a removable, fixed, CD-ROM, RAM disk, or network drive.", "GetDriveTypeW": "Determines whether a disk drive is a removable, fixed, CD-ROM, RAM disk, or network drive.", "GetEnlistmentId": "Obtains the identifier for the specified enlistment.", "GetEnlistmentRecoveryInformation": "Retrieves an opaque structure of recovery data from KTM.", "GetExpandedNameA": "Retrieves the original name of a compressed file, if the file was compressed by the Lempel-Ziv algorithm.", "GetExpandedNameW": "Retrieves the original name of a compressed file, if the file was compressed by the Lempel-Ziv algorithm.", "GetFileAttributesA": "Retrieves file system attributes for a specified file or directory.", "GetFileAttributesExA": "Retrieves attributes for a specified file or directory.", "GetFileAttributesExFromAppW": "Retrieves attributes for a specified file or directory.", "GetFileAttributesExW": "Retrieves attributes for a specified file or directory.", "GetFileAttributesTransactedA": "Retrieves file system attributes for a specified file or directory as a transacted operation.", "GetFileAttributesTransactedW": "Retrieves file system attributes for a specified file or directory as a transacted operation.", "GetFileAttributesW": "Retrieves file system attributes for a specified file or directory.", "GetFileBandwidthReservation": "Retrieves the bandwidth reservation properties of the volume on which the specified file resides.", "GetFileInformationByHandle": "Retrieves file information for the specified file.", "GetFileInformationByHandleEx": "Retrieves file information for the specified file.", "GetFileSize": "Retrieves the size of the specified file, in bytes.", "GetFileSizeEx": "Retrieves the size of the specified file.", "GetFileType": "Retrieves the file type of the specified file.", "GetFinalPathNameByHandleA": "Retrieves the final path for the specified file.", "GetFinalPathNameByHandleW": "Retrieves the final path for the specified file.", "GetFullPathNameA": "Retrieves the full path and file name of the specified file.", "GetFullPathNameTransactedA": "Retrieves the full path and file name of the specified file as a transacted operation.", "GetFullPathNameTransactedW": "Retrieves the full path and file name of the specified file as a transacted operation.", "GetFullPathNameW": "Retrieves the full path and file name of the specified file.", "GetID": "Retrieves a unique identifier number for the DiskQuotaUser object.", "GetIoRingInfo": "Gets information about the API version and queue sizes of an I/O ring.", "GetLogContainerName": "Retrieves the full path name of the specified container.", "GetLogFileInformation": "Returns a buffer that contains metadata about a specified log and its current state, which is defined by the CLFS_INFORMATION structure.", "GetLogicalDrives": "Retrieves a bitmask representing the currently available disk drives.", "GetLogicalDriveStringsA": "Fills a buffer with strings that specify valid drives in the system.", "GetLogicalDriveStringsW": "Fills a buffer with strings that specify valid drives in the system.", "GetLogIoStatistics": "Retrieves log I/O statistics for a dedicated or multiplexed log that is associated with the specified handle.", "GetLongPathNameA": "Converts the specified path to its long form.", "GetLongPathNameTransactedA": "Converts the specified path to its long form as a transacted operation.", "GetLongPathNameTransactedW": "Converts the specified path to its long form as a transacted operation.", "GetLongPathNameW": "Converts the specified path to its long form.", "GetName": "Retrieves the name strings associated with a disk quota user.", "GetNextLogArchiveExtent": "Retrieves the next set of archive extents in a log archive context.", "GetNotificationResourceManager": "Requests and receives a notification for a resource manager.", "GetNotificationResourceManagerAsync": "Requests and receives asynchronous notification for a resource manager.", "GetNtmsMediaPoolNameA": "The GetNtmsMediaPoolName function retrieves the specified media pool's full name hierarchy.", "GetNtmsMediaPoolNameW": "The GetNtmsMediaPoolName function retrieves the specified media pool's full name hierarchy.", "GetNtmsObjectAttributeA": "The GetNtmsObjectAttribute function retrieves the extended attribute from the specified RSM object.", "GetNtmsObjectAttributeW": "The GetNtmsObjectAttribute function retrieves the extended attribute from the specified RSM object.", "GetNtmsObjectInformation": "The GetNtmsObjectInformation function returns an object's information structure for the specified object.", "GetNtmsObjectInformationA": "The GetNtmsObjectInformation function returns an object's information structure for the specified object.", "GetNtmsObjectInformationW": "The GetNtmsObjectInformation function returns an object's information structure for the specified object.", "GetNtmsObjectSecurity": "The GetNtmsObjectSecurity function reads the security descriptor for the specified RSM object.", "GetNtmsRequestOrder": "The GetNtmsRequestOrder function gets the order that the specified request will be processed in the library queue.", "GetNtmsUIOptionsA": "The GetNtmsUIOptions function obtains the list of computer names to which the specified type of user interface is being directed for the given object.", "GetNtmsUIOptionsW": "The GetNtmsUIOptions function obtains the list of computer names to which the specified type of user interface is being directed for the given object.", "GetQueuedCompletionStatus": "Attempts to dequeue an I/O completion packet from the specified I/O completion port.", "GetQueuedCompletionStatusEx": "Retrieves multiple completion port entries simultaneously.", "GetQuotaInformation": "Retrieves the values for the user's warning threshold, hard quota limit, and quota used.", "GetQuotaLimit": "Retrieves the user's quota limit value on the volume.", "GetQuotaLimitText": "Retrieves the user's quota limit for the volume.", "GetQuotaLogFlags": "Retrieves the flags that control the logging of user-related quota events on the volume.", "GetQuotaState": "Retrieves a set of flags describing the state of the quota system.", "GetQuotaThreshold": "Retrieves the user's warning threshold value on the volume.", "GetQuotaThresholdText": "Retrieves the user's warning threshold for the volume.", "GetQuotaUsed": "Retrieves the user's quota used value on the volume.", "GetQuotaUsedText": "Retrieves the user's quota used value for the volume.", "GetShortPathNameA": "Retrieves the short path form of the specified path.", "GetShortPathNameW": "Retrieves the short path form of the specified path.", "GetSid": "Retrieves the user's security identifier.", "GetSidLength": "Retrieves the length of the user's security identifier, in bytes.", "GetTempFileName": "Creates a name for a temporary file.", "GetTempFileNameA": "Creates a name for a temporary file.", "GetTempFileNameW": "Creates a name for a temporary file.", "GetTempPath2A": "Retrieves the path of the directory designated for temporary files, based on the privileges of the calling process.", "GetTempPath2W": "Retrieves the path of the directory designated for temporary files, based on the privileges of the calling process.", "GetTempPathA": "Retrieves the path of the directory designated for temporary files.", "GetTempPathW": "Retrieves the path of the directory designated for temporary files.", "GetTransactionId": "Obtains the identifier for the specified transaction.", "GetTransactionInformation": "Returns the requested information about the specified transaction.", "GetTransactionManagerId": "Obtains an identifier for the specified transaction manager.", "GetVolumeInformationA": "Retrieves information about the file system and volume associated with the specified root directory.", "GetVolumeInformationByHandleW": "Retrieves information about the file system and volume associated with the specified file.", "GetVolumeInformationW": "Retrieves information about the file system and volume associated with the specified root directory.", "GetVolumeNameForVolumeMountPointA": "Retrieves a volume GUID path for the volume that is associated with the specified volume mount point.", "GetVolumeNameForVolumeMountPointW": "Retrieves a volume GUID path for the volume that is associated with the specified volume mount point.", "GetVolumePathNameA": "Retrieves the volume mount point where the specified path is mounted.", "GetVolumePathNamesForVolumeNameA": "Retrieves a list of drive letters and mounted folder paths for the specified volume.", "GetVolumePathNamesForVolumeNameW": "Retrieves a list of drive letters and mounted folder paths for the specified volume.", "GetVolumePathNameW": "Retrieves the volume mount point where the specified path is mounted.", "GetVolumesFromDriveA": "The GetVolumesFromDrive function retrieves the volume and drive letter for a given removable storage media drive.", "GetVolumesFromDriveW": "The GetVolumesFromDrive function retrieves the volume and drive letter for a given removable storage media drive.", "GiveUserNameResolutionPriority": "Promotes the specified user object to the head of the queue so that it is next in line for resolution.", "HandleLogFull": "Called by a managed log client when an attempt to reserve or append to a log fails with a log full error message.", "IdentifyNtmsSlot": "The IdentifyNtmsSlot function identifies the media in the specified slot in a library.", "ImportNtmsDatabase": "The ImportNtmsDatabase function causes RSM to import the database files from the database Export directory at the next restart of the RSM.", "Initialize": "Initializes a new DiskQuotaControl object by opening the NTFS file system volume with the requested access rights.", "InjectNtmsCleaner": "The InjectNtmsCleaner function allows a cleaner cartridge to be inserted into the specified library unit.", "InjectNtmsMedia": "The InjectNtmsMedia function allows media to be inserted into the port of the specified library.", "InstallLogPolicy": "Installs a policy for a log.", "Invalidate": "Invalidates the quota information stored in the quota user object.", "InvalidateSidNameCache": "Invalidates the contents of the system's SID-to-name cache so subsequent requests for new user objects must obtain user names from the domain controller.", "InventoryNtmsLibrary": "The InventoryNtmsLibrary function queues an inventory of the specified library.", "IoRingBufferRefFromIndexAndOffset": "Creates an instance of the IORING_BUFFER_REF structure with the provided buffer index and offset.", "IoRingBufferRefFromPointer": "Creates an instance of the IORING_BUFFER_REF structure from the provided pointer.", "IoRingHandleRefFromHandle": "Creates an instance of the IORING_HANDLE_REF structure from the provided file handle.", "IoRingHandleRefFromIndex": "Creates an instance of the IORING_HANDLE_REF structure from the provided index.", "IsIoRingOpSupported": "Queries the support of the specified operation for the specified I/O ring.", "IsReparseTagMicrosoft": "Determines whether a reparse point tag indicates a Microsoft reparse point.", "IsReparseTagNameSurrogate": "Determines whether a tag's associated reparse point is a surrogate for another named entity.", "LockFile": "Locks the specified file for exclusive access by the calling process.", "LockFileEx": "Locks the specified file for exclusive access by the calling process.", "LogTailAdvanceFailure": "The LogTailAdvanceFailure function is called by a log client to indicate that it cannot comply with a request from log management to advance its tail.", "LPOVERLAPPED_COMPLETION_ROUTINE": "An application-defined callback function used with the ReadFileEx and WriteFileEx functions.", "LPPROGRESS_ROUTINE": "An application-defined callback function used with the CopyFileEx, MoveFileTransacted, and MoveFileWithProgress functions.", "LsnBlockOffset": "Returns the sector-aligned block offset that is contained in the specified LSN.", "LsnContainer": "Retrieves the logical container ID that is contained in a specified LSN.", "LsnCreate": "Creates a log sequence number, given a container ID, a block offset, and a record sequence number.", "LsnRecordSequence": "Retrieves the record sequence number that is contained in a specified LSN.", "LZClose": "Closes a file that was opened by using the LZOpenFile function.", "LZCopy": "Copies a source file to a destination file.", "LZInit": "Allocates memory for the internal data structures required to decompress files, and then creates and initializes them.", "LZOpenFileA": "Creates, opens, reopens, or deletes the specified file.", "LZOpenFileW": "Creates, opens, reopens, or deletes the specified file.", "LZRead": "Reads the specified number of bytes from a file and copies them into a buffer.", "LZSeek": "Moves a file pointer the specified number of bytes from a starting position.", "MAXMEDIALABEL": "The MaxMediaLabel callback function determines the maximum size of the media label for the applications supported by the media label library.", "MountNtmsMedia": "The MountNtmsMedia function synchronously mounts one or more pieces of media.", "MoveFile": "Moves an existing file or a directory, including its children.", "MoveFileA": "Moves an existing file or a directory, including its children.", "MoveFileFromAppW": "Moves an existing file or a directory, including its children.", "MoveFileW": "Moves an existing file or a directory, including its children.", "MoveFileWithProgressA": "Moves a file or directory, including its children.", "MoveFileWithProgressW": "Moves a file or directory, including its children.", "MoveToNtmsMediaPool": "The MoveToNtmsMediaPool function moves the specified medium from its current media pool to the specified media pool.", "NetConnectionEnum": "Lists all connections made to a shared resource on the server or all connections established from a particular computer.", "NetFileClose": "Forces a resource to close.", "NetFileEnum": "Returns information about some or all open files on a server, depending on the parameters specified.", "NetFileGetInfo": "Retrieves information about a particular opening of a server resource.", "NetSessionDel": "Ends a network session between a server and a workstation.", "NetSessionEnum": "Provides information about sessions established on a server.", "NetSessionGetInfo": "Retrieves information about a session established between a particular server and workstation.", "NetShareAdd": "Shares a server resource.", "NetShareCheck": "Checks whether or not a server is sharing a device.", "NetShareDel": "Deletes a share name from a server's list of shared resources, disconnecting all connections to the shared resource.", "NetShareDelEx": "Deletes a share name from a server's list of shared resources, which disconnects all connections to that share.", "NetShareEnum": "Retrieves information about each shared resource on a server.", "NetShareGetInfo": "Retrieves information about a particular shared resource on a server.", "NetShareSetInfo": "Sets the parameters of a shared resource.", "NetStatisticsGet": "Retrieves operating statistics for a service.", "Next": "Retrieves the specified number of user quota entries that are next in the enumeration sequence.", "OnUserNameChanged": "Notifies the client's connection sink whenever a user's SID has been asynchronously resolved.", "OpenEncryptedFileRawA": "Opens an encrypted file in order to backup the file.", "OpenEncryptedFileRawW": "Opens an encrypted file in order to backup the file.", "OpenEnlistment": "Opens an existing enlistment object, and returns a handle to the enlistment.", "OpenFile": "Creates, opens, reopens, or deletes a file.", "OpenFileById": "Opens the file that matches the specified identifier.", "OpenNtmsNotification": "The OpenNtmsNotification function opens a channel to receive RSM object change notifications for objects of the specified type.", "OpenNtmsSessionA": "The OpenNtmsSession function sets up a session with a RSM server.", "OpenNtmsSessionW": "The OpenNtmsSession function sets up a session with a RSM server.", "OpenResourceManager": "Opens an existing resource manager.", "OpenTransaction": "Opens an existing transaction.", "OpenTransactionManager": "Opens an existing transaction manager.", "OpenTransactionManagerById": "Opens an existing transaction manager.", "PCOPYFILE2_PROGRESS_ROUTINE": "An application-defined callback function used with the CopyFile2 function.", "PFE_EXPORT_FUNC": "An application-defined callback function used with ReadEncryptedFileRaw.", "PFE_IMPORT_FUNC": "An application-defined callback function used with WriteEncryptedFileRaw.", "PLOG_FULL_HANDLER_CALLBACK": "The LOG_FULL_HANDLER_CALLBACK function is an application-defined callback function that receives notification that the call to HandleLogFull is complete.", "PLOG_TAIL_ADVANCE_CALLBACK": "The LOG_TAIL_ADVANCE_CALLBACK function is an application-defined callback function that advances the log tail.", "PLOG_UNPINNED_CALLBACK": "The LOG_UNPINNED_CALLBACK function is an application-defined callback function that receives notification that the log has become unpinned.", "PopIoRingCompletion": "Pops a single entry from the completion queue, if one is available.", "PostQueuedCompletionStatus": "Posts an I/O completion packet to an I/O completion port.", "PrepareComplete": "Indicates that the resource manager has completed all processing necessary to guarantee that a commit or abort operation will succeed for the specified transaction.", "PrepareEnlistment": "Prepares the transaction associated with this enlistment handle.", "PrepareLogArchive": "Prepares a physical log for archival.", "PrePrepareComplete": "Signals that this resource manager has completed its prepare work, so that other resource managers can now begin their prepare operations.", "PrePrepareEnlistment": "Pre-prepares the transaction associated with this enlistment handle.", "QueryDosDeviceA": "Retrieves information about MS-DOS device names.", "QueryDosDeviceW": "Retrieves information about MS-DOS device names.", "QueryIoRingCapabilities": "Queries the OS for the supported capabilities for IORINGs.", "QueryLogPolicy": "The QueryLogPolicy function allows you to obtain a policy that is installed for the specified log.", "QueryRecoveryAgentsOnEncryptedFile": "Retrieves a list of recovery agents for the specified file.", "QueryUsersOnEncryptedFile": "Retrieves a list of users for the specified file.", "ReadDirectoryChangesExW": "Retrieves information that describes the changes within the specified directory, which can include extended information if that information type is specified.", "ReadDirectoryChangesW": "Retrieves information that describes the changes within the specified directory.", "ReadEncryptedFileRaw": "Backs up encrypted files.", "ReadFile": "Reads data from the specified file or input / output device.", "ReadFileEx": "Reads data from the specified file or input / output device.", "ReadFileScatter": "Reads data from a file and stores it in an array of buffers.", "ReadLogArchiveMetadata": "Copies a range of the archive view of the metadata to the specified buffer.", "ReadLogNotification": "Retrieves notifications from the log manager.", "ReadLogRecord": "Initiates a sequence of reads from a specified log sequence number in one of three modes, and returns the first of the specified log records and a read context.", "ReadLogRestartArea": "Returns the last restart area that is written successfully to the log associated with the marshaling area of WriteLogRestartArea.", "ReadNextLogRecord": "Reads the next record in a sequence that is initiated by a call to ReadLogRecord or ReadLogRestartArea.", "ReadOnlyEnlistment": "Requests that the specified enlistment be converted to a read-only enlistment.", "ReadPreviousLogRestartArea": "Reads the previous log restart area that is relative to the current restart record specified in the read context, pvReadContext.", "RecoverEnlistment": "Recovers an enlistment's state.", "RecoverResourceManager": "Recovers a resource manager's state from its log file.", "RecoverTransactionManager": "Recovers a transaction manager's state from its log file.", "RegisterForLogWriteNotification": "The RegisterForLogWriteNotification function is called by a managed log client to enable or disable log write notifications.", "RegisterManageableLogClient": "Registers a client with the log manager.", "ReleaseNtmsCleanerSlot": "The ReleaseNtmsCleanerSlot function removes an existing slot reservation for a cleaning cartridge.", "Remove": "Removes an IDiskQuotaUser pointer from the batch list.", "RemoveAll": "Removes all IDiskQuotaUser pointers from the batch list.", "RemoveDirectoryA": "Deletes an existing empty directory.", "RemoveDirectoryFromAppW": "Deletes an existing empty directory.", "RemoveDirectoryTransactedA": "Deletes an existing empty directory as a transacted operation.", "RemoveDirectoryTransactedW": "Deletes an existing empty directory as a transacted operation.", "RemoveDirectoryW": "Deletes an existing empty directory.", "RemoveLogContainer": "Removes one container from a log that is associated with a dedicated or multiplexed log handle.", "RemoveLogContainerSet": "Removes multiple containers from a log that is associated with a dedicated or multiplexed log handle.", "RemoveLogPolicy": "Resets the specified policy to its default behavior.", "RemoveUsersFromEncryptedFile": "Removes specified certificate hashes from a specified file.", "RenameTransactionManager": "Renames a transaction manager object.", "ReOpenFile": "Reopens the specified file system object with different access rights, sharing mode, and flags.", "ReplaceFileA": "Replaces one file with another file, with the option of creating a backup copy of the original file.", "ReplaceFileFromAppW": "Replaces one file with another file, with the option of creating a backup copy of the original file.", "ReplaceFileW": "Replaces one file with another file, with the option of creating a backup copy of the original file.", "ReserveAndAppendLog": "Reserves space for log buffers, or appends a log record to the log, or does both.", "ReserveAndAppendLogAligned": "Reserves space for log buffers, or appends a log record to the log, or both.", "ReserveNtmsCleanerSlot": "The ReserveNtmsCleanerSlot function reserves a single slot in a library unit for a drive cleaner cartridge.", "Reset": "Resets the enumeration sequence to the beginning of the set of user quota entries.", "RollbackComplete": "Indicates that the resource manager has successfully completed rolling back a transaction.", "RollbackEnlistment": "Rolls back the specified transaction that is associated with an enlistment.", "RollbackTransaction": "Requests that the specified transaction be rolled back.", "RollbackTransactionAsync": "Requests that the specified transaction be rolled back.", "RollforwardTransactionManager": "Recovers information only to the specified virtual clock value.", "SatisfyNtmsOperatorRequest": "The SatisfyNtmsOperatorRequest function completes the specified RSM operator request.", "ScanLogContainers": "Enumerates log containers.", "SearchPathA": "Searches for a specified file in a specified path.", "SearchPathW": "Searches for a specified file in a specified path.", "SetCurrentDirectory": "Changes the current directory for the current process.", "SetDefaultQuotaLimit": "Modifies the default quota limit.", "SetDefaultQuotaThreshold": "Modifies the default warning threshold.", "SetEndOfFile": "Sets the physical file size for the specified file to the current position of the file pointer.", "SetEndOfLog": "This function has been deprecated.", "SetEnlistmentRecoveryInformation": "Sets an opaque, user-defined structure of recovery data from KTM.", "SetFileApisToANSI": "Causes the file I/O functions to use the ANSI character set code page for the current process.", "SetFileApisToOEM": "Causes the file I/O functions for the process to use the OEM character set code page.", "SetFileAttributesA": "Sets the attributes for a file or directory.", "SetFileAttributesFromAppW": "Sets the attributes for a file or directory.", "SetFileAttributesTransactedA": "Sets the attributes for a file or directory as a transacted operation.", "SetFileAttributesTransactedW": "Sets the attributes for a file or directory as a transacted operation.", "SetFileAttributesW": "Sets the attributes for a file or directory.", "SetFileBandwidthReservation": "Requests that bandwidth for the specified file stream be reserved.", "SetFileCompletionNotificationModes": "Sets the notification modes for a file handle, allowing you to specify how completion notifications work for the specified file.", "SetFileInformationByHandle": "Sets the file information for the specified file.", "SetFileIoOverlappedRange": "Associates a virtual address range with the specified file handle.", "SetFilePointer": "Moves the file pointer of the specified file.", "SetFilePointerEx": "Moves the file pointer of the specified file.", "SetFileShortNameA": "Sets the short name for the specified file.", "SetFileShortNameW": "Sets the short name for the specified file.", "SetFileValidData": "Sets the valid data length of the specified file.", "SetLogArchiveMode": "Enables or disables log archive support for a specified log.", "SetLogArchiveTail": "Sets the last archived log sequence number or archive tail of an archivable log.", "SetLogFileSizeWithPolicy": "Adds or deletes containers from a log based on the state of the installed policies.", "SetNtmsDeviceChangeDetection": "The SetNtmsDeviceChangeDetection function sets one or more target devices for change detection.", "SetNtmsMediaComplete": "The SetNtmsMediaComplete function marks a piece of logical media as complete.", "SetNtmsObjectAttributeA": "The SetNtmsObjectAttribute function creates an extended attribute in the specified RSM object.", "SetNtmsObjectAttributeW": "The SetNtmsObjectAttribute function creates an extended attribute in the specified RSM object.", "SetNtmsObjectInformation": "The SetNtmsObjectInformation function changes the information structure of the specified object.", "SetNtmsObjectInformationA": "The SetNtmsObjectInformation function changes the information structure of the specified object.", "SetNtmsObjectInformationW": "The SetNtmsObjectInformation function changes the information structure of the specified object.", "SetNtmsObjectSecurity": "The SetNtmsObjectSecurity function writes the security descriptor for the specified RSM object.", "SetNtmsRequestOrder": "The SetNtmsRequestOrder function sets the order that the specified request will be processed in the library queue.", "SetNtmsUIOptionsA": "The SetNtmsUIOptions function modifies the list of computer names to which the specified type of UI is being directed for the given object.", "SetNtmsUIOptionsW": "The SetNtmsUIOptions function modifies the list of computer names to which the specified type of UI is being directed for the given object.", "SetQuotaLimit": "Sets the user's quota limit value on the volume.", "SetQuotaLogFlags": "Controls the logging of user-related quota events on the volume.", "SetQuotaState": "Sets the state of the quota system.", "SetQuotaThreshold": "Sets the user's warning threshold value on the volume.", "SetResourceManagerCompletionPort": "Associates the specified I / O completion port with the specified resource manager.", "SetSearchPathMode": "Sets the per-process mode that the SearchPath function uses when locating files.", "SetTransactionInformation": "Sets the transaction information for the specified transaction.", "SetUserFileEncryptionKey": "Sets the user's current key to the specified certificate.", "SetVolumeLabelA": "Sets the label of a file system volume.", "SetVolumeLabelW": "Sets the label of a file system volume.", "SetVolumeMountPointA": "Associates a volume with a drive letter or a directory on another volume.", "SetVolumeMountPointW": "Associates a volume with a drive letter or a directory on another volume.", "ShutdownNameResolution": "Translates user security identifiers to user names.", "SinglePhaseReject": "Indicates that the resource manager receives this call, it initiates a two-phase commit and sends a prepare request to all enlisted RMs.", "Skip": "Skips over the specified number of user quota entries that are next in the enumeration sequence.", "SubmitIoRing": "Submits all constructed but not yet submitted entries to the kernel\u00e2\u0080\u0099s queue and optionally waits for a set of operations to complete.", "SubmitNtmsOperatorRequestA": "The SubmitNtmsOperatorRequest function submits an RSM operator request.", "SubmitNtmsOperatorRequestW": "The SubmitNtmsOperatorRequest function submits an RSM operator request.", "SwapNtmsMedia": "The SwapNtmsMedia function swaps the sides associated with the two specified LMIDs.", "TerminateLogArchive": "Deallocates system resources that are allocated originally for a log archive context by PrepareLogArchive.", "TerminateReadLog": "Terminates a read context.", "TruncateLog": "Truncates the log.", "TxfGetThreadMiniVersionForCreate": "Returns the MiniVersion a subsequent create is set to open.", "TxfLogCreateFileReadContext": "Creates a context to be used to read replication records.", "TxfLogCreateRangeReadContext": "Creates a context that is required to read any replication records.", "TxfLogDestroyReadContext": "Closes a read context created by the TxfLogCreateFileReadContext function.", "TxfLogReadRecords": "Reads the redo records from the log.", "TxfSetThreadMiniVersionForCreate": "Sets the MiniVersion that a subsequent create should open.", "UnlockFile": "Unlocks a region in an open file.", "UnlockFileEx": "Unlocks a region in the specified file.", "UpdateNtmsOmidInfo": "The UpdateNtmsOmidInfo function updates the RSM database with label information immediately after writing to the newly allocated medium.", "ValidateLog": "Validates the consistency of the log metadata and data before log archive and after log restore.", "WaitForNtmsNotification": "The WaitForNtmsNotification function waits for the next object change notification.", "WaitForNtmsOperatorRequest": "The WaitForNtmsOperatorRequest function waits for the specified RSM operator request.", "WofEnumEntries": "Enumerates all the data sources from a specified provider for a specified volume.", "WofEnumEntryProc": "Callback function that gets called for each data source in response to a call to WofEnumEntries.", "WofEnumFilesProc": "Callback function that gets called for each file backed by an external data source, such as a WIM file.", "WofFileEnumFiles": "Enumerates all of the files which are compressed with a specified compression algorithm on a specified volume.", "WofGetDriverVersion": "Used to query the version of the driver used to support a particular provider.", "WofIsExternalFile": "Used to determine if a file is being backed by a physical file or is backed by a system data provider, and optionally indicates which provider or additional data about the file.", "WofSetFileDataLocation": "Used to change a file from being backed by a physical file to one backed by a system data provider.", "WofShouldCompressBinaries": "Indicates whether compression should be used on a particular volume, and if so, which compression algorithm should be used.", "WofWimAddEntry": "Adds a single WIM data source to a volume such that files can be created on the volume which are stored within the WIM.", "WofWimEnumFiles": "Enumerates all of the files which are being backed by a specified WIM data source on a specified volume.", "WofWimRemoveEntry": "Removes a single WIM data source from backing files on a volume.", "WofWimSuspendEntry": "Temporarily removes a WIM data source from backing files on a volume until the volume is remounted or the data source is updated with WofWimUpdateEntry.", "WofWimUpdateEntry": "Updates a WIM entry to point to a different WIM file location.", "Wow64DisableWow64FsRedirection": "Disables file system redirection for the calling thread.", "Wow64RevertWow64FsRedirection": "Restores file system redirection for the calling thread.", "Wow64SuspendThread": "Suspends the specified WOW64 thread.", "WriteEncryptedFileRaw": "Restores encrypted files.", "WriteFile": "Writes data to the specified file or input/output device.", "WriteFileEx": "Writes data to the specified file or input / output device.", "WriteFileGather": "Retrieves data from an array of buffers and writes the data to a file.", "WriteLogRestartArea": "Appends a new client restart area to a log, and optionally advances the base log sequence number of the log."}