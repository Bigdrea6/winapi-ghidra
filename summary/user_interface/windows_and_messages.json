{"Button_Enable": "Enables or disables a button.", "Button_GetCheck": "Gets the check state of a radio button or check box. You can use this macro or send the BM_GETCHECK message explicitly.", "Button_GetState": "Retrieves the state of a button or check box. You can use this macro or send the BM_GETSTATE message explicitly.", "Button_GetText": "Gets the text of a button.", "Button_GetTextLength": "Gets the number of characters in the text of a button.", "Button_SetCheck": "Sets the check state of a radio button or check box. You can use this macro or send the BM_SETCHECK message explicitly.", "Button_SetState": "Sets the highlight state of a button. The highlight state indicates whether the button is highlighted as if the user had pushed it. You can use this macro or send the BM_SETSTATE message explicitly.", "Button_SetStyle": "Sets the style of a button. You can use this macro or send the BM_SETSTYLE message explicitly.", "Button_SetText": "Sets the text of a button.", "ComboBox_AddItemData": "Adds item data to the list in a combo box at the specified location. You can use this macro or send the CB_ADDSTRING message explicitly.", "ComboBox_AddString": "Adds a string to a list in a combo box.", "ComboBox_DeleteString": "Deletes the item at the specified location in a list in a combo box. You can use this macro or send the CB_DELETESTRING message explicitly.", "ComboBox_Dir": "Adds names to the list displayed by a combo box.", "ComboBox_Enable": "Enables or disables a combo box control.", "ComboBox_FindItemData": "Finds the first item in a combo box list that has the specified item data. You can use this macro or send the CB_FINDSTRING message explicitly.", "ComboBox_FindString": "Finds the first string in a combo box list that begins with the specified string. You can use this macro or send the CB_FINDSTRING message explicitly.", "ComboBox_FindStringExact": "Finds the first string in a combo box list that exactly matches the specified string, except that the search is not case sensitive. You can use this macro or send the CB_FINDSTRINGEXACT message explicitly.", "ComboBox_GetCount": "Gets the number of items in the list box of a combo box. You can use this macro or send the CB_GETCOUNT message explicitly.", "ComboBox_GetCurSel": "Gets the index of the currently selected item in a combo box. You can use this macro or send the CB_GETCURSEL message explicitly.", "ComboBox_GetDroppedControlRect": "Retrieves the screen coordinates of a combo box in its dropped-down state. You can use this macro or send the CB_GETDROPPEDCONTROLRECT message explicitly.", "ComboBox_GetDroppedState": "Ascertains whether the drop list in a combo box control is visible. You can use this macro or send the CB_GETDROPPEDSTATE message explicitly.", "ComboBox_GetExtendedUI": "Ascertains whether a combo box is using the default user interface (UI) or the extended UI. You can use this macro or send the CB_GETEXTENDEDUI message explicitly.", "ComboBox_GetItemData": "Gets the application-defined value associated with the specified list item in a combo box. You can use this macro or send the CB_GETITEMDATA message explicitly.", "ComboBox_GetItemHeight": "Retrieves the height of list items in a combo box. You can use this macro or send the CB_GETITEMHEIGHT message explicitly.", "ComboBox_GetLBText": "Gets a string from a list in a combo box. You can use this macro or send the CB_GETLBTEXT message explicitly.", "ComboBox_GetLBTextLen": "Gets the length of a string in the list in a combo box. You can use this macro or send the CB_GETLBTEXTLEN message explicitly.", "ComboBox_GetText": "Retrieves the text from a combo box control.", "ComboBox_GetTextLength": "Gets the number of characters in the text of a combo box.", "ComboBox_InsertItemData": "Inserts item data in a list in a combo box at the specified location. You can use this macro or send the CB_INSERTSTRING message explicitly.", "ComboBox_InsertString": "Adds a string to a list in a combo box at the specified location. You can use this macro or send the CB_INSERTSTRING message explicitly.", "ComboBox_LimitText": "Limits the length of the text the user may type into the edit control of a combo box. You can use this macro or send the CB_LIMITTEXT message explicitly.", "ComboBox_ResetContent": "Removes all items from the list box and edit control of a combo box. You can use this macro or send the CB_RESETCONTENT message explicitly.", "ComboBox_SelectItemData": "Searches a list in a combo box for an item that has the specified item data. If a matching item is found, the item is selected. You can use this macro or send the CB_SELECTSTRING message explicitly.", "ComboBox_SelectString": "Searches a list in a combo box for an item that begins with the characters in a specified string. If a matching item is found, the item is selected. You can use this macro or send the CB_SELECTSTRING message explicitly.", "ComboBox_SetCurSel": "Sets the currently selected item in a combo box. You can use this macro or send the CB_SETCURSEL message explicitly.", "ComboBox_SetExtendedUI": "Selects either the default user interface (UI) or the extended UI for a combo box that has the CBS_DROPDOWN or CBS_DROPDOWNLIST style. You can use this macro or send the CB_SETEXTENDEDUI message explicitly.", "ComboBox_SetItemData": "Sets the application-defined value associated with the specified list item in a combo box. You can use this macro or send the CB_SETITEMDATA message explicitly.", "ComboBox_SetItemHeight": "Sets the height of list items or the selection field in a combo box. You can use this macro or send the CB_SETITEMHEIGHT message explicitly.", "ComboBox_SetText": "Sets the text of a combo box.", "ComboBox_ShowDropdown": "Shows or hides the list in a combo box. You can use this macro or send the CB_SHOWDROPDOWN message explicitly.", "DeleteFont": "The DeleteFont macro deletes a font object, freeing all system resources associated with the font object.", "Edit_CanUndo": "Determines whether there are any actions in the undo queue of an edit or rich edit control. You can use this macro or send the EM_CANUNDO message explicitly.", "Edit_EmptyUndoBuffer": "Resets the undo flag of an edit or rich edit control. The undo flag is set whenever an operation within the edit control can be undone. You can use this macro or send the EM_EMPTYUNDOBUFFER message explicitly.", "Edit_Enable": "Enables or disables an edit control.", "Edit_FmtLines": "Sets a flag that determines whether text retrieved from a multiline edit control includes soft line-break characters.", "Edit_GetFirstVisibleLine": "Gets the index of the uppermost visible line in a multiline edit or rich edit control. You can use this macro or send the EM_GETFIRSTVISIBLELINE message explicitly.", "Edit_GetHandle": "Gets a handle to the memory currently allocated for the text of a multiline edit control. You can use this macro or send the EM_GETHANDLE message explicitly.", "Edit_GetLine": "Retrieves a line of text from an edit or rich edit control. You can use this macro or send the EM_GETLINE message explicitly.", "Edit_GetLineCount": "Gets the number of lines in the text of an edit control. You can use this macro or send the EM_GETLINECOUNT message explicitly.", "Edit_GetModify": "Gets the state of an edit or rich edit control's modification flag. The flag indicates whether the contents of the control have been modified. You can use this macro or send the EM_GETMODIFY message explicitly.", "Edit_GetPasswordChar": "Gets the password character for an edit or rich edit control. You can use this macro or send the EM_GETPASSWORDCHAR message explicitly.", "Edit_GetRect": "Gets the formatting rectangle of an edit control. You can use this macro or send the EM_GETRECT message explicitly.", "Edit_GetSel": "Gets the starting and ending character positions of the current selection in an edit or rich edit control. You can use this macro or send the EM_GETSEL message explicitly.", "Edit_GetText": "Gets the text of an edit control.", "Edit_GetTextLength": "Gets the number of characters in the text of an edit control.", "Edit_GetWordBreakProc": "Retrieves the address of an edit or rich edit control's Wordwrap function. You can use this macro or send the EM_GETWORDBREAKPROC message explicitly.", "Edit_LimitText": "Limits the length of text that can be entered into an edit control. You can use this macro or send the EM_LIMITTEXT message explicitly.", "Edit_LineFromChar": "Gets the index of the line that contains the specified character index in a multiline edit or rich edit control. You can use this macro or send the EM_LINEFROMCHAR message explicitly.", "Edit_LineIndex": "Gets the character index of the first character of a specified line in a multiline edit or rich edit control. You can use this macro or send the EM_LINEINDEX message explicitly.", "Edit_LineLength": "Retrieves the length, in characters, of a line in an edit or rich edit control. You can use this macro or send the EM_LINELENGTH message explicitly.", "Edit_ReplaceSel": "Replaces the selected text in an edit control or a rich edit control with the specified text. You can use this macro or send the EM_REPLACESEL message explicitly.", "Edit_Scroll": "Scrolls the text vertically in a multiline edit or rich edit control. You can use this macro or send the EM_SCROLL message explicitly.", "Edit_ScrollCaret": "Scrolls the caret into view in an edit or rich edit control. You can use this macro or send the EM_SCROLLCARET message explicitly.", "Edit_SetHandle": "Sets the handle of the memory that will be used by a multiline edit control. You can use this macro or send the EM_SETHANDLE message explicitly.", "Edit_SetModify": "Sets or clears the modification flag for an edit control. The modification flag indicates whether the text within the edit control has been modified. You can use this macro or send the EM_SETMODIFY message explicitly.", "Edit_SetPasswordChar": "Sets or removes the password character for an edit or rich edit control. When a password character is set, that character is displayed in place of the characters typed by the user. You can use this macro or send the EM_SETPASSWORDCHAR message explicitly.", "Edit_SetReadOnly": "Sets or removes the read-only style (ES_READONLY) of an edit or rich edit control. You can use this macro or send the EM_SETREADONLY message explicitly.", "Edit_SetRect": "Sets the formatting rectangle of an edit control. You can use this macro or send the EM_SETRECT message explicitly.", "Edit_SetRectNoPaint": "Sets the formatting rectangle of a multiline edit control. This macro is equivalent to Edit_SetRect, except that it does not redraw the edit control window. You can use this macro or send the EM_SETRECTNP message explicitly.", "Edit_SetSel": "Selects a range of characters in an edit or rich edit control. You can use this macro or send the EM_SETSEL message explicitly.", "Edit_SetTabStops": "Sets the tab stops in a multiline edit or rich edit control. When text is copied to the control, any tab character in the text causes space to be generated up to the next tab stop. You can use this macro or send the EM_SETTABSTOPS message explicitly.", "Edit_SetText": "Sets the text of an edit control.", "Edit_SetWordBreakProc": "Replaces an edit control's default Wordwrap function with an application-defined Wordwrap function. You can use this macro or send the EM_SETWORDBREAKPROC message explicitly.", "Edit_Undo": "Undoes the last operation in the undo queue of an edit or rich edit control. You can use this macro or send the EM_UNDO message explicitly.", "GET_X_LPARAM": "Retrieves the signed x-coordinate from the specified LPARAM value.", "GET_Y_LPARAM": "Retrieves the signed y-coordinate from the given LPARAM value.", "ListBox_AddItemData": "Adds item data to the list box at the specified location. You can use this macro or send the LB_ADDSTRING message explicitly.", "ListBox_AddString": "Adds a string to a list box.", "ListBox_DeleteString": "Deletes the item at the specified location in a list box. You can use this macro or send the LB_DELETESTRING message explicitly.", "ListBox_Dir": "Adds names to the list displayed by a list box.", "ListBox_Enable": "Enables or disables a list box control.", "ListBox_FindItemData": "Finds the first item in a list box that has the specified item data. You can use this macro or send the LB_FINDSTRING message explicitly.", "ListBox_FindString": "Finds the first string in a list box that begins with the specified string. You can use this macro or send the LB_FINDSTRING message explicitly.", "ListBox_FindStringExact": "Finds the first list box string that exactly matches the specified string, except that the search is not case sensitive. You can use this macro or send the LB_FINDSTRINGEXACT message explicitly.", "ListBox_GetCaretIndex": "Retrieves the index of the list box item that has the focus rectangle in a multiple-selection list box. The item may or may not be selected. You can use this macro or send the LB_GETCARETINDEX message explicitly.", "ListBox_GetCount": "Gets the number of items in a list box. You can use this macro or send the LB_GETCOUNT message explicitly.", "ListBox_GetCurSel": "Gets the index of the currently selected item in a single-selection list box. You can use this macro or send the LB_GETCURSEL message explicitly.", "ListBox_GetHorizontalExtent": "Gets the width that a list box can be scrolled horizontally (the scrollable width) if the list box has a horizontal scroll bar. You can use this macro or send the LB_GETHORIZONTALEXTENT message explicitly.", "ListBox_GetItemData": "Gets the application-defined value associated with the specified list box item. You can use this macro or send the LB_GETITEMDATA message explicitly.", "ListBox_GetItemHeight": "Retrieves the height of items in a list box.", "ListBox_GetItemRect": "Gets the dimensions of the rectangle that bounds a list box item as it is currently displayed in the list box. You can use this macro or send the LB_GETITEMRECT message explicitly.", "ListBox_GetSel": "Gets the selection state of an item. You can use this macro or send the LB_GETSEL message explicitly.", "ListBox_GetSelCount": "Gets the count of selected items in a multiple-selection list box. You can use this macro or send the LB_GETSELCOUNT message explicitly.", "ListBox_GetSelItems": "Gets the indexes of selected items in a multiple-selection list box. You can use this macro or send the LB_GETSELITEMS message explicitly.", "ListBox_GetText": "Gets a string from a list box. You can use this macro or send the LB_GETTEXT message explicitly.", "ListBox_GetTextLen": "Gets the length of a string in a list box. You can use this macro or send the LB_GETTEXTLEN message explicitly.", "ListBox_GetTopIndex": "Gets the index of the first visible item in a list box. You can use this macro or send the LB_GETTOPINDEX message explicitly.", "ListBox_InsertItemData": "Inserts item data to a list box at the specified location. You can use this macro or send the LB_INSERTSTRING message explicitly.", "ListBox_InsertString": "Adds a string to a list box at the specified location. You can use this macro or send the LB_INSERTSTRING message explicitly.", "ListBox_ResetContent": "Removes all items from a list box. You can use this macro or send the LB_RESETCONTENT message explicitly.", "ListBox_SelectItemData": "Searches a list box for an item that has the specified item data. If a matching item is found, the item is selected. You can use this macro or send the LB_SELECTSTRING message explicitly.", "ListBox_SelectString": "Searches a list box for an item that begins with the characters in a specified string. If a matching item is found, the item is selected. You can use this macro or send the LB_SELECTSTRING message explicitly.", "ListBox_SelItemRange": "Selects or deselects one or more consecutive items in a multiple-selection list box. You can use this macro or send the LB_SELITEMRANGE message explicitly.", "ListBox_SetCaretIndex": "Sets the focus rectangle to the item at the specified index in a multiple-selection list box. If the item is not visible, it is scrolled into view. You can use this macro or send the LB_SETCARETINDEX message explicitly.", "ListBox_SetColumnWidth": "Sets the width of all columns in a multiple-column list box. You can use this macro or send the LB_SETCOLUMNWIDTH message explicitly.", "ListBox_SetCurSel": "Sets the currently selected item in a single-selection list box. You can use this macro or send the LB_SETCURSEL message explicitly.", "ListBox_SetHorizontalExtent": "Set the width by which a list box can be scrolled horizontally (the scrollable width).", "ListBox_SetItemData": "Sets the application-defined value associated with the specified list box item. You can use this macro or send the LB_SETITEMDATA message explicitly.", "ListBox_SetItemHeight": "Sets the height of items in a list box.", "ListBox_SetSel": "Selects or deselects an item in a multiple-selection list box. You can use this macro or send the LB_SETSEL message explicitly.", "ListBox_SetTabStops": "Sets the tab-stop positions in a list box. You can use this macro or send the LB_SETTABSTOPS message explicitly.", "ListBox_SetTopIndex": "Ensures that the specified item in a list box is visible. You can use this macro or send the LB_SETTOPINDEX message explicitly.", "ScrollBar_Enable": "Enables or disables a scroll bar control.", "ScrollBar_GetPos": "Retrieves the position of the scroll box (thumb) in the specified scroll bar.", "ScrollBar_GetRange": "Gets the range of a scroll bar.", "ScrollBar_SetPos": "Sets the position of the scroll box (thumb) in the specified scroll bar and, if requested, redraws the scroll bar to reflect the new position of the scroll box.", "ScrollBar_SetRange": "Sets the range of a scroll bar.", "ScrollBar_Show": "Shows or hides a scroll bar control.", "SelectFont": "The SelectFont macro selects a font object into the specified device context (DC). The new font object replaces the previous font object.", "Static_Enable": "Enables or disables a static control.", "Static_GetIcon": "Retrieves a handle to the icon associated with a static control that has the SS_ICON style. You can use this macro or send the STM_GETICON message explicitly.", "Static_GetText": "Gets the text of a static control.", "Static_GetTextLength": "Gets the number of characters in the text of a static control.", "Static_SetIcon": "Sets the icon for a static control. You can use this macro or send the STM_SETICON message explicitly.", "Static_SetText": "Sets the text of a static control."}