{"GetDateFormat": "Formats a date as a date string for a locale specified by the locale identifier.", "GetDateFormatEx": "Formats a date as a date string for a locale specified by name.", "GetTimeFormat": "Formats time as a time string for a locale specified by identifier. The function formats either a specified time or the local system time.", "GetTimeFormatEx": "Formats time as a time string for a locale specified by name.", "MappingDoAction": "Causes an ELS service to perform an action after text recognition has occurred. For example, a phone dialer service first must recognize phone numbers and then can perform the \"action\" of dialing a number.", "MappingFreePropertyBag": "Frees memory and resources allocated during an ELS text recognition operation.", "MappingFreeServices": "Frees memory and resources allocated for the application to interact with one or more ELS services. The memory and resources are allocated in an application call to MappingGetServices.", "MappingGetServices": "Retrieves a list of available ELS platform-supported services, along with associated information, according to application-specified criteria.", "MappingRecognizeText": "Calls upon an ELS service to recognize text. For example, the Microsoft Language Detection service will attempt to recognize the language in which the input text is written.", "NlsDllCodePageTranslation": "Used to get code page information or do conversion, depending on flag settings.", "ImmAssociateContext": "Associates the specified input context with the specified window. By default, the operating system associates the default input context with each window as it is created.", "ImmAssociateContextEx": "Changes the association between the input method context and the specified window or its children.", "ImmConfigureIME": "Displays the configuration dialog box for the IME of the specified input locale identifier.", "ImmCreateContext": "Creates a new input context, allocating memory for the context and initializing it. An application calls this function to prepare its own input context.", "ImmDestroyContext": "Releases the input context and frees associated memory.", "ImmDisableIME": "Disables the IME for a thread or for all threads in a process.", "ImmDisableLegacyIME": "Indicates that this thread is a Windows Store app UI thread.", "ImmDisableTextFrameService": "ImmDisableTextFrameService is no longer available for use as of Windows\u00c2\u00a0Vista.", "ImmEnumInputContext": "Retrieves the input context for the specified thread.", "ImmEnumRegisterWord": "Enumerates the register strings having the specified reading string, style, and register string.", "ImmEscape": "Accesses capabilities of particular IMEs that are not available through other IME API functions. This function is used mainly for country-specific operations.", "ImmGetCandidateList": "Retrieves a candidate list.", "ImmGetCandidateListCount": "Retrieves the size of the candidate lists.", "ImmGetCandidateWindow": "Retrieves information about the candidates window.", "ImmGetCompositionFont": "Retrieves information about the logical font currently used to display characters in the composition window.", "ImmGetCompositionString": "Retrieves information about the composition string.", "ImmGetCompositionWindow": "Retrieves information about the composition window.", "ImmGetContext": "Returns the input context associated with the specified window.", "ImmGetConversionList": "Retrieves the conversion result list of characters or words without generating any IME-related messages.", "ImmGetConversionStatus": "Retrieves the current conversion status.", "ImmGetDefaultIMEWnd": "Retrieves the default window handle to the IME class.", "ImmGetDescription": "Copies the description of the IME to the specified buffer.", "ImmGetGuideLine": "Retrieves information about errors. Applications use the information for user notifications.", "ImmGetIMEFileName": "Retrieves the file name of the IME associated with the specified input locale.", "ImmGetImeMenuItems": "Retrieves the menu items that are registered in the IME menu of a specified input context.", "ImmGetOpenStatus": "Determines whether the IME is open or closed.", "ImmGetProperty": "Retrieves the property and capabilities of the IME associated with the specified input locale.", "ImmGetRegisterWordStyle": "Retrieves a list of the styles supported by the IME associated with the specified input locale.", "ImmGetStatusWindowPos": "Retrieves the position of the status window.", "ImmGetVirtualKey": "Retrieves the original virtual key value associated with a key input message that the IME has already processed.", "ImmInstallIME": "Installs an IME.", "ImmIsIME": "Determines if the specified input locale has an IME.", "ImmIsUIMessage": "Checks for messages intended for the IME window and sends those messages to the window.", "ImmNotifyIME": "Notifies the IME about changes to the status of the input context.", "ImmRegisterWord": "Registers a string with the dictionary of the IME associated with the specified input locale.", "ImmReleaseContext": "Releases the input context and unlocks the memory associated in the input context. An application must call this function for each call to the ImmGetContext function.", "ImmSetCandidateWindow": "Sets information about the candidates window.", "ImmSetCompositionFont": "Sets the logical font to use to display characters in the composition window.", "ImmSetCompositionString": "Sets the characters, attributes, and clauses of the composition and reading strings.", "ImmSetCompositionWindow": "Sets the position of the composition window.", "ImmSetConversionStatus": "Sets the current conversion status.", "ImmSetOpenStatus": "Opens or closes the IME.", "ImmSetStatusWindowPos": "Sets the position of the status window.", "ImmSimulateHotKey": "Simulates the specified IME hot key, causing the same response as if the user presses the hot key in the specified window.", "ImmUnregisterWord": "Removes a register string from the dictionary of the IME associated with the specified input locale.", "ImmRequestMessage": "Generates a WM_IME_REQUEST message.", "CreateIFECommonInstance": "Returns a pointer to an IFECommon interface.", "CreateIFEDictionaryInstance": "Returns a pointer to an IFEDictionary interface.", "CreateIFELanguageInstance": "Returns a pointer to an IFELanguage interface.", "FreeMUILibrary": "Releases the handle to a resource module loaded by LoadMUILibrary.", "GetUILanguageFallbackList": "Gets a fallback list of UI languages represented as language names.", "LoadMUILibrary": "Returns a handle to the language-specific resources associated with a particular language-neutral (LN) file.", "CompareStringEx": "Compares two Unicode (wide character) strings, for a locale specified by name.Caution\u00c2\u00a0\u00c2\u00a0Using CompareStringEx incorrectly can compromise the security of your application.", "CompareStringOrdinal": "Compares two Unicode strings to test binary equivalence.", "CompareString": "Compares two character strings, for a locale specified by identifier.Caution\u00c2\u00a0\u00c2\u00a0Using CompareString incorrectly can compromise the security of your application.", "FoldString": "Maps one Unicode string to another, performing the specified transformation.", "GetStringTypeEx": "Retrieves character type information for the characters in the specified source string.", "GetStringType": "Retrieves character type information for the characters in the specified Unicode source string.", "MultiByteToWideChar": "Maps a character string to a UTF-16 (wide character) string.", "WideCharToMultiByte": "Maps a UTF-16 (wide character) string to a new character string.", "ScriptApplyDigitSubstitution": "Applies the specified digit substitution settings to the specified script control and script state structures.", "ScriptApplyLogicalWidth": "Takes an array of advance widths for a run and generates an array of adjusted advance glyph widths.", "ScriptBreak": "Retrieves information for determining line breaks.", "ScriptCacheGetHeight": "Retrieves the height of the currently cached font.", "ScriptCPtoX": "Generates the x offset from the left end or leading edge of a run to either the leading or trailing edge of a logical character cluster.", "ScriptFreeCache": "Frees a script cache.", "ScriptGetCMap": "Retrieves the glyph indexes of the Unicode characters in a string according to either the TrueType cmap table or the standard cmap table implemented for old-style fonts.", "ScriptGetFontAlternateGlyphs": "Retrieves a list of alternate glyphs for a specified character that can be accessed through a specified OpenType feature.", "ScriptGetFontFeatureTags": "Retrieves a list of typographic features for the defined writing system for OpenType processing. The typographic feature tags comprising the list are retrieved from the font in the supplied device context or cache.", "ScriptGetFontLanguageTags": "Retrieves a list of language tags that are available for the specified item and are supported by a specified script tag for OpenType processing. The tags comprising the list are retrieved from the font in the specified device context or cache.", "ScriptGetFontProperties": "Retrieves information from the font cache on the special glyphs used by a font.", "ScriptGetFontScriptTags": "Retrieves a list of scripts available in the font for OpenType processing. Scripts comprising the list are retrieved from the font located in the supplied device context or from the script shaping engine that processes the font of the current run.", "ScriptGetGlyphABCWidth": "Retrieves the ABC width of a given glyph.", "ScriptGetLogicalWidths": "Converts the glyph advance widths for a specific font into logical widths.", "ScriptGetProperties": "Retrieves information about the current scripts.", "ScriptIsComplex": "Determines whether a Unicode string requires complex script processing.", "ScriptItemize": "Breaks a Unicode string into individually shapeable items.", "ScriptItemizeOpenType": "Breaks a Unicode string into individually shapeable items and provides an array of feature tags for each shapeable item for OpenType processing.", "ScriptJustify": "Creates an advance widths table to allow text justification when passed to the ScriptTextOut function.", "ScriptLayout": "Converts an array of run embedding levels to a map of visual-to-logical position and/or logical-to-visual position.", "ScriptPlace": "Generates glyph advance width and two-dimensional offset information from the output of ScriptShape.", "ScriptPlaceOpenType": "Generates glyphs and visual attributes for a Unicode run with OpenType information from the output of ScriptShapeOpenType.", "ScriptPositionSingleGlyph": "Positions a single glyph with a single adjustment using a specified feature provided in the font for OpenType processing. Most often, applications use this function to align a glyph optically at the beginning or end of a line.", "ScriptRecordDigitSubstitution": "Reads the National Language Support (NLS) native digit and digit substitution settings and records them in a SCRIPT_DIGITSUBSTITUTE structure. For more information, see Digit Shapes.", "ScriptShape": "Generates glyphs and visual attributes for a Unicode run.", "ScriptShapeOpenType": "Generates glyphs and visual attributes for a Unicode run with OpenType information. Each run consists of one call to this function.", "ScriptString_pcOutChars": "Returns a pointer to the length of a string after clipping.", "ScriptString_pLogAttr": "Returns a pointer to a logical attributes buffer for an analyzed string.", "ScriptString_pSize": "Returns a pointer to a SIZE structure for an analyzed string.", "ScriptStringAnalyse": "Analyzes a plain text string.", "ScriptStringCPtoX": "Retrieves the x coordinate for the leading or trailing edge of a character position.", "ScriptStringFree": "Frees a SCRIPT_STRING_ANALYSIS structure.", "ScriptStringGetLogicalWidths": "Converts visual widths into logical widths.", "ScriptStringGetOrder": "Creates an array that maps an original character position to a glyph position.", "ScriptStringOut": "Displays a string generated by a prior call to ScriptStringAnalyse and optionally adds highlighting.", "ScriptStringValidate": "Checks a SCRIPT_STRING_ANALYSIS structure for invalid sequences.", "ScriptStringXtoCP": "Converts an x coordinate to a character position.", "ScriptSubstituteSingleGlyph": "Enables substitution of a single glyph with one alternate form of the same glyph for OpenType processing.", "ScriptTextOut": "Displays text for the specified script shape and place information.", "ScriptXtoCP": "Generates the leading or trailing edge of a logical character cluster from the x offset of a run.", "AbortDoc": "The AbortDoc function stops the current print job and erases everything drawn since the last call to the StartDoc function.", "AbortPath": "The AbortPath function closes and discards any paths in the specified device context.", "AddFontMemResourceEx": "The AddFontMemResourceEx function adds the font resource from a memory image to the system.", "AddFontResource": "The AddFontResource function adds the font resource from the specified file to the system font table. The font can subsequently be used for text output by any application.", "AddFontResourceEx": "The AddFontResourceEx function adds the font resource from the specified file to the system. Fonts added with the AddFontResourceEx function can be marked as private and not enumerable.", "AlphaBlend": "The AlphaBlend function displays bitmaps that have transparent or semitransparent pixels.", "AngleArc": "The AngleArc function draws a line segment and an arc.", "AnimatePalette": "The AnimatePalette function replaces entries in the specified logical palette.", "Arc": "The Arc function draws an elliptical arc.", "ArcTo": "The ArcTo function draws an elliptical arc.", "BeginPath": "The BeginPath function opens a path bracket in the specified device context.", "BitBlt": "The BitBlt function performs a bit-block transfer of the color data corresponding to a rectangle of pixels from the specified source device context into a destination device context.", "CancelDC": "The CancelDC function cancels any pending operation on the specified device context (DC).", "CheckColorsInGamut": "The CheckColorsInGamut function determines whether a specified set of RGB triples lies in the output gamut of a specified device. The RGB triples are interpreted in the input logical color space.", "ChoosePixelFormat": "The ChoosePixelFormat function attempts to match an appropriate pixel format supported by a device context to a given pixel format specification.", "Chord": "The Chord function draws a chord (a region bounded by the intersection of an ellipse and a line segment, called a secant). The chord is outlined by using the current pen and filled by using the current brush.", "CloseEnhMetaFile": "The CloseEnhMetaFile function closes an enhanced-metafile device context and returns a handle that identifies an enhanced-format metafile.", "CloseFigure": "The CloseFigure function closes an open figure in a path.", "CloseMetaFile": "The CloseMetaFile function closes a metafile device context and returns a handle that identifies a Windows-format metafile.", "CMYK": "The CMYK macro creates a CMYK color value by combining the specified cyan, magenta, yellow, and black values.", "ColorCorrectPalette": "The ColorCorrectPalette function corrects the entries of a palette using the WCS 1.0 parameters in the specified device context.", "ColorMatchToTarget": "The ColorMatchToTarget function enables you to preview colors as they would appear on the target device.", "CombineRgn": "The CombineRgn function combines two regions and stores the result in a third region. The two regions are combined according to the specified mode.", "CombineTransform": "The CombineTransform function concatenates two world-space to page-space transformations.", "CopyEnhMetaFile": "The CopyEnhMetaFile function copies the contents of an enhanced-format metafile to a specified file.", "CopyMetaFile": "The CopyMetaFile function copies the content of a Windows-format metafile to the specified file.", "CreateBitmap": "The CreateBitmap function creates a bitmap with the specified width, height, and color format (color planes and bits-per-pixel).", "CreateBitmapIndirect": "The CreateBitmapIndirect function creates a bitmap with the specified width, height, and color format (color planes and bits-per-pixel).", "CreateBrushIndirect": "The CreateBrushIndirect function creates a logical brush that has the specified style, color, and pattern.", "CreateColorSpace": "The CreateColorSpace function creates a logical color space.", "CreateCompatibleBitmap": "The CreateCompatibleBitmap function creates a bitmap compatible with the device that is associated with the specified device context.", "CreateCompatibleDC": "The CreateCompatibleDC function creates a memory device context (DC) compatible with the specified device.", "CreateDC": "The CreateDC function creates a device context (DC) for a device using the specified name.", "CreateDIBitmap": "The CreateDIBitmap function creates a compatible bitmap (DDB) from a DIB and, optionally, sets the bitmap bits.", "CreateDIBPatternBrush": "The CreateDIBPatternBrush function creates a logical brush that has the pattern specified by the specified device-independent bitmap (DIB).", "CreateDIBPatternBrushPt": "The CreateDIBPatternBrushPt function creates a logical brush that has the pattern specified by the device-independent bitmap (DIB).", "CreateDIBSection": "The CreateDIBSection function creates a DIB that applications can write to directly.", "CreateDiscardableBitmap": "The CreateDiscardableBitmap function creates a discardable bitmap that is compatible with the specified device.", "CreateEllipticRgn": "The CreateEllipticRgn function creates an elliptical region.", "CreateEllipticRgnIndirect": "The CreateEllipticRgnIndirect function creates an elliptical region.", "CreateEnhMetaFile": "The CreateEnhMetaFile function creates a device context for an enhanced-format metafile. This device context can be used to store a device-independent picture.", "CreateFont": "The CreateFont function creates a logical font with the specified characteristics. The logical font can subsequently be selected as the font for any device.", "CreateFontIndirect": "The CreateFontIndirect function creates a logical font that has the specified characteristics. The font can subsequently be selected as the current font for any device context.", "CreateFontIndirectEx": "The CreateFontIndirectEx function specifies a logical font that has the characteristics in the specified structure. The font can subsequently be selected as the current font for any device context.", "CreateHalftonePalette": "The CreateHalftonePalette function creates a halftone palette for the specified device context (DC).", "CreateHatchBrush": "The CreateHatchBrush function creates a logical brush that has the specified hatch pattern and color.", "CreateIC": "The CreateIC function creates an information context for the specified device.", "CreateMetaFile": "The CreateMetaFile function creates a device context for a Windows-format metafile.", "CreatePalette": "The CreatePalette function creates a logical palette.", "CreatePatternBrush": "The CreatePatternBrush function creates a logical brush with the specified bitmap pattern. The bitmap can be a DIB section bitmap, which is created by the CreateDIBSection function, or it can be a device-dependent bitmap.", "CreatePen": "The CreatePen function creates a logical pen that has the specified style, width, and color. The pen can subsequently be selected into a device context and used to draw lines and curves.", "CreatePenIndirect": "The CreatePenIndirect function creates a logical cosmetic pen that has the style, width, and color specified in a structure.", "CreatePolygonRgn": "The CreatePolygonRgn function creates a polygonal region.", "CreatePolyPolygonRgn": "The CreatePolyPolygonRgn function creates a region consisting of a series of polygons. The polygons can overlap.", "CreateRectRgn": "The CreateRectRgn function creates a rectangular region.", "CreateRectRgnIndirect": "The CreateRectRgnIndirect function creates a rectangular region.", "CreateRoundRectRgn": "The CreateRoundRectRgn function creates a rectangular region with rounded corners.", "CreateScalableFontResource": "The CreateScalableFontResource function creates a font resource file for a scalable font.", "CreateSolidBrush": "The CreateSolidBrush function creates a logical brush that has the specified solid color.", "DeleteColorSpace": "The DeleteColorSpace function removes and destroys a specified color space.", "DeleteDC": "The DeleteDC function deletes the specified device context (DC).", "DeleteEnhMetaFile": "The DeleteEnhMetaFile function deletes an enhanced-format metafile or an enhanced-format metafile handle.", "DeleteMetaFile": "The DeleteMetaFile function deletes a Windows-format metafile or Windows-format metafile handle.", "DeleteObject": "The DeleteObject function deletes a logical pen, brush, font, bitmap, region, or palette, freeing all system resources associated with the object. After the object is deleted, the specified handle is no longer valid.", "DescribePixelFormat": "The DescribePixelFormat function obtains information about the pixel format identified by iPixelFormat of the device associated with hdc. The function sets the members of the PIXELFORMATDESCRIPTOR structure pointed to by ppfd with that pixel format data.", "DeviceCapabilities": "The DeviceCapabilities function retrieves the capabilities of a printer driver.", "DPtoLP": "The DPtoLP function converts device coordinates into logical coordinates. The conversion depends on the mapping mode of the device context, the settings of the origins and extents for the window and viewport, and the world transformation.", "DrawEscape": "The DrawEscape function provides drawing capabilities of the specified video display that are not directly available through the graphics device interface (GDI).", "Ellipse": "The Ellipse function draws an ellipse. The center of the ellipse is the center of the specified bounding rectangle. The ellipse is outlined by using the current pen and is filled by using the current brush.", "EndDoc": "The EndDoc function ends a print job.", "EndPage": "The EndPage function notifies the device that the application has finished writing to a page. This function is typically used to direct the device driver to advance to a new page.", "EndPath": "The EndPath function closes a path bracket and selects the path defined by the bracket into the specified device context.", "EnumEnhMetaFile": "The EnumEnhMetaFile function enumerates the records within an enhanced-format metafile by retrieving each record and passing it to the specified callback function.", "EnumFontFamilies": "The EnumFontFamilies function enumerates the fonts in a specified font family that are available on a specified device.", "EnumFontFamiliesEx": "The EnumFontFamiliesEx function enumerates all uniquely-named fonts in the system that match the font characteristics specified by the LOGFONT structure. EnumFontFamiliesEx enumerates fonts based on typeface name, character set, or both.", "EnumFonts": "The EnumFonts function enumerates the fonts available on a specified device.", "EnumICMProfiles": "The EnumICMProfiles function enumerates the different output color profiles that the system supports for a given device context.", "EnumMetaFile": "The EnumMetaFile function enumerates the records within a Windows-format metafile by retrieving each record and passing it to the specified callback function.", "EnumObjects": "The EnumObjects function enumerates the pens or brushes available for the specified device context (DC).", "EqualRgn": "The EqualRgn function checks the two specified regions to determine whether they are identical. The function considers two regions identical if they are equal in size and shape.", "Escape": "Enables an application to access the system-defined device capabilities that are not available through GDI.", "ExcludeClipRect": "The ExcludeClipRect function creates a new clipping region that consists of the existing clipping region minus the specified rectangle.", "ExtCreatePen": "The ExtCreatePen function creates a logical cosmetic or geometric pen that has the specified style, width, and brush attributes.", "ExtCreateRegion": "The ExtCreateRegion function creates a region from the specified region and transformation data.", "ExtEscape": "The ExtEscape function enables an application to access device capabilities that are not available through GDI.", "ExtFloodFill": "The ExtFloodFill function fills an area of the display surface with the current brush.", "ExtSelectClipRgn": "The ExtSelectClipRgn function combines the specified region with the current clipping region using the specified mode.", "ExtTextOut": "The ExtTextOut function draws text using the currently selected font, background color, and text color. You can optionally provide dimensions to be used for clipping, opaquing, or both.", "FillPath": "The FillPath function closes any open figures in the current path and fills the path's interior by using the current brush and polygon-filling mode.", "FillRgn": "The FillRgn function fills a region by using the specified brush.", "FlattenPath": "The FlattenPath function transforms any curves in the path that is selected into the current device context (DC), turning each curve into a sequence of lines.", "FloodFill": "The FloodFill function fills an area of the display surface with the current brush. The area is assumed to be bounded as specified by the color parameter.", "FrameRgn": "The FrameRgn function draws a border around the specified region by using the specified brush.", "GdiAlphaBlend": "The GdiAlphaBlend function displays bitmaps that have transparent or semitransparent pixels.", "GdiComment": "The GdiComment function copies a comment from a buffer into a specified enhanced-format metafile.", "GdiFlush": "The GdiFlush function flushes the calling thread's current batch.", "GdiGetBatchLimit": "The GdiGetBatchLimit function returns the maximum number of function calls that can be accumulated in the calling thread's current batch. The system flushes the current batch whenever this limit is exceeded.", "GdiGradientFill": "The GdiGradientFill function fills rectangle and triangle structures.", "GdiSetBatchLimit": "The GdiSetBatchLimit function sets the maximum number of function calls that can be accumulated in the calling thread's current batch. The system flushes the current batch whenever this limit is exceeded.", "GdiTransparentBlt": "The GdiTransparentBlt function performs a bit-block transfer of the color data corresponding to a rectangle of pixels from the specified source device context into a destination device context.", "GetArcDirection": "The GetArcDirection function retrieves the current arc direction for the specified device context. Arc and rectangle functions use the arc direction.", "GetAspectRatioFilterEx": "The GetAspectRatioFilterEx function retrieves the setting for the current aspect-ratio filter.", "GetBitmapBits": "The GetBitmapBits function copies the bitmap bits of a specified device-dependent bitmap into a buffer.", "GetBitmapDimensionEx": "The GetBitmapDimensionEx function retrieves the dimensions of a compatible bitmap. The retrieved dimensions must have been set by the SetBitmapDimensionEx function.", "GetBkColor": "The GetBkColor function returns the current background color for the specified device context.", "GetBkMode": "The GetBkMode function returns the current background mix mode for a specified device context. The background mix mode of a device context affects text, hatched brushes, and pen styles that are not solid lines.", "GetBoundsRect": "The GetBoundsRect function obtains the current accumulated bounding rectangle for a specified device context.", "GetBrushOrgEx": "The GetBrushOrgEx function retrieves the current brush origin for the specified device context. This function replaces the GetBrushOrg function.", "GetBValue": "The GetBValue macro retrieves an intensity value for the blue component of a red, green, blue (RGB) value.", "GetCharABCWidths": "The GetCharABCWidths function retrieves the widths, in logical units, of consecutive characters in a specified range from the current TrueType font. This function succeeds only with TrueType fonts.", "GetCharABCWidthsFloat": "The GetCharABCWidthsFloat function retrieves the widths, in logical units, of consecutive characters in a specified range from the current font.", "GetCharABCWidthsI": "The GetCharABCWidthsI function retrieves the widths, in logical units, of consecutive glyph indices in a specified range from the current TrueType font. This function succeeds only with TrueType fonts.", "GetCharacterPlacement": "The GetCharacterPlacement function retrieves information about a character string, such as character widths, caret positioning, ordering within the string, and glyph rendering.", "GetCharWidth32": "The GetCharWidth32 function retrieves the widths, in logical coordinates, of consecutive characters in a specified range from the current font.", "GetCharWidth": "The GetCharWidth function retrieves the widths, in logical coordinates, of consecutive characters in a specified range from the current font.", "GetCharWidthFloat": "The GetCharWidthFloat function retrieves the fractional widths of consecutive characters in a specified range from the current font.", "GetCharWidthI": "The GetCharWidthI function retrieves the widths, in logical coordinates, of consecutive glyph indices in a specified range from the current font.", "GetClipBox": "The GetClipBox function retrieves the dimensions of the tightest bounding rectangle that can be drawn around the current visible area on the device.", "GetClipRgn": "The GetClipRgn function retrieves a handle identifying the current application-defined clipping region for the specified device context.", "GetColorAdjustment": "The GetColorAdjustment function retrieves the color adjustment values for the specified device context (DC).", "GetColorSpace": "The GetColorSpace function retrieves the handle to the input color space from a specified device context.", "GetCurrentObject": "The GetCurrentObject function retrieves a handle to an object of the specified type that has been selected into the specified device context (DC).", "GetCurrentPositionEx": "The GetCurrentPositionEx function retrieves the current position in logical coordinates.", "GetCValue": "The GetCValue macro retrieves the cyan color value from a CMYK color value.", "GetDCBrushColor": "The GetDCBrushColor function retrieves the current brush color for the specified device context (DC).", "GetDCOrgEx": "The GetDCOrgEx function retrieves the final translation origin for a specified device context (DC).", "GetDCPenColor": "The GetDCPenColor function retrieves the current pen color for the specified device context (DC).", "GetDeviceCaps": "The GetDeviceCaps function retrieves device-specific information for the specified device.", "GetDeviceGammaRamp": "The GetDeviceGammaRamp function gets the gamma ramp on direct color display boards having drivers that support downloadable gamma ramps in hardware.", "GetDIBColorTable": "The GetDIBColorTable function retrieves RGB (red, green, blue) color values from a range of entries in the color table of the DIB section bitmap that is currently selected into a specified device context.", "GetDIBits": "The GetDIBits function retrieves the bits of the specified compatible bitmap and copies them into a buffer as a DIB using the specified format.", "GetEnhMetaFile": "The GetEnhMetaFile function creates a handle that identifies the enhanced-format metafile stored in the specified file.", "GetEnhMetaFileBits": "The GetEnhMetaFileBits function retrieves the contents of the specified enhanced-format metafile and copies them into a buffer.", "GetEnhMetaFileDescription": "The GetEnhMetaFileDescription function retrieves an optional text description from an enhanced-format metafile and copies the string to the specified buffer.", "GetEnhMetaFileHeader": "The GetEnhMetaFileHeader function retrieves the record containing the header for the specified enhanced-format metafile.", "GetEnhMetaFilePaletteEntries": "The GetEnhMetaFilePaletteEntries function retrieves optional palette entries from the specified enhanced metafile.", "GetEnhMetaFilePixelFormat": "The GetEnhMetaFilePixelFormat function retrieves pixel format information for an enhanced metafile.", "GetFontData": "The GetFontData function retrieves font metric data for a TrueType font.", "GetFontLanguageInfo": "The GetFontLanguageInfo function returns information about the currently selected font for the specified display context. Applications typically use this information and the GetCharacterPlacement function to prepare a character string for display.", "GetFontUnicodeRanges": "The GetFontUnicodeRanges function returns information about which Unicode characters are supported by a font. The information is returned as a GLYPHSET structure.", "GetGlyphIndices": "The GetGlyphIndices function translates a string into an array of glyph indices. The function can be used to determine whether a glyph exists in a font.", "GetGlyphOutline": "The GetGlyphOutline function retrieves the outline or bitmap for a character in the TrueType font that is selected into the specified device context.", "GetGraphicsMode": "The GetGraphicsMode function retrieves the current graphics mode for the specified device context.", "GetGValue": "The GetGValue macro retrieves an intensity value for the green component of a red, green, blue (RGB) value.", "GetICMProfile": "The GetICMProfile function retrieves the file name of the current output color profile for a specified device context.", "GetKerningPairs": "The GetKerningPairs function retrieves the character-kerning pairs for the currently selected font for the specified device context.", "GetKValue": "The GetKValue macro retrieves the black color value from a CMYK color value.", "GetLayout": "The GetLayout function returns the layout of a device context (DC).", "GetLogColorSpace": "The GetLogColorSpace function retrieves the color space definition identified by a specified handle.", "GetMapMode": "The GetMapMode function retrieves the current mapping mode.", "GetMetaFile": "The GetMetaFile function creates a handle that identifies the metafile stored in the specified file.", "GetMetaFileBitsEx": "The GetMetaFileBitsEx function retrieves the contents of a Windows-format metafile and copies them into the specified buffer.", "GetMetaRgn": "The GetMetaRgn function retrieves the current metaregion for the specified device context.", "GetMiterLimit": "The GetMiterLimit function retrieves the miter limit for the specified device context.", "GetMValue": "The GetMValue macro retrieves the magenta color value from a CMYK color value.", "GetNearestColor": "The GetNearestColor function retrieves a color value identifying a color from the system palette that will be displayed when the specified color value is used.", "GetNearestPaletteIndex": "The GetNearestPaletteIndex function retrieves the index for the entry in the specified logical palette most closely matching a specified color value.", "GetObject": "The GetObject function retrieves information for the specified graphics object.", "GetObjectType": "The GetObjectType retrieves the type of the specified object.", "GetOutlineTextMetrics": "The GetOutlineTextMetrics function retrieves text metrics for TrueType fonts.", "GetPaletteEntries": "The GetPaletteEntries function retrieves a specified range of palette entries from the given logical palette.", "GetPath": "The GetPath function retrieves the coordinates defining the endpoints of lines and the control points of curves found in the path that is selected into the specified device context.", "GetPixel": "The GetPixel function retrieves the red, green, blue (RGB) color value of the pixel at the specified coordinates.", "GetPixelFormat": "The GetPixelFormat function obtains the index of the currently selected pixel format of the specified device context.", "GetPolyFillMode": "The GetPolyFillMode function retrieves the current polygon fill mode.", "GetRandomRgn": "The GetRandomRgn function copies the system clipping region of a specified device context to a specific region.", "GetRasterizerCaps": "The GetRasterizerCaps function returns flags indicating whether TrueType fonts are installed in the system.", "GetRegionData": "The GetRegionData function fills the specified buffer with data describing a region. This data includes the dimensions of the rectangles that make up the region.", "GetRgnBox": "The GetRgnBox function retrieves the bounding rectangle of the specified region.", "GetROP2": "The GetROP2 function retrieves the foreground mix mode of the specified device context. The mix mode specifies how the pen or interior color and the color already on the screen are combined to yield a new color.", "GetRValue": "The GetRValue macro retrieves an intensity value for the red component of a red, green, blue (RGB) value.", "GetStockObject": "The GetStockObject function retrieves a handle to one of the stock pens, brushes, fonts, or palettes.", "GetStretchBltMode": "The GetStretchBltMode function retrieves the current stretching mode. The stretching mode defines how color data is added to or removed from bitmaps that are stretched or compressed when the StretchBlt function is called.", "GetSystemPaletteEntries": "The GetSystemPaletteEntries function retrieves a range of palette entries from the system palette that is associated with the specified device context (DC).", "GetSystemPaletteUse": "The GetSystemPaletteUse function retrieves the current state of the system (physical) palette for the specified device context (DC).", "GetTextAlign": "The GetTextAlign function retrieves the text-alignment setting for the specified device context.", "GetTextCharacterExtra": "The GetTextCharacterExtra function retrieves the current intercharacter spacing for the specified device context.", "GetTextCharset": "Retrieves a character set identifier for the font that is currently selected into a specified device context.", "GetTextCharsetInfo": "Retrieves information about the character set of the font that is currently selected into a specified device context.", "GetTextColor": "The GetTextColor function retrieves the current text color for the specified device context.", "GetTextExtentExPoint": "The GetTextExtentExPoint function retrieves the number of characters in a specified string that will fit within a specified space and fills an array with the text extent for each of those characters.", "GetTextExtentExPointI": "The GetTextExtentExPointI function retrieves the number of characters in a specified string that will fit within a specified space and fills an array with the text extent for each of those characters.", "GetTextExtentPoint32": "The GetTextExtentPoint32 function computes the width and height of the specified string of text.", "GetTextExtentPoint": "The GetTextExtentPoint function computes the width and height of the specified string of text.", "GetTextExtentPointI": "The GetTextExtentPointI function computes the width and height of the specified array of glyph indices.", "GetTextFace": "The GetTextFace function retrieves the typeface name of the font that is selected into the specified device context.", "GetTextMetrics": "The GetTextMetrics function fills the specified buffer with the metrics for the currently selected font.", "GetViewportExtEx": "The GetViewportExtEx function retrieves the x-extent and y-extent of the current viewport for the specified device context.", "GetViewportOrgEx": "The GetViewportOrgEx function retrieves the x-coordinates and y-coordinates of the viewport origin for the specified device context.", "GetWindowExtEx": "This function retrieves the x-extent and y-extent of the window for the specified device context.", "GetWindowOrgEx": "The GetWindowOrgEx function retrieves the x-coordinates and y-coordinates of the window origin for the specified device context.", "GetWinMetaFileBits": "The GetWinMetaFileBits function converts the enhanced-format records from a metafile into Windows-format records and stores the converted records in the specified buffer.", "GetWorldTransform": "The GetWorldTransform function retrieves the current world-space to page-space transformation.", "GetYValue": "The GetYValue macro retrieves the yellow color value from a CMYK color value.", "GradientFill": "The GradientFill function fills rectangle and triangle structures.", "IntersectClipRect": "The IntersectClipRect function creates a new clipping region from the intersection of the current clipping region and the specified rectangle.", "InvertRgn": "The InvertRgn function inverts the colors in the specified region.", "LineDD": "The LineDDA function determines which pixels should be highlighted for a line defined by the specified starting and ending points.", "LineTo": "The LineTo function draws a line from the current position up to, but not including, the specified point.", "LPtoDP": "The LPtoDP function converts logical coordinates into device coordinates. The conversion depends on the mapping mode of the device context, the settings of the origins and extents for the window and viewport, and the world transformation.", "MAKEPOINTS": "The MAKEPOINTS macro converts a value that contains the x- and y-coordinates of a point into a POINTS structure.", "MAKEROP4": "The MAKEROP4 macro creates a quaternary raster operation code for use with the MaskBlt function.", "MaskBlt": "The MaskBlt function combines the color data for the source and destination bitmaps using the specified mask and raster operation.", "ModifyWorldTransform": "The ModifyWorldTransform function changes the world transformation for a device context using the specified mode.", "MoveToEx": "The MoveToEx function updates the current position to the specified point and optionally returns the previous position.", "OffsetClipRgn": "The OffsetClipRgn function moves the clipping region of a device context by the specified offsets.", "OffsetRgn": "The OffsetRgn function moves a region by the specified offsets.", "OffsetViewportOrgEx": "The OffsetViewportOrgEx function modifies the viewport origin for a device context using the specified horizontal and vertical offsets.", "OffsetWindowOrgEx": "The OffsetWindowOrgEx function modifies the window origin for a device context using the specified horizontal and vertical offsets.", "PaintRgn": "The PaintRgn function paints the specified region by using the brush currently selected into the device context.", "PALETTEINDEX": "The PALETTEINDEX macro accepts an index to a logical-color palette entry and returns a palette-entry specifier consisting of a COLORREF value that specifies the color associated with the given index.", "PALETTERGB": "The PALETTERGB macro accepts three values that represent the relative intensities of red, green, and blue and returns a palette-relative red, green, blue (RGB) specifier consisting of 2 in the high-order byte and an RGB value in the three low-order bytes. An application using a color palette can pass this specifier, instead of an explicit RGB value, to functions that expect a color.", "PatBlt": "The PatBlt function paints the specified rectangle using the brush that is currently selected into the specified device context. The brush color and the surface color or colors are combined by using the specified raster operation.", "PathToRegion": "The PathToRegion function creates a region from the path that is selected into the specified device context. The resulting region uses device coordinates.", "Pie": "The Pie function draws a pie-shaped wedge bounded by the intersection of an ellipse and two radials. The pie is outlined by using the current pen and filled by using the current brush.", "PlayEnhMetaFile": "The PlayEnhMetaFile function displays the picture stored in the specified enhanced-format metafile.", "PlayEnhMetaFileRecord": "The PlayEnhMetaFileRecord function plays an enhanced-metafile record by executing the graphics device interface (GDI) functions identified by the record.", "PlayMetaFile": "The PlayMetaFile function displays the picture stored in the given Windows-format metafile on the specified device.", "PlayMetaFileRecord": "The PlayMetaFileRecord function plays a Windows-format metafile record by executing the graphics device interface (GDI) function contained within that record.", "PlgBlt": "The PlgBlt function performs a bit-block transfer of the bits of color data from the specified rectangle in the source device context to the specified parallelogram in the destination device context.", "PolyBezier": "The PolyBezier function draws one or more B\u00ef\u00bf\u00bdzier curves.", "PolyBezierTo": "The PolyBezierTo function draws one or more B\u00ef\u00bf\u00bdzier curves.", "PolyDraw": "The PolyDraw function draws a set of line segments and B\u00ef\u00bf\u00bdzier curves.", "Polygon": "The Polygon function draws a polygon consisting of two or more vertices connected by straight lines. The polygon is outlined by using the current pen and filled by using the current brush and polygon fill mode.", "Polyline": "The Polyline function draws a series of line segments by connecting the points in the specified array.", "PolylineTo": "The PolylineTo function draws one or more straight lines.", "PolyPolygon": "The PolyPolygon function draws a series of closed polygons. Each polygon is outlined by using the current pen and filled by using the current brush and polygon fill mode. The polygons drawn by this function can overlap.", "PolyPolyline": "The PolyPolyline function draws multiple series of connected line segments.", "PolyTextOut": "The PolyTextOut function draws several strings using the font and text colors currently selected in the specified device context.", "PtInRegion": "The PtInRegion function determines whether the specified point is inside the specified region.", "PtVisible": "The PtVisible function determines whether the specified point is within the clipping region of a device context.", "RealizePalette": "The RealizePalette function maps palette entries from the current logical palette to the system palette.", "Rectangle": "The Rectangle function draws a rectangle. The rectangle is outlined by using the current pen and filled by using the current brush.", "RectInRegion": "The RectInRegion function determines whether any part of the specified rectangle is within the boundaries of a region.", "RectVisible": "The RectVisible function determines whether any part of the specified rectangle lies within the clipping region of a device context.", "RemoveFontMemResourceEx": "The RemoveFontMemResourceEx function removes the fonts added from a memory image file.", "RemoveFontResource": "The RemoveFontResource function removes the fonts in the specified file from the system font table.", "RemoveFontResourceEx": "The RemoveFontResourceEx function removes the fonts in the specified file from the system font table.", "ResetDC": "The ResetDC function updates the specified printer or plotter device context (DC) using the specified information.", "ResizePalette": "The ResizePalette function increases or decreases the size of a logical palette based on the specified value.", "RestoreDC": "The RestoreDC function restores a device context (DC) to the specified state. The DC is restored by popping state information off a stack created by earlier calls to the SaveDC function.", "RGB": "The RGB macro selects a red, green, blue (RGB) color based on the arguments supplied and the color capabilities of the output device.", "RoundRect": "The RoundRect function draws a rectangle with rounded corners. The rectangle is outlined by using the current pen and filled by using the current brush.", "SaveDC": "The SaveDC function saves the current state of the specified device context (DC) by copying data describing selected objects and graphic modes (such as the bitmap, brush, palette, font, pen, region, drawing mode, and mapping mode) to a context stack.", "ScaleViewportExtEx": "The ScaleViewportExtEx function modifies the viewport for a device context using the ratios formed by the specified multiplicands and divisors.", "ScaleWindowExtEx": "The ScaleWindowExtEx function modifies the window for a device context using the ratios formed by the specified multiplicands and divisors.", "SelectClipPath": "The SelectClipPath function selects the current path as a clipping region for a device context, combining the new region with any existing clipping region using the specified mode.", "SelectClipRgn": "The SelectClipRgn function selects a region as the current clipping region for the specified device context.", "SelectObject": "The SelectObject function selects an object into the specified device context (DC). The new object replaces the previous object of the same type.", "SelectPalette": "The SelectPalette function selects the specified logical palette into a device context.", "SetAbortProc": "The SetAbortProc function sets the application-defined abort function that allows a print job to be canceled during spooling.", "SetArcDirection": "The SetArcDirection sets the drawing direction to be used for arc and rectangle functions.", "SetBitmapBits": "The SetBitmapBits function sets the bits of color data for a bitmap to the specified values.", "SetBitmapDimensionEx": "The SetBitmapDimensionEx function assigns preferred dimensions to a bitmap. These dimensions can be used by applications; however, they are not used by the system.", "SetBkColor": "The SetBkColor function sets the current background color to the specified color value, or to the nearest physical color if the device cannot represent the specified color value.", "SetBkMode": "The SetBkMode function sets the background mix mode of the specified device context. The background mix mode is used with text, hatched brushes, and pen styles that are not solid lines.", "SetBoundsRect": "The SetBoundsRect function controls the accumulation of bounding rectangle information for the specified device context.", "SetBrushOrgEx": "The SetBrushOrgEx function sets the brush origin that GDI assigns to the next brush an application selects into the specified device context.", "SetColorAdjustment": "The SetColorAdjustment function sets the color adjustment values for a device context (DC) using the specified values.", "SetColorSpace": "The SetColorSpace function defines the input color space for a given device context.", "SetDCBrushColor": "SetDCBrushColor function sets the current device context (DC) brush color to the specified color value. If the device cannot represent the specified color value, the color is set to the nearest physical color.", "SetDCPenColor": "SetDCPenColor function sets the current device context (DC) pen color to the specified color value. If the device cannot represent the specified color value, the color is set to the nearest physical color.", "SetDeviceGammaRamp": "The SetDeviceGammaRamp function sets the gamma ramp on direct color display boards having drivers that support downloadable gamma ramps in hardware.", "SetDIBColorTable": "The SetDIBColorTable function sets RGB (red, green, blue) color values in a range of entries in the color table of the DIB that is currently selected into a specified device context.", "SetDIBits": "The SetDIBits function sets the pixels in a compatible bitmap (DDB) using the color data found in the specified DIB.", "SetDIBitsToDevice": "The SetDIBitsToDevice function sets the pixels in the specified rectangle on the device that is associated with the destination device context using color data from a DIB, JPEG, or PNG image.", "SetEnhMetaFileBits": "The SetEnhMetaFileBits function creates a memory-based enhanced-format metafile from the specified data.", "SetGraphicsMode": "The SetGraphicsMode function sets the graphics mode for the specified device context.", "SetICMMode": "The SetICMMode function causes Image Color Management to be enabled, disabled, or queried on a given device context (DC).", "SetICMProfile": "The SetICMProfile function sets a specified color profile as the output profile for a specified device context (DC).", "SetLayout": "The SetLayout function changes the layout of a device context (DC).", "SetMapMode": "The SetMapMode function sets the mapping mode of the specified device context. The mapping mode defines the unit of measure used to transform page-space units into device-space units, and also defines the orientation of the device's x and y axes.", "SetMapperFlags": "The SetMapperFlags function alters the algorithm the font mapper uses when it maps logical fonts to physical fonts.", "SetMetaFileBitsEx": "The SetMetaFileBitsEx function creates a memory-based Windows-format metafile from the supplied data.", "SetMetaRgn": "The SetMetaRgn function intersects the current clipping region for the specified device context with the current metaregion and saves the combined region as the new metaregion for the specified device context.", "SetMiterLimit": "The SetMiterLimit function sets the limit for the length of miter joins for the specified device context.", "SetPaletteEntries": "The SetPaletteEntries function sets RGB (red, green, blue) color values and flags in a range of entries in a logical palette.", "SetPixel": "The SetPixel function sets the pixel at the specified coordinates to the specified color.", "SetPixelFormat": "The SetPixelFormat function sets the pixel format of the specified device context to the format specified by the iPixelFormat index.", "SetPixelV": "The SetPixelV function sets the pixel at the specified coordinates to the closest approximation of the specified color. The point must be in the clipping region and the visible part of the device surface.", "SetPolyFillMode": "The SetPolyFillMode function sets the polygon fill mode for functions that fill polygons.", "SetRectRgn": "The SetRectRgn function converts a region into a rectangular region with the specified coordinates.", "SetROP2": "The SetROP2 function sets the current foreground mix mode.", "SetStretchBltMode": "The SetStretchBltMode function sets the bitmap stretching mode in the specified device context.", "SetSystemPaletteUse": "The SetSystemPaletteUse function allows an application to specify whether the system palette contains 2 or 20 static colors.", "SetTextAlign": "The SetTextAlign function sets the text-alignment flags for the specified device context.", "SetTextCharacterExtra": "The SetTextCharacterExtra function sets the intercharacter spacing. Intercharacter spacing is added to each character, including break characters, when the system writes a line of text.", "SetTextColor": "The SetTextColor function sets the text color for the specified device context to the specified color.", "SetTextJustification": "The SetTextJustification function specifies the amount of space the system should add to the break characters in a string of text. The space is added when an application calls the TextOut or ExtTextOut functions.", "SetViewportExtEx": "Sets the horizontal and vertical extents of the viewport for a device context by using the specified values.", "SetViewportOrgEx": "The SetViewportOrgEx function specifies which device point maps to the window origin (0,0).", "SetWindowExtEx": "The SetWindowExtEx function sets the horizontal and vertical extents of the window for a device context by using the specified values.", "SetWindowOrgEx": "The SetWindowOrgEx function specifies which window point maps to the viewport origin (0,0).", "SetWinMetaFileBits": "The SetWinMetaFileBits function converts a metafile from the older Windows format to the new enhanced format and stores the new metafile in memory.", "SetWorldTransform": "The SetWorldTransform function sets a two-dimensional linear transformation between world space and page space for the specified device context. This transformation can be used to scale, rotate, shear, or translate graphics output.", "StartDoc": "The StartDoc function starts a print job.", "StartPage": "The StartPage function prepares the printer driver to accept data.", "StretchBlt": "The StretchBlt function copies a bitmap from a source rectangle into a destination rectangle, stretching or compressing the bitmap to fit the dimensions of the destination rectangle, if necessary.", "StretchDIBits": "The StretchDIBits function copies the color data for a rectangle of pixels in a DIB, JPEG, or PNG image to the specified destination rectangle.", "StrokeAndFillPath": "The StrokeAndFillPath function closes any open figures in a path, strokes the outline of the path by using the current pen, and fills its interior by using the current brush.", "StrokePath": "The StrokePath function renders the specified path by using the current pen.", "SwapBuffers": "The SwapBuffers function exchanges the front and back buffers if the current pixel format for the window referenced by the specified device context includes a back buffer.", "TextOut": "The TextOut function writes a character string at the specified location, using the currently selected font, background color, and text color.", "TranslateCharsetInfo": "Translates character set information and sets all members of a destination structure to appropriate values.", "TransparentBlt": "The TransparentBlt function performs a bit-block transfer of the color data corresponding to a rectangle of pixels from the specified source device context into a destination device context.", "UnrealizeObject": "The UnrealizeObject function resets the origin of a brush or resets a logical palette.", "UpdateColors": "The UpdateColors function updates the client area of the specified device context by remapping the current colors in the client area to the currently realized logical palette.", "UpdateICMRegKey": "The UpdateICMRegKey function manages color profiles and Color Management Modules in the system.", "wglCopyContext": "The wglCopyContext function copies selected groups of rendering states from one OpenGL rendering context to another.", "wglCreateContext": "The wglCreateContext function creates a new OpenGL rendering context, which is suitable for drawing on the device referenced by hdc. The rendering context has the same pixel format as the device context.", "wglCreateLayerContext": "The wglCreateLayerContext function creates a new OpenGL rendering context for drawing to a specified layer plane on a device context.", "wglDeleteContext": "The wglDeleteContext function deletes a specified OpenGL rendering context.", "wglDescribeLayerPlane": "The wglDescribeLayerPlane function obtains information about the layer planes of a given pixel format.", "wglGetCurrentContext": "The wglGetCurrentContext function obtains a handle to the current OpenGL rendering context of the calling thread.", "wglGetCurrentDC": "The wglGetCurrentDC function obtains a handle to the device context that is associated with the current OpenGL rendering context of the calling thread.", "wglGetLayerPaletteEntries": "Retrieves the palette entries from a given color-index layer plane for a specified device context.", "wglGetProcAddress": "The wglGetProcAddress function returns the address of an OpenGL extension function for use with the current OpenGL rendering context.", "wglMakeCurrent": "The wglMakeCurrent function makes a specified OpenGL rendering context the calling thread's current rendering context.", "wglRealizeLayerPalette": "The wglRealizeLayerPalette function maps palette entries from a given color-index layer plane into the physical palette or initializes the palette of an RGBA layer plane.", "wglSetLayerPaletteEntries": "Sets the palette entries in a given color-index layer plane for a specified device context.", "wglShareLists": "The wglShareLists function enables multiple OpenGL rendering contexts to share a single display-list space.", "wglSwapLayerBuffers": "The wglSwapLayerBuffers function swaps the front and back buffers in the overlay, underlay, and main planes of the window referenced by a specified device context.", "wglUseFontBitmaps": "The wglUseFontBitmaps function creates a set of bitmap display lists for use in the current OpenGL rendering context.", "wglUseFontOutlines": "The wglUseFontOutlines function creates a set of display lists, one for each glyph of the currently selected outline font of a device context, for use with the current rendering context.", "WidenPath": "The WidenPath function redefines the current path as the area that would be painted if the path were stroked using the pen currently selected into the given device context."}